{"version":3,"sources":["assets/logo.svg","utils/utils.tsx","utils/fetch-loop.tsx","utils/connection.tsx","components/Link.js","utils/notifications.tsx","utils/wallet.tsx","utils/send.tsx","utils/tokens.tsx","utils/bonfidaConnector.tsx","utils/markets.tsx","global_style.ts","components/ErrorBoundary.jsx","utils/useInterval.tsx","components/layout/FloatingElement.jsx","components/Orderbook.jsx","utils/usePrevious.tsx","components/layout/DataTable.jsx","components/UserInfoTable/BalancesTable.jsx","components/UserInfoTable/OpenOrderTable.tsx","components/UserInfoTable/FillsTable.jsx","components/UserInfoTable/FeesTable.js","components/UserInfoTable/index.jsx","components/DepositDialog.jsx","components/StandaloneTokenAccountSelect.tsx","components/LinkAddress.tsx","components/StandaloneBalancesDisplay.tsx","components/TradeForm.tsx","components/TradesTable.tsx","components/DeprecatedMarketsInstructions.js","components/CustomMarketDialog.jsx","pages/TradePage.tsx","pages/OpenOrdersPage.tsx","components/UserInfoTable/WalletBalancesTable.tsx","pages/BalancesPage.tsx","components/WalletConnect.tsx","components/ConvertForm.tsx","pages/ConvertPage.tsx","utils/preferences.tsx","components/Settings.jsx","components/CustomClusterEndpointDialog.tsx","components/AppSearch.tsx","components/TopBar.tsx","components/HelpUrls.ts","components/Footer.tsx","components/BasicLayout.js","components/useMintInput.tsx","pages/ListNewMarketPage.jsx","pages/pools/NewPoolPage.tsx","pages/pools/PoolPage/PoolBasketDisplay.tsx","pages/pools/PoolPage/PoolInfoPanel.tsx","pages/pools/PoolPage/PoolCreateRedeemPanel.tsx","pages/pools/PoolPage/PoolBalancesPanel.tsx","pages/pools/PoolPage/index.tsx","pages/pools/PoolListPage.tsx","routes.tsx","App.tsx","serviceWorker.js","index.js"],"names":["module","exports","isValidPublicKey","key","PublicKey","sleep","ms","a","Promise","resolve","setTimeout","percentFormat","Intl","NumberFormat","undefined","style","minimumFractionDigits","maximumFractionDigits","floorToDecimal","value","decimals","Math","floor","roundToDecimal","round","getDecimalCount","isNaN","toString","split","length","divideBnToNumber","numerator","denominator","quotient","div","toNumber","rem","umod","gcd","getTokenMultiplierFromDecimals","BN","pow","localStorageListeners","useLocalStorageStringState","defaultState","state","localStorage","getItem","useState","notify","useEffect","push","filter","listener","setState","useCallback","newState","removeItem","setItem","forEach","useLocalStorageState","JSON","stringify","stringState","setStringState","parse","abbreviateAddress","address","size","base58","toBase58","slice","isEqual","obj1","obj2","keys","Object","k","pageLoadTime","Date","globalCache","Map","FetchLoopListener","cacheKey","fn","refreshInterval","refreshIntervalOnError","callback","cacheNullValues","this","FetchLoopInternal","timeoutId","listeners","errors","refresh","clearTimeout","stopped","errored","data","console","log","set","notifyListeners","warn","waitTime","min","timeSincePageLoad","document","visibilityState","hasFocus","random","Set","previousRefreshInterval","add","assert","delete","map","refreshIntervalsOnError","x","globalLoops","loops","has","get","addListener","loop","removeListener","all","values","useAsyncData","asyncFn","useReducer","i","rerender","loaded","refreshCache","clearCache","ENDPOINTS","name","endpoint","custom","accountListenerCount","ConnectionContext","React","createContext","ConnectionProvider","children","setEndpoint","customEndpoints","setCustomEndpoints","availableEndpoints","concat","connection","useMemo","Connection","sendConnection","id","onAccountChange","Account","publicKey","removeAccountChangeListener","onSlotChange","removeSlotChangeListener","Provider","useConnection","context","useContext","Error","useSendConnection","useConnectionConfig","endpointInfo","find","info","useAccountInfo","tuple","getAccountInfo","accountInfo","count","previousData","subscriptionId","e","equals","initializeOnly","setCache","currentItem","useAccountData","Link","external","props","to","rest","href","target","rel","message","description","txid","type","placement","color","notification","opacity","backgroundColor","WALLET_PROVIDERS","url","WalletContext","WalletProvider","providerUrl","savedProviderUrl","setProviderUrl","wallet","Wallet","connected","setConnected","on","walletPublicKey","substring","disconnect","providerName","useWallet","setProvider","createTokenAccountTransaction","mintPublicKey","newAccount","transaction","Transaction","SystemProgram","getMinimumBalanceForRentExemption","TokenInstructions","TOKEN_PROGRAM_ID","fromPubkey","newAccountPubkey","lamports","space","programId","instruction","createAccount","initializeAccount","account","mint","owner","signer","settleFunds","market","openOrders","baseCurrencyAccount","quoteCurrencyAccount","baseCurrencyAccountPubkey","pubkey","quoteCurrencyAccountPubkey","baseMintAddress","result","createAccountTransaction","createAccountSigner","quoteMintAddress","referrerQuoteWallet","supportsReferralFees","usdt","TOKEN_MINTS","usdc","process","makeSettleFundsTransaction","settleFundsTransaction","settleFundsSigners","signers","mergeTransactions","sendTransaction","sendingMessage","settleAllFunds","tokenAccounts","markets","selectedTokenAccounts","programIds","reduce","cumulative","m","_programId","p","getOpenOrdersAccountsForProgramId","OpenOrders","findForOwner","openOrdersAccounts","baseTokenFree","quoteTokenFree","openOrdersAccountsForProgramIds","accounts","current","openOrdersAccount","_decoded","ownAddress","baseMint","quoteMint","selectedBaseTokenAccount","getSelectedTokenAccountForMint","selectedQuoteTokenAccount","settleTransactions","transactions","t","s","cancelOrder","params","cancelOrders","orders","order","makeMatchOrdersTransaction","makeCancelOrderInstruction","placeOrder","side","price","orderType","formattedMinOrderSize","minOrderSize","toFixed","formattedTickSize","tickSize","isIncrement","num","step","abs","createAccountSigners","payer","matchOrderstransaction","makePlaceOrderTransaction","placeOrderTx","placeOrderSigners","listMarket","getVaultOwnerAndNonce","nonce","createProgramAddress","toBuffer","toArrayLike","Buffer","dexProgramId","vaultOwner","iaddn","baseLotSize","quoteLotSize","requestQueue","eventQueue","bids","asks","baseVault","quoteVault","feeRateBps","quoteDustThreshold","vaultSignerNonce","tx1","tx2","Market","getLayout","span","DexInstructions","initializeMarket","signTransaction","signedTransactions","signedTransaction","sendSignedTransaction","getUnixTs","getTime","sentMessage","successMessage","timeout","getRecentBlockhash","recentBlockhash","blockhash","setSigners","partialSign","rawTransaction","serialize","startTime","sendRawTransaction","skipPreflight","done","awaitTransactionSignatureConfirmation","reject","onSignature","err","getSignatureStatuses","signatureStatuses","confirmations","resultDescription","AccountInfoResult","struct","executable","rentEpoch","GetMultipleAccountsAndContextRpcResult","array","union","jsonRpcVersion","literal","jsonrpc","error","jsonRpcResult","slot","getMultipleSolanaAccounts","publicKeys","args","commitment","_rpcRequest","unsafeRes","res","join","from","fromEntries","ACCOUNT_LAYOUT","BufferLayout","MINT_LAYOUT","parseTokenAccountData","decode","amount","parseTokenMintData","initialized","supply","getOwnedAccountsFilters","memcmp","offset","offsetOf","bytes","dataSize","getOwnedTokenAccounts","filters","resp","bs58","every","filterBytes","getTokenAccountInfo","ownerAddress","splAccounts","parsedSplAccounts","effectiveMint","WRAPPED_SOL_MINT","useMintInfos","customMarkets","useMarket","useTokenAccounts","useAllMarkets","allMarkets","allMints","marketInfo","uniqueMints","stringMint","mintInfos","entries","BonfidaApi","path","fetch","URL","response","ok","json","responseJson","success","marketAddress","USE_MARKETS","MARKETS","getMarketInfos","load","marketName","_VERY_SLOW_REFRESH_INTERVAL","useUnmigratedOpenOrdersAccounts","deprecatedOpenOrdersAccounts","deprecatedProgramIds","Array","deprecated","publicKeyStr","baseTokenTotal","quoteTokenTotal","some","MarketContext","DEFAULT_MARKET","getMarketDetails","otherMarket","baseCurrency","token","baseLabel","quoteCurrency","quoteLabel","MarketProvider","setMarketAddress","setCustomMarkets","marketInfos","setMarket","then","catch","useSelectedTokenAccounts","useMarkPrice","markPrice","setMarkPrice","useOrderbook","orderbook","trades","limit","_useUnfilteredTrades","eventFlags","maker","trade","useTrades","bb","Number","ba","last","sort","b","getUnfilteredTrades","loadFills","useOrderbookAccounts","bidData","askData","bidOrderbook","Orderbook","askOrderbook","depth","getL2","useOpenOrdersAccounts","fast","getOpenOrdersAccounts","findOpenOrdersAccountsForOwner","useSelectedOpenOrdersAccount","selectedPubKey","filtered","useSelectedQuoteCurrencyAccount","mintAddress","useSelectedBaseCurrencyAccount","useSelectedQuoteCurrencyBalances","quoteSplSizeToNumber","useSelectedBaseCurrencyBalances","baseSplSizeToNumber","useAllOpenOrdersAccounts","stringProgramId","flat","useBalances","baseCurrencyBalances","quoteCurrencyBalances","baseExists","quoteExists","coin","sub","unsettled","useUnmigratedDeprecatedMarkets","marketsList","deps","getMarket","openOrdersList","customMarketsInfo","getMarketOrderPrice","cost","tickSizeDecimals","isBids","costAtLevel","spentCost","sendPrice","getExpectedFillPrice","sizeAtLevel","avgPrice","totalAvgPrice","GlobalStyle","createGlobalStyle","Title","Typography","ErrorBoundary","hasError","level","Component","useInterval","delay","savedCallback","useRef","setInterval","clearInterval","Wrapper","styled","FloatingElement","stretchVertical","height","SizeTitle","Row","MarkPriceTitle","Line","css","Price","smallScreen","onPrice","onSize","currentOrderbookData","lastOrderbookData","orderbookData","setOrderbookData","getCumulativeOrderbookSide","totalSize","backwards","cumulativeSize","sizePercent","reverse","sum","total","index","bidsToDisplay","asksToDisplay","flex","overflow","textAlign","OrderbookRow","onPriceClick","onSizeClick","MarkPriceComponent","memo","element","classList","contains","remove","formattedSize","formattedPrice","ref","marginBottom","onClick","data-width","data-bgcolor","prevProps","nextProps","previousMarkPrice","usePrevious","markPriceColor","formattedMarkPrice","justify","ArrowUpOutlined","marginRight","ArrowDownOutlined","DataTable","dataSource","columns","emptyLabel","pagination","loading","pageSize","renderEmpty","padding","display","justifyContent","alignItems","BalancesTable","balances","showMarket","hideWalletBalance","onSettleSuccess","title","dataIndex","render","ghost","onSettleFunds","CancelButton","Button","OpenOrderTable","onCancelSuccess","marketFilter","cancelId","setCancelId","orderId","marketFilters","orderInfos","text","onFilter","record","indexOf","fontWeight","charAt","toUpperCase","sorter","showSorterTooltip","icon","DeleteOutlined","cancel","FillsTable","fills","fill","useFills","liquidity","FeesTable","findFeeDiscountKeys","useFeeDiscountKeys","feeTier","row","marginLeft","format","getFeeRates","taker","_","SRM_MINT","MSRM_MINT","marginTop","FeeScheduleTable","balance","Paragraph","TabPane","Tabs","Index","paddingTop","defaultActiveKey","tab","supportsSrmFeeDiscounts","OpenOrdersTab","filterForOpenOrders","useOpenOrders","BalancesTab","DepositDialog","coinMint","depositCoin","onClose","baseOrQuote","visible","onOk","onCancel","StandaloneTokenAccountsSelect","selectedValue","label","setSelectedTokenAccounts","Fragment","width","onSelect","newSelectedTokenAccounts","Option","Text","code","shape","CopyOutlined","navigator","clipboard","writeText","LinkAddress","LinkOutlined","RowBox","Tip","ActionButton","StandaloneBalancesDisplay","setBaseOrQuote","formattedBalances","currency","borderColor","content","trigger","InfoCircleOutlined","align","paddingBottom","block","SellButton","BuyButton","sliderMarks","0","25","50","75","100","TradeForm","setChangeOrderRef","setSide","postOnly","setPostOnly","ioc","setIoc","baseSize","setBaseSize","quoteSize","setQuoteSize","setPrice","submitting","setSubmitting","sizeFraction","setSizeFraction","quoteBalance","baseBalance","sizeDecimalCount","priceDecimalCount","doChangeOrder","onSliderChange","updateSizeFraction","onSetBaseSize","usePrice","maxSize","parseFloat","newSize","formatted","onSubmit","flexDirection","Group","onChange","buttonStyle","background","addonBefore","suffix","fontSize","compact","onSetQuoteSize","tipFormatter","marks","checked","disabled","PublicTrades","getRecentTrades","useBonfidaTrades","minHeight","maxHeight","paddingRight","overflowY","time","toLocaleTimeString","DeprecatedMarketsInstructions","switchToLiveMarkets","openOrderAccountBalances","inOrdersBase","inOrdersQuote","unsettledBase","unsettledQuote","useBalancesForDeprecatedMarkets","marketsAndOrders","getOrders","loadOrdersForOwner","refreshOpenOrders","useGetOpenOrdersForDeprecatedMarkets","needToCancelOrders","filteredBalances","needToSettleFunds","CustomMarketDialog","onAddCustomMarket","marketId","setMarketId","marketLabel","setMarketLabel","setBaseLabel","setQuoteLabel","loadingMarket","setLoadingMarket","wellFormedMarketId","marketAccountInfo","resetLabels","finally","knownMarket","knownProgram","knownBaseCurrency","knownQuoteCurrency","canSubmit","onDoClose","okText","okButtonProps","placeholder","LoadingOutlined","gutter","Select","OptGroup","TradePage","handleDeprecated","setHandleDeprecated","addMarketVisible","setAddMarketVisible","deprecatedMarkets","window","innerHeight","innerWidth","dimensions","setDimensions","changeOrderRef","handleResize","addEventListener","removeEventListener","componentProps","onChangeOrderRef","getComponent","customMarket","newCustomMarkets","paddingLeft","MarketSelector","onDeleteCustomMarket","PlusCircleOutlined","extractBase","extractQuote","selectedMarket","proposedMarket","showSearch","optionFilterProp","listHeight","filterOption","input","option","toLowerCase","stopPropagation","nativeEvent","stopImmediatePropagation","DeprecatedMarketsPage","RenderNormal","flexWrap","RenderSmall","RenderSmaller","xs","sm","OpenOrdersPage","openOrdersAccountsConnected","marketInfosConnected","openOrdersAccountsByAddress","marketsAddr","marketsByAddress","getAllOpenOrders","marketAddr","loadBids","loadAsks","useAllOpenOrders","marketAddressesToNames","WalletBalancesTable","walletBalances","tokenAccountsConnected","allMarketsConnected","settlingFunds","setSettlingFunds","walletBalance","BalancesPage","mintInfosConnected","parsedAccount","mintInfo","additionalAmount","useWalletBalancesForAllMarkets","mintToTickers","mintsToTickers","customMarketInfo","useMintToTickers","openOrdersBalances","loadedOpenOrdersAccounts","baseMintInfo","baseFree","baseTotal","quoteMintInfo","quoteFree","quoteTotal","free","useAllOpenOrdersBalances","openOrdersFree","openOrdersTotal","WalletConnect","connect","UserOutlined","ConvertButton","ConvertForm","fromToken","setFromToken","toToken","setToToken","setSize","marketInfosbyName","tokenConvertMap","base","quote","maxWidth","minWidth","ConvertFormSubmit","fromAmount","setFromAmount","toAmount","setToAmount","isConverting","setIsConverting","isFromTokenBaseOfMarket","onConvert","sidedOrderbookAccount","decodedOrderbookData","parsedPrice","parsedSize","getPrice","expectedPrice","canConvert","coinBalance","availableBalance","SwapOutlined","ConvertPage","PreferencesContext","PreferencesProvider","autoSettleEnabled","setAutoSettleEnabled","marketList","autoSettle","autoApprove","Settings","usePreferences","CustomClusterEndpointDialog","testingConnection","onAddCustomEndpoint","customEndpoint","setCustomEndpoint","customEndpointName","setCustomEndpointName","appsAndTokens","apps","AppSearch","searchMatches","setSearchMatches","searchValue","setSearchValue","handleClear","options","d","replace","allowClear","focussed","onSearch","filteredApps","app","searchString","lowerSearchStr","includes","tags","tag","matchApp","onClear","open","onFocus","onBlur","notFoundContent","transition","dropdownStyle","dropdownMatchSelectWidth","suffixIcon","SearchOutlined","focus","LogoWrapper","EXTERNAL_LINKS","TopBar","addEndpointVisible","setAddEndpointVisible","setTestingConnection","location","useLocation","history","useHistory","searchFocussed","setSearchFocussed","handleClick","endpointInfoCustom","handler","handleError","getEpochInfo","newCustomEndpoints","src","logo","alt","mode","selectedKeys","pathname","borderBottom","Item","margin","SubMenu","onTitleClick","SettingOutlined","helpUrls","Footer","Layout","useBreakpoint","Grid","footerElements","link","CustomFooter","lg","elem","Header","Content","BasicLayout","useMintInput","tooltip","setAddress","validateStatus","hasFeedback","help","parsed","trim","ListNewMarketPage","baseMintInput","quoteMintInput","lotSize","setLotSize","setTickSize","listedMarket","setListedMarket","labelCol","wrapperCol","layout","onFinish","initialValue","colon","htmlType","AddRemoveTokenButtons","DEFAULT_PROGRAM_ID","NewPoolPage","poolName","setPoolName","setProgramId","initialSupply","setInitialSupply","valid","initialAssets","setInitialAssets","newPoolAddress","setNewPoolAddress","asset","assets","PoolTransactions","initializeSimplePool","poolStateSpace","poolMintDecimals","initialPoolMintSupply","assetMints","initialAssetQuantities","quantity","creator","creatorAssets","found","tokenAccount","poolAddress","signed","AssetInput","mintInput","setQuantity","change","parsedQuantity","old","PoolBasketDisplay","poolInfo","basket","BasketItem","quantities","mintAccountInfo","quantityDisplay","PoolInfoPanel","getPoolBasket","redeem","totalBasket","copyable","poolTokenMint","PoolCreateRedeemPanel","CreateRedeemTab","action","create","basketLoaded","findTokenAccount","preventDefault","execute","poolTokenAccount","assetAccounts","PoolBalancesPanel","WalletBalancesTab","PoolBalancesTab","BalanceItem","vaultAddress","balanceAccountInfo","PoolPage","useParams","isPublicKey","poolAccountInfo","poolAccountLoaded","decodePoolState","program","mintAccountInfoLoaded","onBack","subTitle","Form","form","PoolListPage","setPoolAddress","Routes","basename","exact","component","App","fallback","Boolean","hostname","match","ReactDOM","StrictMode","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.03c222de.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.49174c73.svg\";","import { useCallback, useEffect, useState } from 'react';\r\nimport { PublicKey } from '@solana/web3.js';\r\nimport BN from 'bn.js';\r\n\r\nexport function isValidPublicKey(key) {\r\n  if (!key) {\r\n    return false;\r\n  }\r\n  try {\r\n    new PublicKey(key);\r\n    return true;\r\n  } catch {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport async function sleep(ms) {\r\n  return new Promise((resolve) => setTimeout(resolve, ms));\r\n}\r\n\r\nexport const percentFormat = new Intl.NumberFormat(undefined, {\r\n  style: 'percent',\r\n  minimumFractionDigits: 2,\r\n  maximumFractionDigits: 2,\r\n});\r\n\r\nexport function floorToDecimal(\r\n  value: number,\r\n  decimals: number | undefined | null,\r\n) {\r\n  return decimals ? Math.floor(value * 10 ** decimals) / 10 ** decimals : value;\r\n}\r\n\r\nexport function roundToDecimal(\r\n  value: number,\r\n  decimals: number | undefined | null,\r\n) {\r\n  return decimals ? Math.round(value * 10 ** decimals) / 10 ** decimals : value;\r\n}\r\n\r\nexport function getDecimalCount(value): number {\r\n  if (!isNaN(value) && Math.floor(value) !== value)\r\n    return value.toString().split('.')[1].length || 0;\r\n  return 0;\r\n}\r\n\r\nexport function divideBnToNumber(numerator: BN, denominator: BN): number {\r\n  const quotient = numerator.div(denominator).toNumber();\r\n  const rem = numerator.umod(denominator);\r\n  const gcd = rem.gcd(denominator);\r\n  return quotient + rem.div(gcd).toNumber() / denominator.div(gcd).toNumber();\r\n}\r\n\r\nexport function getTokenMultiplierFromDecimals(decimals: number): BN {\r\n  return new BN(10).pow(new BN(decimals));\r\n}\r\n\r\nconst localStorageListeners = {};\r\n\r\nexport function useLocalStorageStringState(\r\n  key: string,\r\n  defaultState: string | null = null,\r\n): [string | null, (newState: string | null) => void] {\r\n  const state = localStorage.getItem(key) || defaultState;\r\n\r\n  const [, notify] = useState(key + '\\n' + state);\r\n\r\n  useEffect(() => {\r\n    if (!localStorageListeners[key]) {\r\n      localStorageListeners[key] = [];\r\n    }\r\n    localStorageListeners[key].push(notify);\r\n    return () => {\r\n      localStorageListeners[key] = localStorageListeners[key].filter(\r\n        (listener) => listener !== notify,\r\n      );\r\n      if (localStorageListeners[key].length === 0) {\r\n        delete localStorageListeners[key];\r\n      }\r\n    };\r\n  }, [key]);\r\n\r\n  const setState = useCallback<(newState: string | null) => void>(\r\n    (newState) => {\r\n      const changed = state !== newState;\r\n      if (!changed) {\r\n        return;\r\n      }\r\n\r\n      if (newState === null) {\r\n        localStorage.removeItem(key);\r\n      } else {\r\n        localStorage.setItem(key, newState);\r\n      }\r\n      localStorageListeners[key].forEach((listener) =>\r\n        listener(key + '\\n' + newState),\r\n      );\r\n    },\r\n    [state, key],\r\n  );\r\n\r\n  return [state, setState];\r\n}\r\n\r\nexport function useLocalStorageState<T = any>(\r\n  key: string,\r\n  defaultState: T | null = null,\r\n): [T, (newState: T) => void] {\r\n  let [stringState, setStringState] = useLocalStorageStringState(\r\n    key,\r\n    JSON.stringify(defaultState),\r\n  );\r\n  return [\r\n    stringState && JSON.parse(stringState),\r\n    (newState) => setStringState(JSON.stringify(newState)),\r\n  ];\r\n}\r\n\r\nexport function useEffectAfterTimeout(effect, timeout) {\r\n  useEffect(() => {\r\n    const handle = setTimeout(effect, timeout);\r\n    return () => clearTimeout(handle);\r\n  });\r\n}\r\n\r\nexport function useListener(emitter, eventName) {\r\n  const [, forceUpdate] = useState(0);\r\n  useEffect(() => {\r\n    const listener = () => forceUpdate((i) => i + 1);\r\n    emitter.on(eventName, listener);\r\n    return () => emitter.removeListener(eventName, listener);\r\n  }, [emitter, eventName]);\r\n}\r\n\r\nexport function abbreviateAddress(address, size = 4) {\r\n  const base58 = address.toBase58();\r\n  return base58.slice(0, size) + '…' + base58.slice(-size);\r\n}\r\n\r\nexport function isEqual(obj1, obj2, keys) {\r\n  if (!keys && Object.keys(obj1).length !== Object.keys(obj2).length) {\r\n    return false;\r\n  }\r\n  keys = keys || Object.keys(obj1);\r\n  for (const k of keys) {\r\n    if (obj1[k] !== obj2[k]) {\r\n      // shallow comparison\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n","import { useEffect, useReducer } from 'react';\r\n\r\nimport assert from 'assert';\r\n\r\nconst pageLoadTime = new Date();\r\n\r\nconst globalCache: Map<any, any> = new Map();\r\n\r\nclass FetchLoopListener<T = any> {\r\n  cacheKey: any;\r\n  fn: () => Promise<T>;\r\n  refreshInterval: number;\r\n  refreshIntervalOnError: number | null;\r\n  callback: () => void;\r\n  cacheNullValues: Boolean = true;\r\n\r\n  constructor(\r\n    cacheKey: any,\r\n    fn: () => Promise<T>,\r\n    refreshInterval: number,\r\n    refreshIntervalOnError: number | null,\r\n    callback: () => void,\r\n    cacheNullValues: Boolean,\r\n  ) {\r\n    this.cacheKey = cacheKey;\r\n    this.fn = fn;\r\n    this.refreshInterval = refreshInterval;\r\n    this.refreshIntervalOnError = refreshIntervalOnError;\r\n    this.callback = callback;\r\n    this.cacheNullValues = cacheNullValues;\r\n  }\r\n}\r\n\r\nclass FetchLoopInternal<T = any> {\r\n  cacheKey: any;\r\n  fn: () => Promise<T>;\r\n  timeoutId: null | any;\r\n  listeners: Set<FetchLoopListener<T>>;\r\n  errors: number;\r\n  cacheNullValues: Boolean = true;\r\n\r\n  constructor(cacheKey: any, fn: () => Promise<T>, cacheNullValues: Boolean) {\r\n    this.cacheKey = cacheKey;\r\n    this.fn = fn;\r\n    this.timeoutId = null;\r\n    this.listeners = new Set();\r\n    this.errors = 0;\r\n    this.cacheNullValues = cacheNullValues;\r\n  }\r\n\r\n  get refreshInterval(): number {\r\n    return Math.min(\r\n      ...[...this.listeners].map((listener) => listener.refreshInterval),\r\n    );\r\n  }\r\n\r\n  get refreshIntervalOnError(): number | null {\r\n    const refreshIntervalsOnError: number[] = [...this.listeners]\r\n      .map((listener) => listener.refreshIntervalOnError)\r\n      .filter((x): x is number => x !== null);\r\n    if (refreshIntervalsOnError.length === 0) {\r\n      return null;\r\n    }\r\n    return Math.min(...refreshIntervalsOnError);\r\n  }\r\n\r\n  get stopped(): boolean {\r\n    return this.listeners.size === 0;\r\n  }\r\n\r\n  addListener(listener: FetchLoopListener<T>): void {\r\n    const previousRefreshInterval = this.refreshInterval;\r\n    this.listeners.add(listener);\r\n    if (this.refreshInterval < previousRefreshInterval) {\r\n      this.refresh();\r\n    }\r\n  }\r\n\r\n  removeListener(listener: FetchLoopListener<T>): void {\r\n    assert(this.listeners.delete(listener));\r\n    if (this.stopped) {\r\n      if (this.timeoutId) {\r\n        clearTimeout(this.timeoutId);\r\n        this.timeoutId = null;\r\n      }\r\n    }\r\n  }\r\n\r\n  notifyListeners(): void {\r\n    this.listeners.forEach((listener) => listener.callback());\r\n  }\r\n\r\n  refresh = async () => {\r\n    if (this.timeoutId) {\r\n      clearTimeout(this.timeoutId);\r\n      this.timeoutId = null;\r\n    }\r\n    if (this.stopped) {\r\n      return;\r\n    }\r\n\r\n    let errored = false;\r\n    try {\r\n      const data = await this.fn();\r\n      if (!this.cacheNullValues && data === null) {\r\n        console.log(`Not caching null value for ${this.cacheKey}`);\r\n        // cached data has not changed so no need to re-render\r\n        this.errors = 0;\r\n        return data;\r\n      } else {\r\n        globalCache.set(this.cacheKey, data);\r\n        this.errors = 0;\r\n        this.notifyListeners();\r\n        return data;\r\n      }\r\n    } catch (error) {\r\n      ++this.errors;\r\n      console.warn(error);\r\n      errored = true;\r\n    } finally {\r\n      if (!this.timeoutId && !this.stopped) {\r\n        let waitTime = this.refreshInterval;\r\n        if (\r\n          errored &&\r\n          this.refreshIntervalOnError &&\r\n          this.refreshIntervalOnError > 0\r\n        ) {\r\n          waitTime = this.refreshIntervalOnError;\r\n        }\r\n\r\n        // Back off on errors.\r\n        if (this.errors > 0) {\r\n          waitTime = Math.min(1000 * 2 ** (this.errors - 1), 60000);\r\n        }\r\n\r\n        // Don't do any refreshing for the first five seconds, to make way for other things to load.\r\n        const timeSincePageLoad = +new Date() - +pageLoadTime;\r\n        if (timeSincePageLoad < 5000) {\r\n          waitTime += 5000 - timeSincePageLoad / 2;\r\n        }\r\n\r\n        // Refresh background pages slowly.\r\n        if (document.visibilityState === 'hidden') {\r\n          waitTime = 60000;\r\n        } else if (!document.hasFocus()) {\r\n          waitTime *= 1.5;\r\n        }\r\n\r\n        // Add jitter so we don't send all requests at the same time.\r\n        waitTime *= 0.8 + 0.4 * Math.random();\r\n\r\n        this.timeoutId = setTimeout(this.refresh, waitTime);\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\nclass FetchLoops {\r\n  loops = new Map();\r\n\r\n  addListener<T>(listener: FetchLoopListener<T>) {\r\n    if (!this.loops.has(listener.cacheKey)) {\r\n      this.loops.set(\r\n        listener.cacheKey,\r\n        new FetchLoopInternal<T>(\r\n          listener.cacheKey,\r\n          listener.fn,\r\n          listener.cacheNullValues,\r\n        ),\r\n      );\r\n    }\r\n    this.loops.get(listener.cacheKey).addListener(listener);\r\n  }\r\n\r\n  removeListener<T>(listener: FetchLoopListener<T>) {\r\n    const loop = this.loops.get(listener.cacheKey);\r\n    loop.removeListener(listener);\r\n    if (loop.stopped) {\r\n      this.loops.delete(listener.cacheKey);\r\n    }\r\n  }\r\n\r\n  refresh(cacheKey) {\r\n    if (this.loops.has(cacheKey)) {\r\n      this.loops.get(cacheKey).refresh();\r\n    }\r\n  }\r\n\r\n  refreshAll() {\r\n    return Promise.all([...this.loops.values()].map((loop) => loop.refresh()));\r\n  }\r\n}\r\nconst globalLoops = new FetchLoops();\r\n\r\nexport function useAsyncData<T = any>(\r\n  asyncFn: () => Promise<T>,\r\n  cacheKey: any,\r\n  { refreshInterval = 60000, refreshIntervalOnError = null } = {},\r\n  cacheNullValues: Boolean = true,\r\n): [null | undefined | T, boolean] {\r\n  const [, rerender] = useReducer((i) => i + 1, 0);\r\n\r\n  useEffect(() => {\r\n    if (!cacheKey) {\r\n      // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n      return () => {};\r\n    }\r\n    const listener = new FetchLoopListener<T>(\r\n      cacheKey,\r\n      asyncFn,\r\n      refreshInterval,\r\n      refreshIntervalOnError,\r\n      rerender,\r\n      cacheNullValues,\r\n    );\r\n    globalLoops.addListener(listener);\r\n    return () => globalLoops.removeListener(listener);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [cacheKey, refreshInterval]);\r\n\r\n  if (!cacheKey) {\r\n    return [null, false];\r\n  }\r\n\r\n  const loaded = globalCache.has(cacheKey);\r\n  const data = loaded ? globalCache.get(cacheKey) : undefined;\r\n  return [data, loaded];\r\n}\r\n\r\nexport function refreshCache(cacheKey: any, clearCache = false): void {\r\n  if (clearCache) {\r\n    globalCache.delete(cacheKey);\r\n  }\r\n  const loop = globalLoops.loops.get(cacheKey);\r\n  if (loop) {\r\n    loop.refresh();\r\n    if (clearCache) {\r\n      loop.notifyListeners();\r\n    }\r\n  }\r\n}\r\n\r\nexport function refreshAllCaches(): void {\r\n  for (const loop of globalLoops.loops.values()) {\r\n    loop.refresh();\r\n  }\r\n}\r\n\r\nexport function setCache(\r\n  cacheKey: any,\r\n  value: any,\r\n  { initializeOnly = false } = {},\r\n): void {\r\n  if (initializeOnly && globalCache.has(cacheKey)) {\r\n    return;\r\n  }\r\n  globalCache.set(cacheKey, value);\r\n  const loop = globalLoops.loops.get(cacheKey);\r\n  if (loop) {\r\n    loop.notifyListeners();\r\n  }\r\n}\r\n","import { useLocalStorageState } from './utils';\r\nimport { Account, AccountInfo, Connection, PublicKey } from '@solana/web3.js';\r\nimport React, { useContext, useEffect, useMemo } from 'react';\r\nimport { setCache, useAsyncData } from './fetch-loop';\r\nimport tuple from 'immutable-tuple';\r\nimport { ConnectionContextValues, EndpointInfo } from './types';\r\n\r\nexport const ENDPOINTS: EndpointInfo[] = [\r\n  {\r\n    name: 'mainnet-beta',\r\n    endpoint: 'https://solana-api.projectserum.com',\r\n    custom: false,\r\n  },\r\n  { name: 'localnet', endpoint: 'http://127.0.0.1:8899', custom: false },\r\n];\r\n\r\nconst accountListenerCount = new Map();\r\n\r\nconst ConnectionContext: React.Context<null | ConnectionContextValues> = React.createContext<null | ConnectionContextValues>(\r\n  null,\r\n);\r\n\r\nexport function ConnectionProvider({ children }) {\r\n  const [endpoint, setEndpoint] = useLocalStorageState<string>(\r\n    'connectionEndpts',\r\n    ENDPOINTS[0].endpoint,\r\n  );\r\n  const [customEndpoints, setCustomEndpoints] = useLocalStorageState<\r\n    EndpointInfo[]\r\n  >('customConnectionEndpoints', []);\r\n  const availableEndpoints = ENDPOINTS.concat(customEndpoints);\r\n\r\n  const connection = useMemo(() => new Connection(endpoint, 'recent'), [\r\n    endpoint,\r\n  ]);\r\n  const sendConnection = useMemo(() => new Connection(endpoint, 'recent'), [\r\n    endpoint,\r\n  ]);\r\n\r\n  // The websocket library solana/web3.js uses closes its websocket connection when the subscription list\r\n  // is empty after opening its first time, preventing subsequent subscriptions from receiving responses.\r\n  // This is a hack to prevent the list from every getting empty\r\n  useEffect(() => {\r\n    const id = connection.onAccountChange(new Account().publicKey, () => {});\r\n    return () => {\r\n      connection.removeAccountChangeListener(id);\r\n    };\r\n  }, [connection]);\r\n\r\n  useEffect(() => {\r\n    const id = connection.onSlotChange(() => null);\r\n    return () => {\r\n      connection.removeSlotChangeListener(id);\r\n    };\r\n  }, [connection]);\r\n\r\n  useEffect(() => {\r\n    const id = sendConnection.onAccountChange(\r\n      new Account().publicKey,\r\n      () => {},\r\n    );\r\n    return () => {\r\n      sendConnection.removeAccountChangeListener(id);\r\n    };\r\n  }, [sendConnection]);\r\n\r\n  useEffect(() => {\r\n    const id = sendConnection.onSlotChange(() => null);\r\n    return () => {\r\n      sendConnection.removeSlotChangeListener(id);\r\n    };\r\n  }, [sendConnection]);\r\n\r\n  return (\r\n    <ConnectionContext.Provider\r\n      value={{\r\n        endpoint,\r\n        setEndpoint,\r\n        connection,\r\n        sendConnection,\r\n        availableEndpoints,\r\n        setCustomEndpoints,\r\n      }}\r\n    >\r\n      {children}\r\n    </ConnectionContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useConnection() {\r\n  const context = useContext(ConnectionContext);\r\n  if (!context) {\r\n    throw new Error('Missing connection context');\r\n  }\r\n  return context.connection;\r\n}\r\n\r\nexport function useSendConnection() {\r\n  const context = useContext(ConnectionContext);\r\n  if (!context) {\r\n    throw new Error('Missing connection context');\r\n  }\r\n  return context.sendConnection;\r\n}\r\n\r\nexport function useConnectionConfig() {\r\n  const context = useContext(ConnectionContext);\r\n  if (!context) {\r\n    throw new Error('Missing connection context');\r\n  }\r\n  return {\r\n    endpoint: context.endpoint,\r\n    endpointInfo: context.availableEndpoints.find(\r\n      (info) => info.endpoint === context.endpoint,\r\n    ),\r\n    setEndpoint: context.setEndpoint,\r\n    availableEndpoints: context.availableEndpoints,\r\n    setCustomEndpoints: context.setCustomEndpoints,\r\n  };\r\n}\r\n\r\nexport function useAccountInfo(\r\n  publicKey: PublicKey | undefined | null,\r\n): [AccountInfo<Buffer> | null | undefined, boolean] {\r\n  const connection = useConnection();\r\n  const cacheKey = tuple(connection, publicKey?.toBase58());\r\n  const [accountInfo, loaded] = useAsyncData<AccountInfo<Buffer> | null>(\r\n    async () => (publicKey ? connection.getAccountInfo(publicKey) : null),\r\n    cacheKey,\r\n    { refreshInterval: 60_000 },\r\n  );\r\n  useEffect(() => {\r\n    if (!publicKey) {\r\n      return;\r\n    }\r\n    if (accountListenerCount.has(cacheKey)) {\r\n      let currentItem = accountListenerCount.get(cacheKey);\r\n      ++currentItem.count;\r\n    } else {\r\n      let previousData: Buffer | null = null;\r\n      const subscriptionId = connection.onAccountChange(publicKey, (e) => {\r\n        if (e.data) {\r\n          if (!previousData || !previousData.equals(e.data)) {\r\n            setCache(cacheKey, e);\r\n          } else {\r\n          }\r\n          previousData = e.data;\r\n        }\r\n      });\r\n      accountListenerCount.set(cacheKey, { count: 1, subscriptionId });\r\n    }\r\n    return () => {\r\n      let currentItem = accountListenerCount.get(cacheKey);\r\n      let nextCount = currentItem.count - 1;\r\n      if (nextCount <= 0) {\r\n        connection.removeAccountChangeListener(currentItem.subscriptionId);\r\n        accountListenerCount.delete(cacheKey);\r\n      } else {\r\n        --currentItem.count;\r\n      }\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [cacheKey]);\r\n  return [accountInfo, loaded];\r\n}\r\n\r\nexport function useAccountData(publicKey) {\r\n  const [accountInfo] = useAccountInfo(publicKey);\r\n  return accountInfo && accountInfo.data;\r\n}\r\n","import React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\nexport default function Link({ external = false, ...props }) {\r\n  let { to, children, ...rest } = props;\r\n  if (external) {\r\n    return (\r\n      <a href={to} target=\"_blank\" rel=\"noopener noreferrer\" {...rest}>\r\n        {children}\r\n      </a>\r\n    );\r\n  }\r\n  return (\r\n    <RouterLink to={to} {...rest}>\r\n      {children}\r\n    </RouterLink>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { notification } from 'antd';\r\nimport Link from '../components/Link';\r\n\r\nexport function notify({\r\n  message,\r\n  description,\r\n  txid,\r\n  type = 'info',\r\n  placement = 'bottomLeft',\r\n}: {\r\n  message: string;\r\n  description?: string | JSX.Element;\r\n  txid?: string;\r\n  type?: string;\r\n  placement?: string;\r\n}) {\r\n  if (txid) {\r\n    description = (\r\n      <Link\r\n        external\r\n        to={'https://explorer.solana.com/tx/' + txid}\r\n        style={{ color: '#0000ff' }}\r\n      >\r\n        View transaction {txid.slice(0, 8)}...{txid.slice(txid.length - 8)}\r\n      </Link>\r\n    );\r\n  }\r\n  notification[type]({\r\n    message: <span style={{ color: 'black' }}>{message}</span>,\r\n    description: (\r\n      <span style={{ color: 'black', opacity: 0.5 }}>{description}</span>\r\n    ),\r\n    placement,\r\n    style: {\r\n      backgroundColor: 'white',\r\n    },\r\n  });\r\n}\r\n","import React, { useContext, useEffect, useMemo, useState } from 'react';\r\nimport Wallet from '@project-serum/sol-wallet-adapter';\r\nimport { notify } from './notifications';\r\nimport { useConnectionConfig } from './connection';\r\nimport { useLocalStorageState } from './utils';\r\nimport { WalletContextValues } from './types';\r\n\r\nexport const WALLET_PROVIDERS = [\r\n  { name: 'sollet.io', url: 'https://www.sollet.io' },\r\n];\r\n\r\nconst WalletContext = React.createContext<null | WalletContextValues>(null);\r\n\r\nexport function WalletProvider({ children }) {\r\n  const { endpoint } = useConnectionConfig();\r\n\r\n  const [savedProviderUrl, setProviderUrl] = useLocalStorageState(\r\n    'walletProvider',\r\n    'https://www.sollet.io',\r\n  );\r\n  let providerUrl;\r\n  if (!savedProviderUrl) {\r\n    providerUrl = 'https://www.sollet.io';\r\n  } else {\r\n    providerUrl = savedProviderUrl;\r\n  }\r\n\r\n  const wallet = useMemo(() => new Wallet(providerUrl, endpoint), [\r\n    providerUrl,\r\n    endpoint,\r\n  ]);\r\n\r\n  const [connected, setConnected] = useState(false);\r\n\r\n  useEffect(() => {\r\n    console.log('trying to connect');\r\n    wallet.on('connect', () => {\r\n      console.log('connected');\r\n      setConnected(true);\r\n      let walletPublicKey = wallet.publicKey.toBase58();\r\n      let keyToDisplay =\r\n        walletPublicKey.length > 20\r\n          ? `${walletPublicKey.substring(0, 7)}.....${walletPublicKey.substring(\r\n              walletPublicKey.length - 7,\r\n              walletPublicKey.length,\r\n            )}`\r\n          : walletPublicKey;\r\n      notify({\r\n        message: 'Wallet update',\r\n        description: 'Connected to wallet ' + keyToDisplay,\r\n      });\r\n    });\r\n    wallet.on('disconnect', () => {\r\n      setConnected(false);\r\n      notify({\r\n        message: 'Wallet update',\r\n        description: 'Disconnected from wallet',\r\n      });\r\n    });\r\n    return () => {\r\n      wallet.disconnect();\r\n      setConnected(false);\r\n    };\r\n  }, [wallet]);\r\n\r\n  return (\r\n    <WalletContext.Provider\r\n      value={{\r\n        wallet,\r\n        connected,\r\n        providerUrl,\r\n        setProviderUrl,\r\n        providerName:\r\n          WALLET_PROVIDERS.find(({ url }) => url === providerUrl)?.name ??\r\n          providerUrl,\r\n      }}\r\n    >\r\n      {children}\r\n    </WalletContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useWallet() {\r\n  const context = useContext(WalletContext);\r\n  if (!context) {\r\n    throw new Error('Missing wallet context');\r\n  }\r\n  return {\r\n    connected: context.connected,\r\n    wallet: context.wallet,\r\n    providerUrl: context.providerUrl,\r\n    setProvider: context.setProviderUrl,\r\n    providerName: context.providerName,\r\n  };\r\n}\r\n","import { notify } from './notifications';\r\nimport { getDecimalCount, sleep } from './utils';\r\nimport { getSelectedTokenAccountForMint } from './markets';\r\nimport {\r\n  Account,\r\n  AccountInfo,\r\n  Connection,\r\n  PublicKey,\r\n  RpcResponseAndContext,\r\n  SystemProgram,\r\n  Transaction,\r\n  TransactionSignature,\r\n} from '@solana/web3.js';\r\nimport BN from 'bn.js';\r\nimport {\r\n  DexInstructions,\r\n  Market,\r\n  OpenOrders,\r\n  TOKEN_MINTS,\r\n  TokenInstructions,\r\n} from '@project-serum/serum';\r\nimport Wallet from '@project-serum/sol-wallet-adapter';\r\nimport { SelectedTokenAccounts, TokenAccount } from './types';\r\nimport { Order } from '@project-serum/serum/lib/market';\r\nimport { Buffer } from 'buffer';\r\nimport assert from 'assert';\r\nimport { struct } from 'superstruct';\r\n\r\nexport async function createTokenAccountTransaction({\r\n  connection,\r\n  wallet,\r\n  mintPublicKey,\r\n}: {\r\n  connection: Connection;\r\n  wallet: Wallet;\r\n  mintPublicKey: PublicKey;\r\n}): Promise<{\r\n  transaction: Transaction;\r\n  signer: Account;\r\n  newAccountPubkey: PublicKey;\r\n}> {\r\n  const newAccount = new Account();\r\n  const transaction = new Transaction();\r\n  const instruction = SystemProgram.createAccount({\r\n    fromPubkey: wallet.publicKey,\r\n    newAccountPubkey: newAccount.publicKey,\r\n    lamports: await connection.getMinimumBalanceForRentExemption(165),\r\n    space: 165,\r\n    programId: TokenInstructions.TOKEN_PROGRAM_ID,\r\n  });\r\n  transaction.add(instruction);\r\n  transaction.add(\r\n    TokenInstructions.initializeAccount({\r\n      account: newAccount.publicKey,\r\n      mint: mintPublicKey,\r\n      owner: wallet.publicKey,\r\n    }),\r\n  );\r\n  return {\r\n    transaction,\r\n    signer: newAccount,\r\n    newAccountPubkey: newAccount.publicKey,\r\n  };\r\n}\r\n\r\nexport async function settleFunds({\r\n  market,\r\n  openOrders,\r\n  connection,\r\n  wallet,\r\n  baseCurrencyAccount,\r\n  quoteCurrencyAccount,\r\n}: {\r\n  market: Market;\r\n  openOrders: OpenOrders;\r\n  connection: Connection;\r\n  wallet: Wallet;\r\n  baseCurrencyAccount: TokenAccount;\r\n  quoteCurrencyAccount: TokenAccount;\r\n}): Promise<string | undefined> {\r\n  if (\r\n    !market ||\r\n    !wallet ||\r\n    !connection ||\r\n    !openOrders ||\r\n    (!baseCurrencyAccount && !quoteCurrencyAccount)\r\n  ) {\r\n    notify({ message: 'Not connected' });\r\n    return;\r\n  }\r\n\r\n  let createAccountTransaction: Transaction | undefined;\r\n  let createAccountSigner: Account | undefined;\r\n  let baseCurrencyAccountPubkey = baseCurrencyAccount?.pubkey;\r\n  let quoteCurrencyAccountPubkey = quoteCurrencyAccount?.pubkey;\r\n\r\n  if (!baseCurrencyAccountPubkey) {\r\n    const result = await createTokenAccountTransaction({\r\n      connection,\r\n      wallet,\r\n      mintPublicKey: market.baseMintAddress,\r\n    });\r\n    baseCurrencyAccountPubkey = result?.newAccountPubkey;\r\n    createAccountTransaction = result?.transaction;\r\n    createAccountSigner = result?.signer;\r\n  }\r\n  if (!quoteCurrencyAccountPubkey) {\r\n    const result = await createTokenAccountTransaction({\r\n      connection,\r\n      wallet,\r\n      mintPublicKey: market.quoteMintAddress,\r\n    });\r\n    quoteCurrencyAccountPubkey = result?.newAccountPubkey;\r\n    createAccountTransaction = result?.transaction;\r\n    createAccountSigner = result?.signer;\r\n  }\r\n  let referrerQuoteWallet: PublicKey | null = null;\r\n  if (market.supportsReferralFees) {\r\n    const usdt = TOKEN_MINTS.find(({ name }) => name === 'USDT');\r\n    const usdc = TOKEN_MINTS.find(({ name }) => name === 'USDC');\r\n    if (\r\n      process.env.REACT_APP_USDT_REFERRAL_FEES_ADDRESS &&\r\n      usdt &&\r\n      market.quoteMintAddress.equals(usdt.address)\r\n    ) {\r\n      referrerQuoteWallet = new PublicKey(\r\n        process.env.REACT_APP_USDT_REFERRAL_FEES_ADDRESS,\r\n      );\r\n    } else if (\r\n      process.env.REACT_APP_USDC_REFERRAL_FEES_ADDRESS &&\r\n      usdc &&\r\n      market.quoteMintAddress.equals(usdc.address)\r\n    ) {\r\n      referrerQuoteWallet = new PublicKey(\r\n        process.env.REACT_APP_USDC_REFERRAL_FEES_ADDRESS,\r\n      );\r\n    }\r\n  }\r\n  const {\r\n    transaction: settleFundsTransaction,\r\n    signers: settleFundsSigners,\r\n  } = await market.makeSettleFundsTransaction(\r\n    connection,\r\n    openOrders,\r\n    baseCurrencyAccountPubkey,\r\n    quoteCurrencyAccountPubkey,\r\n    referrerQuoteWallet,\r\n  );\r\n\r\n  let transaction = mergeTransactions([\r\n    createAccountTransaction,\r\n    settleFundsTransaction,\r\n  ]);\r\n  let signers = createAccountSigner\r\n    ? [...settleFundsSigners, createAccountSigner]\r\n    : settleFundsSigners;\r\n\r\n  return await sendTransaction({\r\n    transaction,\r\n    signers,\r\n    wallet,\r\n    connection,\r\n    sendingMessage: 'Settling funds...',\r\n  });\r\n}\r\n\r\nexport async function settleAllFunds({\r\n  connection,\r\n  wallet,\r\n  tokenAccounts,\r\n  markets,\r\n  selectedTokenAccounts,\r\n}: {\r\n  connection: Connection;\r\n  wallet: Wallet;\r\n  tokenAccounts: TokenAccount[];\r\n  markets: Market[];\r\n  selectedTokenAccounts?: SelectedTokenAccounts;\r\n}) {\r\n  if (!markets || !wallet || !connection || !tokenAccounts) {\r\n    return;\r\n  }\r\n\r\n  const programIds: PublicKey[] = [];\r\n  markets\r\n    .reduce((cumulative, m) => {\r\n      // @ts-ignore\r\n      cumulative.push(m._programId);\r\n      return cumulative;\r\n    }, [])\r\n    .forEach((programId) => {\r\n      if (!programIds.find((p) => p.equals(programId))) {\r\n        programIds.push(programId);\r\n      }\r\n    });\r\n\r\n  const getOpenOrdersAccountsForProgramId = async (programId) => {\r\n    const openOrdersAccounts = await OpenOrders.findForOwner(\r\n      connection,\r\n      wallet.publicKey,\r\n      programId,\r\n    );\r\n    return openOrdersAccounts.filter(\r\n      (openOrders) =>\r\n        openOrders.baseTokenFree.toNumber() ||\r\n        openOrders.quoteTokenFree.toNumber(),\r\n    );\r\n  };\r\n\r\n  const openOrdersAccountsForProgramIds = await Promise.all(\r\n    programIds.map((programId) => getOpenOrdersAccountsForProgramId(programId)),\r\n  );\r\n  const openOrdersAccounts = openOrdersAccountsForProgramIds.reduce(\r\n    (accounts, current) => accounts.concat(current),\r\n    [],\r\n  );\r\n\r\n  const settleTransactions = (\r\n    await Promise.all(\r\n      openOrdersAccounts.map((openOrdersAccount) => {\r\n        const market = markets.find((m) =>\r\n          // @ts-ignore\r\n          m._decoded?.ownAddress?.equals(openOrdersAccount.market),\r\n        );\r\n        const baseMint = market?.baseMintAddress;\r\n        const quoteMint = market?.quoteMintAddress;\r\n\r\n        const selectedBaseTokenAccount = getSelectedTokenAccountForMint(\r\n          tokenAccounts,\r\n          baseMint,\r\n          baseMint &&\r\n            selectedTokenAccounts &&\r\n            selectedTokenAccounts[baseMint.toBase58()],\r\n        )?.pubkey;\r\n        const selectedQuoteTokenAccount = getSelectedTokenAccountForMint(\r\n          tokenAccounts,\r\n          quoteMint,\r\n          quoteMint &&\r\n            selectedTokenAccounts &&\r\n            selectedTokenAccounts[quoteMint.toBase58()],\r\n        )?.pubkey;\r\n        if (!selectedBaseTokenAccount || !selectedQuoteTokenAccount) {\r\n          return null;\r\n        }\r\n        return (\r\n          market &&\r\n          market.makeSettleFundsTransaction(\r\n            connection,\r\n            openOrdersAccount,\r\n            selectedBaseTokenAccount,\r\n            selectedQuoteTokenAccount,\r\n          )\r\n        );\r\n      }),\r\n    )\r\n  ).filter(\r\n    (\r\n      x,\r\n    ): x is {\r\n      signers: Account[];\r\n      transaction: Transaction;\r\n      payer: PublicKey;\r\n    } => !!x,\r\n  );\r\n  if (!settleTransactions || settleTransactions.length === 0) return;\r\n\r\n  const transactions = settleTransactions.slice(0, 4).map((t) => t.transaction);\r\n  const signers: Array<Account> = [];\r\n  settleTransactions\r\n    .reduce((cumulative: Array<Account>, t) => cumulative.concat(t.signers), [])\r\n    .forEach((signer) => {\r\n      if (!signers.find((s) => s.publicKey.equals(signer.publicKey))) {\r\n        signers.push(signer);\r\n      }\r\n    });\r\n\r\n  const transaction = mergeTransactions(transactions);\r\n\r\n  return await sendTransaction({\r\n    transaction,\r\n    signers,\r\n    wallet,\r\n    connection,\r\n  });\r\n}\r\n\r\nexport async function cancelOrder(params: {\r\n  market: Market;\r\n  connection: Connection;\r\n  wallet: Wallet;\r\n  order: Order;\r\n}) {\r\n  return cancelOrders({ ...params, orders: [params.order] });\r\n}\r\n\r\nexport async function cancelOrders({\r\n  market,\r\n  wallet,\r\n  connection,\r\n  orders,\r\n}: {\r\n  market: Market;\r\n  wallet: Wallet;\r\n  connection: Connection;\r\n  orders: Order[];\r\n}) {\r\n  const transaction = market.makeMatchOrdersTransaction(5);\r\n  orders.forEach((order) => {\r\n    transaction.add(\r\n      market.makeCancelOrderInstruction(connection, wallet.publicKey, order),\r\n    );\r\n  });\r\n  transaction.add(market.makeMatchOrdersTransaction(5));\r\n  return await sendTransaction({\r\n    transaction,\r\n    wallet,\r\n    connection,\r\n    sendingMessage: 'Sending cancel...',\r\n  });\r\n}\r\n\r\nexport async function placeOrder({\r\n  side,\r\n  price,\r\n  size,\r\n  orderType,\r\n  market,\r\n  connection,\r\n  wallet,\r\n  baseCurrencyAccount,\r\n  quoteCurrencyAccount,\r\n}: {\r\n  side: 'buy' | 'sell';\r\n  price: number;\r\n  size: number;\r\n  orderType: 'ioc' | 'postOnly' | 'limit';\r\n  market: Market | undefined | null;\r\n  connection: Connection;\r\n  wallet: Wallet;\r\n  baseCurrencyAccount: PublicKey | undefined;\r\n  quoteCurrencyAccount: PublicKey | undefined;\r\n}) {\r\n  let formattedMinOrderSize =\r\n    market?.minOrderSize?.toFixed(getDecimalCount(market.minOrderSize)) ||\r\n    market?.minOrderSize;\r\n  let formattedTickSize =\r\n    market?.tickSize?.toFixed(getDecimalCount(market.tickSize)) ||\r\n    market?.tickSize;\r\n  const isIncrement = (num, step) =>\r\n    Math.abs((num / step) % 1) < 1e-5 ||\r\n    Math.abs(((num / step) % 1) - 1) < 1e-5;\r\n  if (isNaN(price)) {\r\n    notify({ message: 'Invalid price', type: 'error' });\r\n    return;\r\n  }\r\n  if (isNaN(size)) {\r\n    notify({ message: 'Invalid size', type: 'error' });\r\n    return;\r\n  }\r\n  if (!wallet || !wallet.publicKey) {\r\n    notify({ message: 'Connect wallet', type: 'error' });\r\n    return;\r\n  }\r\n  if (!market) {\r\n    notify({ message: 'Invalid  market', type: 'error' });\r\n    return;\r\n  }\r\n  if (!isIncrement(size, market.minOrderSize)) {\r\n    notify({\r\n      message: `Size must be an increment of ${formattedMinOrderSize}`,\r\n      type: 'error',\r\n    });\r\n    return;\r\n  }\r\n  if (size < market.minOrderSize) {\r\n    notify({ message: 'Size too small', type: 'error' });\r\n    return;\r\n  }\r\n  if (!isIncrement(price, market.tickSize)) {\r\n    notify({\r\n      message: `Price must be an increment of ${formattedTickSize}`,\r\n      type: 'error',\r\n    });\r\n    return;\r\n  }\r\n  if (price < market.tickSize) {\r\n    notify({ message: 'Price under tick size', type: 'error' });\r\n    return;\r\n  }\r\n  const owner = wallet.publicKey;\r\n  const transaction = new Transaction();\r\n  const signers: Account[] = [];\r\n\r\n  if (!baseCurrencyAccount) {\r\n    const {\r\n      transaction: createAccountTransaction,\r\n      signer: createAccountSigners,\r\n      newAccountPubkey,\r\n    } = await createTokenAccountTransaction({\r\n      connection,\r\n      wallet,\r\n      mintPublicKey: market.baseMintAddress,\r\n    });\r\n    transaction.add(createAccountTransaction);\r\n    signers.push(createAccountSigners);\r\n    baseCurrencyAccount = newAccountPubkey;\r\n  }\r\n  if (!quoteCurrencyAccount) {\r\n    const {\r\n      transaction: createAccountTransaction,\r\n      signer: createAccountSigners,\r\n      newAccountPubkey,\r\n    } = await createTokenAccountTransaction({\r\n      connection,\r\n      wallet,\r\n      mintPublicKey: market.quoteMintAddress,\r\n    });\r\n    transaction.add(createAccountTransaction);\r\n    signers.push(createAccountSigners);\r\n    quoteCurrencyAccount = newAccountPubkey;\r\n  }\r\n\r\n  const payer = side === 'sell' ? baseCurrencyAccount : quoteCurrencyAccount;\r\n  if (!payer) {\r\n    notify({\r\n      message: 'Need an SPL token account for cost currency',\r\n      type: 'error',\r\n    });\r\n    return;\r\n  }\r\n  const params = {\r\n    owner,\r\n    payer,\r\n    side,\r\n    price,\r\n    size,\r\n    orderType,\r\n  };\r\n  console.log(params);\r\n\r\n  const matchOrderstransaction = market.makeMatchOrdersTransaction(5);\r\n  transaction.add(matchOrderstransaction);\r\n  let {\r\n    transaction: placeOrderTx,\r\n    signers: placeOrderSigners,\r\n  } = await market.makePlaceOrderTransaction(\r\n    connection,\r\n    params,\r\n    10_000,\r\n    10_000,\r\n  );\r\n  transaction.add(placeOrderTx);\r\n  transaction.add(market.makeMatchOrdersTransaction(5));\r\n  signers.push(...placeOrderSigners);\r\n\r\n  return await sendTransaction({\r\n    transaction,\r\n    wallet,\r\n    connection,\r\n    signers,\r\n    sendingMessage: 'Sending order...',\r\n  });\r\n}\r\n\r\nexport async function listMarket({\r\n  connection,\r\n  wallet,\r\n  baseMint,\r\n  quoteMint,\r\n  baseLotSize,\r\n  quoteLotSize,\r\n  dexProgramId,\r\n}: {\r\n  connection: Connection;\r\n  wallet: Wallet;\r\n  baseMint: PublicKey;\r\n  quoteMint: PublicKey;\r\n  baseLotSize: number;\r\n  quoteLotSize: number;\r\n  dexProgramId: PublicKey;\r\n}) {\r\n  const market = new Account();\r\n  const requestQueue = new Account();\r\n  const eventQueue = new Account();\r\n  const bids = new Account();\r\n  const asks = new Account();\r\n  const baseVault = new Account();\r\n  const quoteVault = new Account();\r\n  const feeRateBps = 0;\r\n  const quoteDustThreshold = new BN(100);\r\n\r\n  async function getVaultOwnerAndNonce() {\r\n    const nonce = new BN(0);\r\n    while (true) {\r\n      try {\r\n        const vaultOwner = await PublicKey.createProgramAddress(\r\n          [market.publicKey.toBuffer(), nonce.toArrayLike(Buffer, 'le', 8)],\r\n          dexProgramId,\r\n        );\r\n        return [vaultOwner, nonce];\r\n      } catch (e) {\r\n        nonce.iaddn(1);\r\n      }\r\n    }\r\n  }\r\n  const [vaultOwner, vaultSignerNonce] = await getVaultOwnerAndNonce();\r\n\r\n  const tx1 = new Transaction();\r\n  tx1.add(\r\n    SystemProgram.createAccount({\r\n      fromPubkey: wallet.publicKey,\r\n      newAccountPubkey: baseVault.publicKey,\r\n      lamports: await connection.getMinimumBalanceForRentExemption(165),\r\n      space: 165,\r\n      programId: TokenInstructions.TOKEN_PROGRAM_ID,\r\n    }),\r\n    SystemProgram.createAccount({\r\n      fromPubkey: wallet.publicKey,\r\n      newAccountPubkey: quoteVault.publicKey,\r\n      lamports: await connection.getMinimumBalanceForRentExemption(165),\r\n      space: 165,\r\n      programId: TokenInstructions.TOKEN_PROGRAM_ID,\r\n    }),\r\n    TokenInstructions.initializeAccount({\r\n      account: baseVault.publicKey,\r\n      mint: baseMint,\r\n      owner: vaultOwner,\r\n    }),\r\n    TokenInstructions.initializeAccount({\r\n      account: quoteVault.publicKey,\r\n      mint: quoteMint,\r\n      owner: vaultOwner,\r\n    }),\r\n  );\r\n\r\n  const tx2 = new Transaction();\r\n  tx2.add(\r\n    SystemProgram.createAccount({\r\n      fromPubkey: wallet.publicKey,\r\n      newAccountPubkey: market.publicKey,\r\n      lamports: await connection.getMinimumBalanceForRentExemption(\r\n        Market.getLayout(dexProgramId).span,\r\n      ),\r\n      space: Market.getLayout(dexProgramId).span,\r\n      programId: dexProgramId,\r\n    }),\r\n    SystemProgram.createAccount({\r\n      fromPubkey: wallet.publicKey,\r\n      newAccountPubkey: requestQueue.publicKey,\r\n      lamports: await connection.getMinimumBalanceForRentExemption(5120 + 12),\r\n      space: 5120 + 12,\r\n      programId: dexProgramId,\r\n    }),\r\n    SystemProgram.createAccount({\r\n      fromPubkey: wallet.publicKey,\r\n      newAccountPubkey: eventQueue.publicKey,\r\n      lamports: await connection.getMinimumBalanceForRentExemption(262144 + 12),\r\n      space: 262144 + 12,\r\n      programId: dexProgramId,\r\n    }),\r\n    SystemProgram.createAccount({\r\n      fromPubkey: wallet.publicKey,\r\n      newAccountPubkey: bids.publicKey,\r\n      lamports: await connection.getMinimumBalanceForRentExemption(65536 + 12),\r\n      space: 65536 + 12,\r\n      programId: dexProgramId,\r\n    }),\r\n    SystemProgram.createAccount({\r\n      fromPubkey: wallet.publicKey,\r\n      newAccountPubkey: asks.publicKey,\r\n      lamports: await connection.getMinimumBalanceForRentExemption(65536 + 12),\r\n      space: 65536 + 12,\r\n      programId: dexProgramId,\r\n    }),\r\n    DexInstructions.initializeMarket({\r\n      market: market.publicKey,\r\n      requestQueue: requestQueue.publicKey,\r\n      eventQueue: eventQueue.publicKey,\r\n      bids: bids.publicKey,\r\n      asks: asks.publicKey,\r\n      baseVault: baseVault.publicKey,\r\n      quoteVault: quoteVault.publicKey,\r\n      baseMint,\r\n      quoteMint,\r\n      baseLotSize: new BN(baseLotSize),\r\n      quoteLotSize: new BN(quoteLotSize),\r\n      feeRateBps,\r\n      vaultSignerNonce,\r\n      quoteDustThreshold,\r\n      programId: dexProgramId,\r\n    }),\r\n  );\r\n\r\n  const signedTransactions = await Promise.all([\r\n    signTransaction({\r\n      transaction: tx1,\r\n      wallet,\r\n      connection,\r\n      signers: [baseVault, quoteVault],\r\n    }),\r\n    signTransaction({\r\n      transaction: tx2,\r\n      wallet,\r\n      connection,\r\n      signers: [market, requestQueue, eventQueue, bids, asks],\r\n    }),\r\n  ]);\r\n  for (let signedTransaction of signedTransactions) {\r\n    await sendSignedTransaction({\r\n      signedTransaction,\r\n      connection,\r\n    });\r\n  }\r\n\r\n  return market.publicKey;\r\n}\r\n\r\nconst getUnixTs = () => {\r\n  return new Date().getTime() / 1000;\r\n};\r\n\r\nconst DEFAULT_TIMEOUT = 15000;\r\n\r\nexport async function sendTransaction({\r\n  transaction,\r\n  wallet,\r\n  signers = [],\r\n  connection,\r\n  sendingMessage = 'Sending transaction...',\r\n  sentMessage = 'Transaction sent',\r\n  successMessage = 'Transaction confirmed',\r\n  timeout = DEFAULT_TIMEOUT,\r\n}: {\r\n  transaction: Transaction;\r\n  wallet: Wallet;\r\n  signers?: Array<Account>;\r\n  connection: Connection;\r\n  sendingMessage?: string;\r\n  sentMessage?: string;\r\n  successMessage?: string;\r\n  timeout?: number;\r\n}) {\r\n  const signedTransaction = await signTransaction({\r\n    transaction,\r\n    wallet,\r\n    signers,\r\n    connection,\r\n  });\r\n  return await sendSignedTransaction({\r\n    signedTransaction,\r\n    connection,\r\n    sendingMessage,\r\n    sentMessage,\r\n    successMessage,\r\n    timeout,\r\n  });\r\n}\r\n\r\nexport async function signTransaction({\r\n  transaction,\r\n  wallet,\r\n  signers = [],\r\n  connection,\r\n}: {\r\n  transaction: Transaction;\r\n  wallet: Wallet;\r\n  signers?: Array<Account>;\r\n  connection: Connection;\r\n}) {\r\n  transaction.recentBlockhash = (\r\n    await connection.getRecentBlockhash('max')\r\n  ).blockhash;\r\n  transaction.setSigners(wallet.publicKey, ...signers.map((s) => s.publicKey));\r\n  if (signers.length > 0) {\r\n    transaction.partialSign(...signers);\r\n  }\r\n  return await wallet.signTransaction(transaction);\r\n}\r\n\r\nexport async function sendSignedTransaction({\r\n  signedTransaction,\r\n  connection,\r\n  sendingMessage = 'Sending transaction...',\r\n  sentMessage = 'Transaction sent',\r\n  successMessage = 'Transaction confirmed',\r\n  timeout = DEFAULT_TIMEOUT,\r\n}: {\r\n  signedTransaction: Transaction;\r\n  connection: Connection;\r\n  sendingMessage?: string;\r\n  sentMessage?: string;\r\n  successMessage?: string;\r\n  timeout?: number;\r\n}): Promise<string> {\r\n  const rawTransaction = signedTransaction.serialize();\r\n  const startTime = getUnixTs();\r\n  notify({ message: sendingMessage });\r\n  const txid: TransactionSignature = await connection.sendRawTransaction(\r\n    rawTransaction,\r\n    {\r\n      skipPreflight: true,\r\n    },\r\n  );\r\n  notify({ message: sentMessage, type: 'success', txid });\r\n\r\n  console.log('Started awaiting confirmation for', txid);\r\n\r\n  let done = false;\r\n  (async () => {\r\n    while (!done && getUnixTs() - startTime < timeout) {\r\n      connection.sendRawTransaction(rawTransaction, {\r\n        skipPreflight: true,\r\n      });\r\n      await sleep(300);\r\n    }\r\n  })();\r\n  try {\r\n    await awaitTransactionSignatureConfirmation(txid, timeout, connection);\r\n  } catch (err) {\r\n    if (err.timeout) {\r\n      throw new Error('Timed out awaiting confirmation on transaction');\r\n    }\r\n    throw new Error('Transaction failed');\r\n  } finally {\r\n    done = true;\r\n  }\r\n  notify({ message: successMessage, type: 'success', txid });\r\n\r\n  console.log('Latency', txid, getUnixTs() - startTime);\r\n  return txid;\r\n}\r\n\r\nasync function awaitTransactionSignatureConfirmation(\r\n  txid: TransactionSignature,\r\n  timeout: number,\r\n  connection: Connection,\r\n) {\r\n  let done = false;\r\n  const result = await new Promise((resolve, reject) => {\r\n    (async () => {\r\n      setTimeout(() => {\r\n        if (done) {\r\n          return;\r\n        }\r\n        done = true;\r\n        console.log('Timed out for txid', txid);\r\n        reject({ timeout: true });\r\n      }, timeout);\r\n      try {\r\n        connection.onSignature(\r\n          txid,\r\n          (result) => {\r\n            console.log('WS confirmed', txid, result);\r\n            done = true;\r\n            if (result.err) {\r\n              reject(result.err);\r\n            } else {\r\n              resolve(result);\r\n            }\r\n          },\r\n          'recent',\r\n        );\r\n        console.log('Set up WS connection', txid);\r\n      } catch (e) {\r\n        done = true;\r\n        console.log('WS error in setup', txid, e);\r\n      }\r\n      while (!done) {\r\n        // eslint-disable-next-line no-loop-func\r\n        (async () => {\r\n          try {\r\n            const signatureStatuses = await connection.getSignatureStatuses([\r\n              txid,\r\n            ]);\r\n            const result = signatureStatuses && signatureStatuses.value[0];\r\n            if (!done) {\r\n              if (!result) {\r\n                console.log('REST null result for', txid, result);\r\n              } else if (result.err) {\r\n                console.log('REST error for', txid, result);\r\n                done = true;\r\n                reject(result.err);\r\n              } else if (!result.confirmations) {\r\n                console.log('REST no confirmations for', txid, result);\r\n              } else {\r\n                console.log('REST confirmation for', txid, result);\r\n                done = true;\r\n                resolve(result);\r\n              }\r\n            }\r\n          } catch (e) {\r\n            if (!done) {\r\n              console.log('REST connection error: txid', txid, e);\r\n            }\r\n          }\r\n        })();\r\n        await sleep(300);\r\n      }\r\n    })();\r\n  });\r\n  done = true;\r\n  return result;\r\n}\r\n\r\nfunction mergeTransactions(transactions: (Transaction | undefined)[]) {\r\n  const transaction = new Transaction();\r\n  transactions\r\n    .filter((t): t is Transaction => t !== undefined)\r\n    .forEach((t) => {\r\n      transaction.add(t);\r\n    });\r\n  return transaction;\r\n}\r\n\r\nfunction jsonRpcResult(resultDescription: any) {\r\n  const jsonRpcVersion = struct.literal('2.0');\r\n  return struct.union([\r\n    struct({\r\n      jsonrpc: jsonRpcVersion,\r\n      id: 'string',\r\n      error: 'any',\r\n    }),\r\n    struct({\r\n      jsonrpc: jsonRpcVersion,\r\n      id: 'string',\r\n      error: 'null?',\r\n      result: resultDescription,\r\n    }),\r\n  ]);\r\n}\r\n\r\nfunction jsonRpcResultAndContext(resultDescription: any) {\r\n  return jsonRpcResult({\r\n    context: struct({\r\n      slot: 'number',\r\n    }),\r\n    value: resultDescription,\r\n  });\r\n}\r\n\r\nconst AccountInfoResult = struct({\r\n  executable: 'boolean',\r\n  owner: 'string',\r\n  lamports: 'number',\r\n  data: 'any',\r\n  rentEpoch: 'number?',\r\n});\r\n\r\nexport const GetMultipleAccountsAndContextRpcResult = jsonRpcResultAndContext(\r\n  struct.array([struct.union(['null', AccountInfoResult])]),\r\n);\r\n\r\nexport async function getMultipleSolanaAccounts(\r\n  connection: Connection,\r\n  publicKeys: PublicKey[],\r\n): Promise<\r\n  RpcResponseAndContext<{ [key: string]: AccountInfo<Buffer> | null }>\r\n> {\r\n  const args = [publicKeys.map((k) => k.toBase58()), { commitment: 'recent' }];\r\n  // @ts-ignore\r\n  const unsafeRes = await connection._rpcRequest('getMultipleAccounts', args);\r\n  const res = GetMultipleAccountsAndContextRpcResult(unsafeRes);\r\n  if (res.error) {\r\n    throw new Error(\r\n      'failed to get info about accounts ' +\r\n        publicKeys.map((k) => k.toBase58()).join(', ') +\r\n        ': ' +\r\n        res.error.message,\r\n    );\r\n  }\r\n  assert(typeof res.result !== 'undefined');\r\n  const accounts: Array<{\r\n    executable: any;\r\n    owner: PublicKey;\r\n    lamports: any;\r\n    data: Buffer;\r\n  } | null> = [];\r\n  for (const account of res.result.value) {\r\n    let value: {\r\n      executable: any;\r\n      owner: PublicKey;\r\n      lamports: any;\r\n      data: Buffer;\r\n    } | null = null;\r\n    if (res.result.value) {\r\n      const { executable, owner, lamports, data } = account;\r\n      assert(data[1] === 'base64');\r\n      value = {\r\n        executable,\r\n        owner: new PublicKey(owner),\r\n        lamports,\r\n        data: Buffer.from(data[0], 'base64'),\r\n      };\r\n    }\r\n    accounts.push(value);\r\n  }\r\n  return {\r\n    context: {\r\n      slot: res.result.context.slot,\r\n    },\r\n    value: Object.fromEntries(\r\n      accounts.map((account, i) => [publicKeys[i].toBase58(), account]),\r\n    ),\r\n  };\r\n}\r\n","import * as BufferLayout from 'buffer-layout';\r\nimport bs58 from 'bs58';\r\nimport { AccountInfo, Connection, PublicKey } from '@solana/web3.js';\r\nimport { WRAPPED_SOL_MINT } from '@project-serum/serum/lib/token-instructions';\r\nimport { TokenAccount } from './types';\r\nimport { TOKEN_MINTS } from '@project-serum/serum';\r\nimport { useAllMarkets, useMarket, useTokenAccounts } from './markets';\r\nimport { getMultipleSolanaAccounts } from './send';\r\nimport { useConnection } from './connection';\r\nimport { useAsyncData } from './fetch-loop';\r\nimport tuple from 'immutable-tuple';\r\nimport BN from 'bn.js';\r\n\r\nexport const ACCOUNT_LAYOUT = BufferLayout.struct([\r\n  BufferLayout.blob(32, 'mint'),\r\n  BufferLayout.blob(32, 'owner'),\r\n  BufferLayout.nu64('amount'),\r\n  BufferLayout.blob(93),\r\n]);\r\n\r\nexport const MINT_LAYOUT = BufferLayout.struct([\r\n  BufferLayout.blob(36),\r\n  BufferLayout.blob(8, 'supply'),\r\n  BufferLayout.u8('decimals'),\r\n  BufferLayout.u8('initialized'),\r\n  BufferLayout.blob(36),\r\n]);\r\n\r\nexport function parseTokenAccountData(\r\n  data: Buffer,\r\n): { mint: PublicKey; owner: PublicKey; amount: number } {\r\n  let { mint, owner, amount } = ACCOUNT_LAYOUT.decode(data);\r\n  return {\r\n    mint: new PublicKey(mint),\r\n    owner: new PublicKey(owner),\r\n    amount,\r\n  };\r\n}\r\n\r\nexport interface MintInfo {\r\n  decimals: number;\r\n  initialized: boolean;\r\n  supply: BN;\r\n}\r\n\r\nexport function parseTokenMintData(data): MintInfo {\r\n  let { decimals, initialized, supply } = MINT_LAYOUT.decode(data);\r\n  return {\r\n    decimals,\r\n    initialized: !!initialized,\r\n    supply: new BN(supply, 10, 'le'),\r\n  };\r\n}\r\n\r\nexport function getOwnedAccountsFilters(publicKey: PublicKey) {\r\n  return [\r\n    {\r\n      memcmp: {\r\n        offset: ACCOUNT_LAYOUT.offsetOf('owner'),\r\n        bytes: publicKey.toBase58(),\r\n      },\r\n    },\r\n    {\r\n      dataSize: ACCOUNT_LAYOUT.span,\r\n    },\r\n  ];\r\n}\r\n\r\nexport const TOKEN_PROGRAM_ID = new PublicKey(\r\n  'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA',\r\n);\r\n\r\nexport async function getOwnedTokenAccounts(\r\n  connection: Connection,\r\n  publicKey: PublicKey,\r\n): Promise<Array<{ publicKey: PublicKey; accountInfo: AccountInfo<Buffer> }>> {\r\n  let filters = getOwnedAccountsFilters(publicKey);\r\n  // @ts-ignore\r\n  let resp = await connection._rpcRequest('getProgramAccounts', [\r\n    TOKEN_PROGRAM_ID.toBase58(),\r\n    {\r\n      commitment: connection.commitment,\r\n      filters,\r\n    },\r\n  ]);\r\n  if (resp.error) {\r\n    throw new Error(\r\n      'failed to get token accounts owned by ' +\r\n        publicKey.toBase58() +\r\n        ': ' +\r\n        resp.error.message,\r\n    );\r\n  }\r\n  return resp.result\r\n    .map(({ pubkey, account: { data, executable, owner, lamports } }) => ({\r\n      publicKey: new PublicKey(pubkey),\r\n      accountInfo: {\r\n        data: bs58.decode(data),\r\n        executable,\r\n        owner: new PublicKey(owner),\r\n        lamports,\r\n      },\r\n    }))\r\n    .filter(({ accountInfo }) => {\r\n      // TODO: remove this check once mainnet is updated\r\n      return filters.every((filter) => {\r\n        if (filter.dataSize) {\r\n          return accountInfo.data.length === filter.dataSize;\r\n        } else if (filter.memcmp) {\r\n          let filterBytes = bs58.decode(filter.memcmp.bytes);\r\n          return accountInfo.data\r\n            .slice(\r\n              filter.memcmp.offset,\r\n              filter.memcmp.offset + filterBytes.length,\r\n            )\r\n            .equals(filterBytes);\r\n        }\r\n        return false;\r\n      });\r\n    });\r\n}\r\n\r\nexport async function getTokenAccountInfo(\r\n  connection: Connection,\r\n  ownerAddress: PublicKey,\r\n) {\r\n  let [splAccounts, account] = await Promise.all([\r\n    getOwnedTokenAccounts(connection, ownerAddress),\r\n    connection.getAccountInfo(ownerAddress),\r\n  ]);\r\n  const parsedSplAccounts: TokenAccount[] = splAccounts.map(\r\n    ({ publicKey, accountInfo }) => {\r\n      return {\r\n        pubkey: publicKey,\r\n        account: accountInfo,\r\n        effectiveMint: parseTokenAccountData(accountInfo.data).mint,\r\n      };\r\n    },\r\n  );\r\n  return parsedSplAccounts.concat({\r\n    pubkey: ownerAddress,\r\n    account,\r\n    effectiveMint: WRAPPED_SOL_MINT,\r\n  });\r\n}\r\n\r\nexport function useMintToTickers(): { [mint: string]: string } {\r\n  const { customMarkets } = useMarket();\r\n  const [markets] = useAllMarkets(customMarkets);\r\n  const mintsToTickers = Object.fromEntries(\r\n    TOKEN_MINTS.map((mint) => [mint.address.toBase58(), mint.name]),\r\n  );\r\n  for (let market of markets || []) {\r\n    const customMarketInfo = customMarkets.find(\r\n      (customMarket) =>\r\n        customMarket.address === market.market.address.toBase58(),\r\n    );\r\n    if (!(market.market.baseMintAddress.toBase58() in mintsToTickers)) {\r\n      if (customMarketInfo) {\r\n        mintsToTickers[market.market.baseMintAddress.toBase58()] =\r\n          customMarketInfo.baseLabel || `${customMarketInfo.name}_BASE`;\r\n      }\r\n    }\r\n    if (!(market.market.quoteMintAddress.toBase58() in mintsToTickers)) {\r\n      if (customMarketInfo) {\r\n        mintsToTickers[market.market.quoteMintAddress.toBase58()] =\r\n          customMarketInfo.quoteLabel || `${customMarketInfo.name}_QUOTE`;\r\n      }\r\n    }\r\n  }\r\n  return mintsToTickers;\r\n}\r\n\r\nconst _VERY_SLOW_REFRESH_INTERVAL = 5000 * 1000;\r\n\r\nexport function useMintInfos(): [\r\n  (\r\n    | {\r\n        [mintAddress: string]: {\r\n          decimals: number;\r\n          initialized: boolean;\r\n        } | null;\r\n      }\r\n    | null\r\n    | undefined\r\n  ),\r\n  boolean,\r\n] {\r\n  const connection = useConnection();\r\n  const { customMarkets } = useMarket();\r\n  const [tokenAccounts] = useTokenAccounts();\r\n  const [allMarkets] = useAllMarkets(customMarkets);\r\n\r\n  const allMints = (tokenAccounts || [])\r\n    .map((account) => account.effectiveMint)\r\n    .concat(\r\n      (allMarkets || []).map((marketInfo) => marketInfo.market.baseMintAddress),\r\n    )\r\n    .concat(\r\n      (allMarkets || []).map(\r\n        (marketInfo) => marketInfo.market.quoteMintAddress,\r\n      ),\r\n    );\r\n  const uniqueMints = [...new Set(allMints.map((mint) => mint.toBase58()))].map(\r\n    (stringMint) => new PublicKey(stringMint),\r\n  );\r\n\r\n  const getAllMintInfo = async () => {\r\n    const mintInfos = await getMultipleSolanaAccounts(connection, uniqueMints);\r\n    return Object.fromEntries(\r\n      Object.entries(mintInfos.value).map(([key, accountInfo]) => [\r\n        key,\r\n        accountInfo && parseTokenMintData(accountInfo.data),\r\n      ]),\r\n    );\r\n  };\r\n\r\n  return useAsyncData(\r\n    getAllMintInfo,\r\n    tuple(\r\n      'getAllMintInfo',\r\n      connection,\r\n      (tokenAccounts || []).length,\r\n      (allMarkets || []).length,\r\n    ),\r\n    { refreshInterval: _VERY_SLOW_REFRESH_INTERVAL },\r\n  );\r\n}\r\n","import { BonfidaTrade } from './types';\r\n\r\nexport default class BonfidaApi {\r\n  static URL: string = 'https://serum-api.bonfida.com/';\r\n\r\n  static async get(path: string) {\r\n    try {\r\n      const response = await fetch(this.URL + path);\r\n      if (response.ok) {\r\n        const responseJson = await response.json();\r\n        return responseJson.success ? responseJson.data : null;\r\n      }\r\n    } catch (err) {\r\n      console.log(`Error fetching from Bonfida API ${path}: ${err}`);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  static async getRecentTrades(\r\n    marketAddress: string,\r\n  ): Promise<BonfidaTrade[] | null> {\r\n    return BonfidaApi.get(`trades/address/${marketAddress}`);\r\n  }\r\n}\r\n","import {\r\n  decodeEventQueue,\r\n  Market,\r\n  MARKETS,\r\n  OpenOrders,\r\n  Orderbook,\r\n  TOKEN_MINTS,\r\n  TokenInstructions,\r\n} from '@project-serum/serum';\r\nimport { PublicKey } from '@solana/web3.js';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport {\r\n  divideBnToNumber,\r\n  floorToDecimal,\r\n  getTokenMultiplierFromDecimals,\r\n  useLocalStorageState,\r\n} from './utils';\r\nimport { refreshCache, useAsyncData } from './fetch-loop';\r\nimport { useAccountData, useAccountInfo, useConnection } from './connection';\r\nimport { useWallet } from './wallet';\r\nimport tuple from 'immutable-tuple';\r\nimport { notify } from './notifications';\r\nimport BN from 'bn.js';\r\nimport {\r\n  getTokenAccountInfo,\r\n  parseTokenAccountData,\r\n  useMintInfos,\r\n} from './tokens';\r\nimport {\r\n  Balances,\r\n  CustomMarketInfo,\r\n  DeprecatedOpenOrdersBalances,\r\n  FullMarketInfo,\r\n  MarketContextValues,\r\n  MarketInfo,\r\n  OrderWithMarketAndMarketName,\r\n  SelectedTokenAccounts,\r\n  TokenAccount,\r\n  Trade,\r\n} from './types';\r\nimport { WRAPPED_SOL_MINT } from '@project-serum/serum/lib/token-instructions';\r\nimport { Order } from '@project-serum/serum/lib/market';\r\nimport BonfidaApi from './bonfidaConnector';\r\n\r\n// Used in debugging, should be false in production\r\nconst _IGNORE_DEPRECATED = false;\r\n\r\nconst USE_MARKETS: MarketInfo[] = _IGNORE_DEPRECATED\r\n  ? MARKETS.map((m) => ({ ...m, deprecated: false }))\r\n  : MARKETS;\r\n\r\nexport function useMarketsList() {\r\n  return USE_MARKETS.filter(({ deprecated }) => !deprecated);\r\n}\r\n\r\nexport function useAllMarkets(customMarkets) {\r\n  const connection = useConnection();\r\n\r\n  const getAllMarkets = async () => {\r\n    const markets: Array<{\r\n      market: Market;\r\n      marketName: string;\r\n      programId: PublicKey;\r\n    } | null> = await Promise.all(\r\n      getMarketInfos(customMarkets).map(async (marketInfo) => {\r\n        try {\r\n          const market = await Market.load(\r\n            connection,\r\n            marketInfo.address,\r\n            {},\r\n            marketInfo.programId,\r\n          );\r\n          return {\r\n            market,\r\n            marketName: marketInfo.name,\r\n            programId: marketInfo.programId,\r\n          };\r\n        } catch (e) {\r\n          notify({\r\n            message: 'Error loading all market',\r\n            description: e.message,\r\n            type: 'error',\r\n          });\r\n          return null;\r\n        }\r\n      }),\r\n    );\r\n    return markets.filter(\r\n      (m): m is { market: Market; marketName: string; programId: PublicKey } =>\r\n        !!m,\r\n    );\r\n  };\r\n  return useAsyncData(\r\n    getAllMarkets,\r\n    tuple('getAllMarkets', customMarkets.length, connection),\r\n    { refreshInterval: _VERY_SLOW_REFRESH_INTERVAL },\r\n  );\r\n}\r\n\r\nexport function useUnmigratedOpenOrdersAccounts() {\r\n  const connection = useConnection();\r\n  const { wallet } = useWallet();\r\n\r\n  async function getUnmigratedOpenOrdersAccounts(): Promise<OpenOrders[]> {\r\n    if (!wallet || !connection || !wallet.publicKey) {\r\n      return [];\r\n    }\r\n    console.log('refreshing useUnmigratedOpenOrdersAccounts');\r\n    let deprecatedOpenOrdersAccounts: OpenOrders[] = [];\r\n    const deprecatedProgramIds = Array.from(\r\n      new Set(\r\n        USE_MARKETS.filter(\r\n          ({ deprecated }) => deprecated,\r\n        ).map(({ programId }) => programId.toBase58()),\r\n      ),\r\n    ).map((publicKeyStr) => new PublicKey(publicKeyStr));\r\n    let programId: PublicKey;\r\n    for (programId of deprecatedProgramIds) {\r\n      try {\r\n        const openOrdersAccounts = await OpenOrders.findForOwner(\r\n          connection,\r\n          wallet.publicKey,\r\n          programId,\r\n        );\r\n        deprecatedOpenOrdersAccounts = deprecatedOpenOrdersAccounts.concat(\r\n          openOrdersAccounts\r\n            .filter(\r\n              (openOrders) =>\r\n                openOrders.baseTokenTotal.toNumber() ||\r\n                openOrders.quoteTokenTotal.toNumber(),\r\n            )\r\n            .filter((openOrders) =>\r\n              USE_MARKETS.some(\r\n                (market) =>\r\n                  market.deprecated && market.address.equals(openOrders.market),\r\n              ),\r\n            ),\r\n        );\r\n      } catch (e) {\r\n        console.log(\r\n          'Error loading deprecated markets',\r\n          programId?.toBase58(),\r\n          e.message,\r\n        );\r\n      }\r\n    }\r\n    // Maybe sort\r\n    return deprecatedOpenOrdersAccounts;\r\n  }\r\n\r\n  const cacheKey = tuple(\r\n    'getUnmigratedOpenOrdersAccounts',\r\n    connection,\r\n    wallet?.publicKey?.toBase58(),\r\n  );\r\n  const [accounts] = useAsyncData(getUnmigratedOpenOrdersAccounts, cacheKey, {\r\n    refreshInterval: _VERY_SLOW_REFRESH_INTERVAL,\r\n  });\r\n\r\n  return {\r\n    accounts,\r\n    refresh: (clearCache: boolean) => refreshCache(cacheKey, clearCache),\r\n  };\r\n}\r\n\r\nconst MarketContext: React.Context<null | MarketContextValues> = React.createContext<null | MarketContextValues>(\r\n  null,\r\n);\r\n\r\nconst _VERY_SLOW_REFRESH_INTERVAL = 5000 * 1000;\r\n\r\n// For things that don't really change\r\nconst _SLOW_REFRESH_INTERVAL = 5 * 1000;\r\n\r\n// For things that change frequently\r\nconst _FAST_REFRESH_INTERVAL = 1000;\r\n\r\nexport const DEFAULT_MARKET = USE_MARKETS.find(\r\n  ({ name, deprecated }) => name === 'SRM/USDT' && !deprecated,\r\n);\r\n\r\nexport function getMarketDetails(\r\n  market: Market | undefined | null,\r\n  customMarkets: CustomMarketInfo[],\r\n): FullMarketInfo {\r\n  if (!market) {\r\n    return {};\r\n  }\r\n  const marketInfos = getMarketInfos(customMarkets);\r\n  const marketInfo = marketInfos.find((otherMarket) =>\r\n    otherMarket.address.equals(market.address),\r\n  );\r\n  const baseCurrency =\r\n    (market?.baseMintAddress &&\r\n      TOKEN_MINTS.find((token) => token.address.equals(market.baseMintAddress))\r\n        ?.name) ||\r\n    (marketInfo?.baseLabel && `${marketInfo?.baseLabel}*`) ||\r\n    'UNKNOWN';\r\n  const quoteCurrency =\r\n    (market?.quoteMintAddress &&\r\n      TOKEN_MINTS.find((token) => token.address.equals(market.quoteMintAddress))\r\n        ?.name) ||\r\n    (marketInfo?.quoteLabel && `${marketInfo?.quoteLabel}*`) ||\r\n    'UNKNOWN';\r\n\r\n  return {\r\n    ...marketInfo,\r\n    marketName: marketInfo?.name,\r\n    baseCurrency,\r\n    quoteCurrency,\r\n    marketInfo,\r\n  };\r\n}\r\n\r\nexport function MarketProvider({ children }) {\r\n  const [marketAddress, setMarketAddress] = useLocalStorageState(\r\n    'marketAddress',\r\n    DEFAULT_MARKET?.address.toBase58(),\r\n  );\r\n  const [customMarkets, setCustomMarkets] = useLocalStorageState<\r\n    CustomMarketInfo[]\r\n  >('customMarkets', []);\r\n\r\n  const address = marketAddress && new PublicKey(marketAddress);\r\n  const connection = useConnection();\r\n  const marketInfos = getMarketInfos(customMarkets);\r\n  const marketInfo =\r\n    address && marketInfos.find((market) => market.address.equals(address));\r\n\r\n  // Replace existing market with a non-deprecated one on first load\r\n  useEffect(() => {\r\n    if (marketInfo && marketInfo.deprecated) {\r\n      console.log('Switching markets from deprecated', marketInfo);\r\n      if (DEFAULT_MARKET) {\r\n        setMarketAddress(DEFAULT_MARKET.address.toBase58());\r\n      }\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const [market, setMarket] = useState<Market | null>();\r\n  useEffect(() => {\r\n    if (\r\n      market &&\r\n      marketInfo &&\r\n      // @ts-ignore\r\n      market._decoded.ownAddress?.equals(marketInfo?.address)\r\n    ) {\r\n      return;\r\n    }\r\n    setMarket(null);\r\n    if (!marketInfo || !marketInfo.address) {\r\n      notify({\r\n        message: 'Error loading market',\r\n        description: 'Please select a market from the dropdown',\r\n        type: 'error',\r\n      });\r\n      return;\r\n    }\r\n    Market.load(connection, marketInfo.address, {}, marketInfo.programId)\r\n      .then(setMarket)\r\n      .catch((e) =>\r\n        notify({\r\n          message: 'Error loading market',\r\n          description: e.message,\r\n          type: 'error',\r\n        }),\r\n      );\r\n    // eslint-disable-next-line\r\n  }, [connection, marketInfo]);\r\n\r\n  return (\r\n    <MarketContext.Provider\r\n      value={{\r\n        market,\r\n        ...getMarketDetails(market, customMarkets),\r\n        setMarketAddress,\r\n        customMarkets,\r\n        setCustomMarkets,\r\n      }}\r\n    >\r\n      {children}\r\n    </MarketContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useSelectedTokenAccounts(): [\r\n  SelectedTokenAccounts,\r\n  (newSelectedTokenAccounts: SelectedTokenAccounts) => void,\r\n] {\r\n  const [\r\n    selectedTokenAccounts,\r\n    setSelectedTokenAccounts,\r\n  ] = useLocalStorageState<SelectedTokenAccounts>('selectedTokenAccounts', {});\r\n  return [selectedTokenAccounts, setSelectedTokenAccounts];\r\n}\r\n\r\nexport function useMarket() {\r\n  const context = useContext(MarketContext);\r\n  if (!context) {\r\n    throw new Error('Missing market context');\r\n  }\r\n  return context;\r\n}\r\n\r\nexport function useMarkPrice() {\r\n  const [markPrice, setMarkPrice] = useState<null | number>(null);\r\n\r\n  const [orderbook] = useOrderbook();\r\n  const trades = useTrades();\r\n\r\n  useEffect(() => {\r\n    let bb = orderbook?.bids?.length > 0 && Number(orderbook.bids[0][0]);\r\n    let ba = orderbook?.asks?.length > 0 && Number(orderbook.asks[0][0]);\r\n    let last = trades && trades.length > 0 && trades[0].price;\r\n\r\n    let markPrice =\r\n      bb && ba\r\n        ? last\r\n          ? [bb, ba, last].sort((a, b) => a - b)[1]\r\n          : (bb + ba) / 2\r\n        : null;\r\n\r\n    setMarkPrice(markPrice);\r\n  }, [orderbook, trades]);\r\n\r\n  return markPrice;\r\n}\r\n\r\nexport function _useUnfilteredTrades(limit = 10000) {\r\n  const { market } = useMarket();\r\n  const connection = useConnection();\r\n  async function getUnfilteredTrades(): Promise<any[] | null> {\r\n    if (!market || !connection) {\r\n      return null;\r\n    }\r\n    return await market.loadFills(connection, limit);\r\n  }\r\n  const [trades] = useAsyncData(\r\n    getUnfilteredTrades,\r\n    tuple('getUnfilteredTrades', market, connection),\r\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\r\n  );\r\n  return trades;\r\n  // NOTE: For now, websocket is too expensive since the event queue is large\r\n  // and updates very frequently\r\n\r\n  // let data = useAccountData(market && market._decoded.eventQueue);\r\n  // if (!data) {\r\n  //   return null;\r\n  // }\r\n  // const events = decodeEventQueue(data, limit);\r\n  // return events\r\n  //   .filter((event) => event.eventFlags.fill && event.nativeQuantityPaid.gtn(0))\r\n  //   .map(market.parseFillEvent.bind(market));\r\n}\r\n\r\nexport function useBonfidaTrades() {\r\n  const { market } = useMarket();\r\n  const marketAddress = market?.address.toBase58();\r\n\r\n  async function getBonfidaTrades() {\r\n    if (!marketAddress) {\r\n      return null;\r\n    }\r\n    return await BonfidaApi.getRecentTrades(marketAddress);\r\n  }\r\n\r\n  return useAsyncData(\r\n    getBonfidaTrades,\r\n    tuple('getBonfidaTrades', marketAddress),\r\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\r\n    false,\r\n  );\r\n}\r\n\r\nexport function useOrderbookAccounts() {\r\n  const { market } = useMarket();\r\n  // @ts-ignore\r\n  let bidData = useAccountData(market && market._decoded.bids);\r\n  // @ts-ignore\r\n  let askData = useAccountData(market && market._decoded.asks);\r\n  return {\r\n    bidOrderbook: market && bidData ? Orderbook.decode(market, bidData) : null,\r\n    askOrderbook: market && askData ? Orderbook.decode(market, askData) : null,\r\n  };\r\n}\r\n\r\nexport function useOrderbook(\r\n  depth = 20,\r\n): [{ bids: number[][]; asks: number[][] }, boolean] {\r\n  const { bidOrderbook, askOrderbook } = useOrderbookAccounts();\r\n  const { market } = useMarket();\r\n  const bids =\r\n    !bidOrderbook || !market\r\n      ? []\r\n      : bidOrderbook.getL2(depth).map(([price, size]) => [price, size]);\r\n  const asks =\r\n    !askOrderbook || !market\r\n      ? []\r\n      : askOrderbook.getL2(depth).map(([price, size]) => [price, size]);\r\n  return [{ bids, asks }, !!bids || !!asks];\r\n}\r\n\r\n// Want the balances table to be fast-updating, dont want open orders to flicker\r\n// TODO: Update to use websocket\r\nexport function useOpenOrdersAccounts(fast = false) {\r\n  const { market } = useMarket();\r\n  const { connected, wallet } = useWallet();\r\n  const connection = useConnection();\r\n  async function getOpenOrdersAccounts() {\r\n    if (!connected) {\r\n      return null;\r\n    }\r\n    if (!market) {\r\n      return null;\r\n    }\r\n    return await market.findOpenOrdersAccountsForOwner(\r\n      connection,\r\n      wallet.publicKey,\r\n    );\r\n  }\r\n  return useAsyncData(\r\n    getOpenOrdersAccounts,\r\n    tuple('getOpenOrdersAccounts', wallet, market, connected),\r\n    { refreshInterval: fast ? _FAST_REFRESH_INTERVAL : _SLOW_REFRESH_INTERVAL },\r\n  );\r\n}\r\n\r\nexport function useSelectedOpenOrdersAccount(fast = false) {\r\n  const [accounts] = useOpenOrdersAccounts(fast);\r\n  if (!accounts) {\r\n    return null;\r\n  }\r\n  return accounts[0];\r\n}\r\n\r\nexport function useTokenAccounts(): [\r\n  TokenAccount[] | null | undefined,\r\n  boolean,\r\n] {\r\n  const { connected, wallet } = useWallet();\r\n  const connection = useConnection();\r\n  async function getTokenAccounts() {\r\n    if (!connected) {\r\n      return null;\r\n    }\r\n    return await getTokenAccountInfo(connection, wallet.publicKey);\r\n  }\r\n  return useAsyncData(\r\n    getTokenAccounts,\r\n    tuple('getTokenAccounts', wallet, connected),\r\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\r\n  );\r\n}\r\n\r\nexport function getSelectedTokenAccountForMint(\r\n  accounts: TokenAccount[] | undefined | null,\r\n  mint: PublicKey | undefined,\r\n  selectedPubKey?: string | PublicKey | null,\r\n) {\r\n  if (!accounts || !mint) {\r\n    return null;\r\n  }\r\n  const filtered = accounts.filter(\r\n    ({ effectiveMint, pubkey }) =>\r\n      mint.equals(effectiveMint) &&\r\n      (!selectedPubKey ||\r\n        (typeof selectedPubKey === 'string'\r\n          ? selectedPubKey\r\n          : selectedPubKey.toBase58()) === pubkey.toBase58()),\r\n  );\r\n  return filtered && filtered[0];\r\n}\r\n\r\nexport function useSelectedQuoteCurrencyAccount() {\r\n  const [accounts] = useTokenAccounts();\r\n  const { market } = useMarket();\r\n  const [selectedTokenAccounts] = useSelectedTokenAccounts();\r\n  const mintAddress = market?.quoteMintAddress;\r\n  return getSelectedTokenAccountForMint(\r\n    accounts,\r\n    mintAddress,\r\n    mintAddress && selectedTokenAccounts[mintAddress.toBase58()],\r\n  );\r\n}\r\n\r\nexport function useSelectedBaseCurrencyAccount() {\r\n  const [accounts] = useTokenAccounts();\r\n  const { market } = useMarket();\r\n  const [selectedTokenAccounts] = useSelectedTokenAccounts();\r\n  const mintAddress = market?.baseMintAddress;\r\n  return getSelectedTokenAccountForMint(\r\n    accounts,\r\n    mintAddress,\r\n    mintAddress && selectedTokenAccounts[mintAddress.toBase58()],\r\n  );\r\n}\r\n\r\n// TODO: Update to use websocket\r\nexport function useSelectedQuoteCurrencyBalances() {\r\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\r\n  const { market } = useMarket();\r\n  const [accountInfo, loaded] = useAccountInfo(quoteCurrencyAccount?.pubkey);\r\n  if (!market || !quoteCurrencyAccount || !loaded || !accountInfo) {\r\n    return null;\r\n  }\r\n  if (market.quoteMintAddress.equals(TokenInstructions.WRAPPED_SOL_MINT)) {\r\n    return accountInfo?.lamports / 1e9 ?? 0;\r\n  }\r\n  return market.quoteSplSizeToNumber(\r\n    new BN(accountInfo.data.slice(64, 72), 10, 'le'),\r\n  );\r\n}\r\n\r\n// TODO: Update to use websocket\r\nexport function useSelectedBaseCurrencyBalances() {\r\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\r\n  const { market } = useMarket();\r\n  const [accountInfo, loaded] = useAccountInfo(baseCurrencyAccount?.pubkey);\r\n  if (!market || !baseCurrencyAccount || !loaded || !accountInfo) {\r\n    return null;\r\n  }\r\n  if (market.baseMintAddress.equals(TokenInstructions.WRAPPED_SOL_MINT)) {\r\n    return accountInfo?.lamports / 1e9 ?? 0;\r\n  }\r\n  return market.baseSplSizeToNumber(\r\n    new BN(accountInfo.data.slice(64, 72), 10, 'le'),\r\n  );\r\n}\r\n\r\nexport function useOpenOrders() {\r\n  const { market, marketName } = useMarket();\r\n  const openOrdersAccount = useSelectedOpenOrdersAccount();\r\n  const { bidOrderbook, askOrderbook } = useOrderbookAccounts();\r\n  if (!market || !openOrdersAccount || !bidOrderbook || !askOrderbook) {\r\n    return null;\r\n  }\r\n  return market\r\n    .filterForOpenOrders(bidOrderbook, askOrderbook, [openOrdersAccount])\r\n    .map((order) => ({ ...order, marketName, market }));\r\n}\r\n\r\nexport function useTrades(limit = 100) {\r\n  const trades = _useUnfilteredTrades(limit);\r\n  if (!trades) {\r\n    return null;\r\n  }\r\n  // Until partial fills are each given their own fill, use maker fills\r\n  return trades\r\n    .filter(({ eventFlags }) => eventFlags.maker)\r\n    .map((trade) => ({\r\n      ...trade,\r\n      side: trade.side === 'buy' ? 'sell' : 'buy',\r\n    }));\r\n}\r\n\r\nexport function useFeeDiscountKeys(): [\r\n  (\r\n    | {\r\n        pubkey: PublicKey;\r\n        feeTier: number;\r\n        balance: number;\r\n        mint: PublicKey;\r\n      }[]\r\n    | null\r\n    | undefined\r\n  ),\r\n  boolean,\r\n] {\r\n  const { market } = useMarket();\r\n  const { connected, wallet } = useWallet();\r\n  const connection = useConnection();\r\n  async function getFeeDiscountKeys() {\r\n    if (!connected) {\r\n      return null;\r\n    }\r\n    if (!market) {\r\n      return null;\r\n    }\r\n    return await market.findFeeDiscountKeys(connection, wallet.publicKey);\r\n  }\r\n  return useAsyncData(\r\n    getFeeDiscountKeys,\r\n    tuple('getFeeDiscountKeys', wallet, market, connected),\r\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\r\n  );\r\n}\r\n\r\nexport function useFills(limit = 100) {\r\n  const { marketName } = useMarket();\r\n  const fills = _useUnfilteredTrades(limit);\r\n  const [openOrdersAccounts] = useOpenOrdersAccounts();\r\n  if (!openOrdersAccounts || openOrdersAccounts.length === 0) {\r\n    return null;\r\n  }\r\n  if (!fills) {\r\n    return null;\r\n  }\r\n  return fills\r\n    .filter((fill) =>\r\n      openOrdersAccounts.some((openOrdersAccount) =>\r\n        fill.openOrders.equals(openOrdersAccount.publicKey),\r\n      ),\r\n    )\r\n    .map((fill) => ({ ...fill, marketName }));\r\n}\r\n\r\n// TODO: Update to use websocket\r\nexport function useFillsForAllMarkets(limit = 100) {\r\n  const { connected, wallet } = useWallet();\r\n\r\n  const connection = useConnection();\r\n  // todo: add custom markets\r\n  const allMarkets = useAllMarkets([]);\r\n\r\n  async function getFillsForAllMarkets() {\r\n    let fills: Trade[] = [];\r\n    if (!connected) {\r\n      return fills;\r\n    }\r\n\r\n    let marketData;\r\n    for (marketData of allMarkets) {\r\n      const { market, marketName } = marketData;\r\n      if (!market) {\r\n        return fills;\r\n      }\r\n      const openOrdersAccounts = await market.findOpenOrdersAccountsForOwner(\r\n        connection,\r\n        wallet.publicKey,\r\n      );\r\n      const openOrdersAccount = openOrdersAccounts && openOrdersAccounts[0];\r\n      if (!openOrdersAccount) {\r\n        return fills;\r\n      }\r\n      const eventQueueData = await connection.getAccountInfo(\r\n        market && market._decoded.eventQueue,\r\n      );\r\n      let data = eventQueueData?.data;\r\n      if (!data) {\r\n        return fills;\r\n      }\r\n      const events = decodeEventQueue(data, limit);\r\n      const fillsForMarket: Trade[] = events\r\n        .filter(\r\n          (event) => event.eventFlags.fill && event.nativeQuantityPaid.gtn(0),\r\n        )\r\n        .map(market.parseFillEvent.bind(market));\r\n      const ownFillsForMarket = fillsForMarket\r\n        .filter((fill) => fill.openOrders.equals(openOrdersAccount.publicKey))\r\n        .map((fill) => ({ ...fill, marketName }));\r\n      fills = fills.concat(ownFillsForMarket);\r\n    }\r\n\r\n    console.log(JSON.stringify(fills));\r\n    return fills;\r\n  }\r\n\r\n  return useAsyncData(\r\n    getFillsForAllMarkets,\r\n    tuple('getFillsForAllMarkets', connected, connection, allMarkets, wallet),\r\n    { refreshInterval: _FAST_REFRESH_INTERVAL },\r\n  );\r\n}\r\n\r\nexport function useAllOpenOrdersAccounts() {\r\n  const { wallet, connected } = useWallet();\r\n  const connection = useConnection();\r\n  const { customMarkets } = useMarket();\r\n  const marketInfos = getMarketInfos(customMarkets);\r\n  const programIds = [\r\n    ...new Set(marketInfos.map((info) => info.programId.toBase58())),\r\n  ].map((stringProgramId) => new PublicKey(stringProgramId));\r\n\r\n  const getAllOpenOrdersAccounts = async () => {\r\n    if (!connected) {\r\n      return [];\r\n    }\r\n    return (\r\n      await Promise.all(\r\n        programIds.map((programId) =>\r\n          OpenOrders.findForOwner(connection, wallet.publicKey, programId),\r\n        ),\r\n      )\r\n    ).flat();\r\n  };\r\n  return useAsyncData(\r\n    getAllOpenOrdersAccounts,\r\n    tuple(\r\n      'getAllOpenOrdersAccounts',\r\n      connection,\r\n      connected,\r\n      wallet?.publicKey?.toBase58(),\r\n      customMarkets.length,\r\n      (programIds || []).length,\r\n    ),\r\n    { refreshInterval: _SLOW_REFRESH_INTERVAL },\r\n  );\r\n}\r\n\r\nexport function useAllOpenOrdersBalances() {\r\n  const [\r\n    openOrdersAccounts,\r\n    loadedOpenOrdersAccounts,\r\n  ] = useAllOpenOrdersAccounts();\r\n  const [mintInfos, mintInfosConnected] = useMintInfos();\r\n  const { customMarkets } = useMarket();\r\n  const [allMarkets] = useAllMarkets(customMarkets);\r\n  if (!loadedOpenOrdersAccounts || !mintInfosConnected) {\r\n    return {};\r\n  }\r\n\r\n  const marketsByAddress = Object.fromEntries(\r\n    (allMarkets || []).map((m) => [m.market.address.toBase58(), m]),\r\n  );\r\n  const openOrdersBalances: {\r\n    [mint: string]: { market: PublicKey; free: number; total: number }[];\r\n  } = {};\r\n  for (let account of openOrdersAccounts || []) {\r\n    const marketInfo = marketsByAddress[account.market.toBase58()];\r\n    const baseMint = marketInfo?.market.baseMintAddress.toBase58();\r\n    const quoteMint = marketInfo?.market.quoteMintAddress.toBase58();\r\n    if (!(baseMint in openOrdersBalances)) {\r\n      openOrdersBalances[baseMint] = [];\r\n    }\r\n    if (!(quoteMint in openOrdersBalances)) {\r\n      openOrdersBalances[quoteMint] = [];\r\n    }\r\n\r\n    const baseMintInfo = mintInfos && mintInfos[baseMint];\r\n    const baseFree = divideBnToNumber(\r\n      new BN(account.baseTokenFree),\r\n      getTokenMultiplierFromDecimals(baseMintInfo?.decimals || 0),\r\n    );\r\n    const baseTotal = divideBnToNumber(\r\n      new BN(account.baseTokenTotal),\r\n      getTokenMultiplierFromDecimals(baseMintInfo?.decimals || 0),\r\n    );\r\n    const quoteMintInfo = mintInfos && mintInfos[quoteMint];\r\n    const quoteFree = divideBnToNumber(\r\n      new BN(account.quoteTokenFree),\r\n      getTokenMultiplierFromDecimals(quoteMintInfo?.decimals || 0),\r\n    );\r\n    const quoteTotal = divideBnToNumber(\r\n      new BN(account.quoteTokenTotal),\r\n      getTokenMultiplierFromDecimals(quoteMintInfo?.decimals || 0),\r\n    );\r\n\r\n    openOrdersBalances[baseMint].push({\r\n      market: account.market,\r\n      free: baseFree,\r\n      total: baseTotal,\r\n    });\r\n    openOrdersBalances[quoteMint].push({\r\n      market: account.market,\r\n      free: quoteFree,\r\n      total: quoteTotal,\r\n    });\r\n  }\r\n  return openOrdersBalances;\r\n}\r\n\r\nexport function useAllOpenOrders(): {\r\n  openOrders: { orders: Order[]; marketAddress: string }[] | null | undefined;\r\n  loaded: boolean;\r\n  refreshOpenOrders: () => void;\r\n} {\r\n  const connection = useConnection();\r\n  const { connected } = useWallet();\r\n  const [\r\n    openOrdersAccounts,\r\n    openOrdersAccountsConnected,\r\n  ] = useAllOpenOrdersAccounts();\r\n  const { customMarkets } = useMarket();\r\n  const [marketInfos, marketInfosConnected] = useAllMarkets(customMarkets);\r\n  const openOrdersAccountsByAddress: {\r\n    [marketAddress: string]: OpenOrders[];\r\n  } = {};\r\n  for (let account of openOrdersAccounts || []) {\r\n    const marketsAddr = account.market.toBase58();\r\n    if (!(marketsAddr in openOrdersAccountsByAddress)) {\r\n      openOrdersAccountsByAddress[marketsAddr] = [];\r\n    }\r\n    openOrdersAccountsByAddress[marketsAddr].push(account);\r\n  }\r\n  const marketsByAddress = Object.fromEntries(\r\n    (marketInfos || []).map((info) => [info.market.publicKey.toBase58(), info]),\r\n  );\r\n  const getAllOpenOrders = async () => {\r\n    return await Promise.all(\r\n      Object.keys(openOrdersAccountsByAddress).map(async (marketAddr) => {\r\n        const market = marketsByAddress[marketAddr].market;\r\n        const [bids, asks] = await Promise.all([\r\n          market.loadBids(connection),\r\n          market.loadAsks(connection),\r\n        ]);\r\n        return {\r\n          orders: market.filterForOpenOrders(\r\n            bids,\r\n            asks,\r\n            openOrdersAccountsByAddress[marketAddr],\r\n          ),\r\n          marketAddress: marketAddr,\r\n        };\r\n      }),\r\n    );\r\n  };\r\n  const cacheKey = tuple(\r\n    'getAllOpenOrders',\r\n    openOrdersAccountsConnected,\r\n    (openOrdersAccounts || []).length,\r\n    connection,\r\n    connected,\r\n    marketInfosConnected,\r\n  );\r\n  const [openOrders, loaded] = useAsyncData(getAllOpenOrders, cacheKey, {\r\n    refreshInterval: _VERY_SLOW_REFRESH_INTERVAL,\r\n  });\r\n  return {\r\n    openOrders,\r\n    loaded,\r\n    refreshOpenOrders: () => refreshCache(cacheKey),\r\n  };\r\n}\r\n\r\nexport function useBalances(): Balances[] {\r\n  const baseCurrencyBalances = useSelectedBaseCurrencyBalances();\r\n  const quoteCurrencyBalances = useSelectedQuoteCurrencyBalances();\r\n  const openOrders = useSelectedOpenOrdersAccount(true);\r\n  const { baseCurrency, quoteCurrency, market } = useMarket();\r\n  const baseExists =\r\n    openOrders && openOrders.baseTokenTotal && openOrders.baseTokenFree;\r\n  const quoteExists =\r\n    openOrders && openOrders.quoteTokenTotal && openOrders.quoteTokenFree;\r\n  if (\r\n    baseCurrency === 'UNKNOWN' ||\r\n    quoteCurrency === 'UNKNOWN' ||\r\n    !baseCurrency ||\r\n    !quoteCurrency\r\n  ) {\r\n    return [];\r\n  }\r\n  return [\r\n    {\r\n      market,\r\n      key: `${baseCurrency}${quoteCurrency}${baseCurrency}`,\r\n      coin: baseCurrency,\r\n      wallet: baseCurrencyBalances,\r\n      orders:\r\n        baseExists && market && openOrders\r\n          ? market.baseSplSizeToNumber(\r\n              openOrders.baseTokenTotal.sub(openOrders.baseTokenFree),\r\n            )\r\n          : null,\r\n      openOrders,\r\n      unsettled:\r\n        baseExists && market && openOrders\r\n          ? market.baseSplSizeToNumber(openOrders.baseTokenFree)\r\n          : null,\r\n    },\r\n    {\r\n      market,\r\n      key: `${quoteCurrency}${baseCurrency}${quoteCurrency}`,\r\n      coin: quoteCurrency,\r\n      wallet: quoteCurrencyBalances,\r\n      openOrders,\r\n      orders:\r\n        quoteExists && market && openOrders\r\n          ? market.quoteSplSizeToNumber(\r\n              openOrders.quoteTokenTotal.sub(openOrders.quoteTokenFree),\r\n            )\r\n          : null,\r\n      unsettled:\r\n        quoteExists && market && openOrders\r\n          ? market.quoteSplSizeToNumber(openOrders.quoteTokenFree)\r\n          : null,\r\n    },\r\n  ];\r\n}\r\n\r\nexport function useWalletBalancesForAllMarkets(): {\r\n  mint: string;\r\n  balance: number;\r\n}[] {\r\n  const [tokenAccounts] = useTokenAccounts();\r\n  const { connected } = useWallet();\r\n  const [mintInfos, mintInfosConnected] = useMintInfos();\r\n\r\n  if (!connected || !mintInfosConnected) {\r\n    return [];\r\n  }\r\n\r\n  let balances: { [mint: string]: number } = {};\r\n  for (let account of tokenAccounts || []) {\r\n    if (!account.account) {\r\n      continue;\r\n    }\r\n    let parsedAccount;\r\n    if (account.effectiveMint.equals(WRAPPED_SOL_MINT)) {\r\n      parsedAccount = {\r\n        mint: WRAPPED_SOL_MINT,\r\n        owner: account.pubkey,\r\n        amount: account.account.lamports,\r\n      };\r\n    } else {\r\n      parsedAccount = parseTokenAccountData(account.account.data);\r\n    }\r\n    if (!(parsedAccount.mint.toBase58() in balances)) {\r\n      balances[parsedAccount.mint.toBase58()] = 0;\r\n    }\r\n    const mintInfo = mintInfos && mintInfos[parsedAccount.mint.toBase58()];\r\n    const additionalAmount = divideBnToNumber(\r\n      new BN(parsedAccount.amount),\r\n      getTokenMultiplierFromDecimals(mintInfo?.decimals || 0),\r\n    );\r\n    balances[parsedAccount.mint.toBase58()] += additionalAmount;\r\n  }\r\n  return Object.entries(balances).map(([mint, balance]) => {\r\n    return { mint, balance };\r\n  });\r\n}\r\n\r\nexport function useUnmigratedDeprecatedMarkets() {\r\n  const connection = useConnection();\r\n  const { accounts } = useUnmigratedOpenOrdersAccounts();\r\n  const marketsList =\r\n    accounts &&\r\n    Array.from(new Set(accounts.map((openOrders) => openOrders.market)));\r\n  const deps = marketsList && marketsList.map((m) => m.toBase58());\r\n\r\n  const useUnmigratedDeprecatedMarketsInner = async () => {\r\n    if (!marketsList) {\r\n      return null;\r\n    }\r\n    const getMarket = async (address) => {\r\n      const marketInfo = USE_MARKETS.find((market) =>\r\n        market.address.equals(address),\r\n      );\r\n      if (!marketInfo) {\r\n        console.log('Failed loading market');\r\n        notify({\r\n          message: 'Error loading market',\r\n          type: 'error',\r\n        });\r\n        return null;\r\n      }\r\n      try {\r\n        console.log('Loading market', marketInfo.name);\r\n        // NOTE: Should this just be cached by (connection, marketInfo.address, marketInfo.programId)?\r\n        return await Market.load(\r\n          connection,\r\n          marketInfo.address,\r\n          {},\r\n          marketInfo.programId,\r\n        );\r\n      } catch (e) {\r\n        console.log('Failed loading market', marketInfo.name, e);\r\n        notify({\r\n          message: 'Error loading market',\r\n          description: e.message,\r\n          type: 'error',\r\n        });\r\n        return null;\r\n      }\r\n    };\r\n    return (await Promise.all(marketsList.map(getMarket))).filter((x) => x);\r\n  };\r\n  const [markets] = useAsyncData(\r\n    useUnmigratedDeprecatedMarketsInner,\r\n    tuple(\r\n      'useUnmigratedDeprecatedMarketsInner',\r\n      connection,\r\n      deps && deps.toString(),\r\n    ),\r\n    { refreshInterval: _VERY_SLOW_REFRESH_INTERVAL },\r\n  );\r\n  if (!markets) {\r\n    return null;\r\n  }\r\n  return markets.map((market) => ({\r\n    market,\r\n    openOrdersList: accounts?.filter(\r\n      (openOrders) => market && openOrders.market.equals(market.address),\r\n    ),\r\n  }));\r\n}\r\n\r\nexport function useGetOpenOrdersForDeprecatedMarkets(): {\r\n  openOrders: OrderWithMarketAndMarketName[] | null | undefined;\r\n  loaded: boolean;\r\n  refreshOpenOrders: () => void;\r\n} {\r\n  const { connected, wallet } = useWallet();\r\n  const [customMarkets] = useLocalStorageState<CustomMarketInfo[]>(\r\n    'customMarkets',\r\n    [],\r\n  );\r\n  const connection = useConnection();\r\n  const marketsAndOrders = useUnmigratedDeprecatedMarkets();\r\n  const marketsList =\r\n    marketsAndOrders && marketsAndOrders.map(({ market }) => market);\r\n\r\n  // This isn't quite right: open order balances could change\r\n  const deps =\r\n    marketsList &&\r\n    marketsList\r\n      .filter((market): market is Market => !!market)\r\n      .map((market) => market.address.toBase58());\r\n\r\n  async function getOpenOrdersForDeprecatedMarkets() {\r\n    if (!connected) {\r\n      return null;\r\n    }\r\n    if (!marketsList) {\r\n      return null;\r\n    }\r\n    console.log('refreshing getOpenOrdersForDeprecatedMarkets');\r\n    const getOrders = async (market: Market | null) => {\r\n      if (!market) {\r\n        return null;\r\n      }\r\n      const { marketName } = getMarketDetails(market, customMarkets);\r\n      try {\r\n        console.log('Fetching open orders for', marketName);\r\n        // Can do better than this, we have the open orders accounts already\r\n        return (\r\n          await market.loadOrdersForOwner(connection, wallet.publicKey)\r\n        ).map((order) => ({ marketName, market, ...order }));\r\n      } catch (e) {\r\n        console.log('Failed loading open orders', market.address.toBase58(), e);\r\n        notify({\r\n          message: `Error loading open orders for deprecated ${marketName}`,\r\n          description: e.message,\r\n          type: 'error',\r\n        });\r\n        return null;\r\n      }\r\n    };\r\n    return (await Promise.all(marketsList.map(getOrders)))\r\n      .filter((x): x is OrderWithMarketAndMarketName[] => !!x)\r\n      .flat();\r\n  }\r\n\r\n  const cacheKey = tuple(\r\n    'getOpenOrdersForDeprecatedMarkets',\r\n    connected,\r\n    connection,\r\n    wallet,\r\n    deps && deps.toString(),\r\n  );\r\n  const [openOrders, loaded] = useAsyncData(\r\n    getOpenOrdersForDeprecatedMarkets,\r\n    cacheKey,\r\n    {\r\n      refreshInterval: _VERY_SLOW_REFRESH_INTERVAL,\r\n    },\r\n  );\r\n  console.log('openOrders', openOrders);\r\n  return {\r\n    openOrders,\r\n    loaded,\r\n    refreshOpenOrders: () => refreshCache(cacheKey),\r\n  };\r\n}\r\n\r\nexport function useBalancesForDeprecatedMarkets() {\r\n  const markets = useUnmigratedDeprecatedMarkets();\r\n  const [customMarkets] = useLocalStorageState<CustomMarketInfo[]>(\r\n    'customMarkets',\r\n    [],\r\n  );\r\n  if (!markets) {\r\n    return null;\r\n  }\r\n\r\n  const openOrderAccountBalances: DeprecatedOpenOrdersBalances[] = [];\r\n  markets.forEach(({ market, openOrdersList }) => {\r\n    const { baseCurrency, quoteCurrency, marketName } = getMarketDetails(\r\n      market,\r\n      customMarkets,\r\n    );\r\n    if (!baseCurrency || !quoteCurrency || !market) {\r\n      return;\r\n    }\r\n    (openOrdersList || []).forEach((openOrders) => {\r\n      const inOrdersBase =\r\n        openOrders?.baseTokenTotal &&\r\n        openOrders?.baseTokenFree &&\r\n        market.baseSplSizeToNumber(\r\n          openOrders.baseTokenTotal.sub(openOrders.baseTokenFree),\r\n        );\r\n      const inOrdersQuote =\r\n        openOrders?.quoteTokenTotal &&\r\n        openOrders?.quoteTokenFree &&\r\n        market.baseSplSizeToNumber(\r\n          openOrders.quoteTokenTotal.sub(openOrders.quoteTokenFree),\r\n        );\r\n      const unsettledBase =\r\n        openOrders?.baseTokenFree &&\r\n        market.baseSplSizeToNumber(openOrders.baseTokenFree);\r\n      const unsettledQuote =\r\n        openOrders?.quoteTokenFree &&\r\n        market.baseSplSizeToNumber(openOrders.quoteTokenFree);\r\n\r\n      openOrderAccountBalances.push({\r\n        marketName,\r\n        market,\r\n        coin: baseCurrency,\r\n        key: `${marketName}${baseCurrency}`,\r\n        orders: inOrdersBase,\r\n        unsettled: unsettledBase,\r\n        openOrders,\r\n      });\r\n      openOrderAccountBalances.push({\r\n        marketName,\r\n        market,\r\n        coin: quoteCurrency,\r\n        key: `${marketName}${quoteCurrency}`,\r\n        orders: inOrdersQuote,\r\n        unsettled: unsettledQuote,\r\n        openOrders,\r\n      });\r\n    });\r\n  });\r\n  return openOrderAccountBalances;\r\n}\r\n\r\nexport function getMarketInfos(\r\n  customMarkets: CustomMarketInfo[],\r\n): MarketInfo[] {\r\n  const customMarketsInfo = customMarkets.map((m) => ({\r\n    ...m,\r\n    address: new PublicKey(m.address),\r\n    programId: new PublicKey(m.programId),\r\n    deprecated: false,\r\n  }));\r\n\r\n  return [...customMarketsInfo, ...USE_MARKETS];\r\n}\r\n\r\nexport function useMarketInfos() {\r\n  const { customMarkets } = useMarket();\r\n  return getMarketInfos(customMarkets);\r\n}\r\n\r\n/**\r\n * If selling, choose min tick size. If buying choose a price\r\n * s.t. given the state of the orderbook, the order will spend\r\n * `cost` cost currency.\r\n *\r\n * @param orderbook serum Orderbook object\r\n * @param cost quantity to spend. Base currency if selling,\r\n *  quote currency if buying.\r\n * @param tickSizeDecimals size of price increment of the market\r\n */\r\nexport function getMarketOrderPrice(\r\n  orderbook: Orderbook,\r\n  cost: number,\r\n  tickSizeDecimals?: number,\r\n) {\r\n  if (orderbook.isBids) {\r\n    return orderbook.market.tickSize;\r\n  }\r\n  let spentCost = 0;\r\n  let price, sizeAtLevel, costAtLevel: number;\r\n  const asks = orderbook.getL2(1000);\r\n  for ([price, sizeAtLevel] of asks) {\r\n    costAtLevel = price * sizeAtLevel;\r\n    if (spentCost + costAtLevel > cost) {\r\n      break;\r\n    }\r\n    spentCost += costAtLevel;\r\n  }\r\n  const sendPrice = Math.min(price * 1.02, asks[0][0] * 1.05);\r\n  let formattedPrice;\r\n  if (tickSizeDecimals) {\r\n    formattedPrice = floorToDecimal(sendPrice, tickSizeDecimals);\r\n  } else {\r\n    formattedPrice = sendPrice;\r\n  }\r\n  return formattedPrice;\r\n}\r\n\r\nexport function getExpectedFillPrice(\r\n  orderbook: Orderbook,\r\n  cost: number,\r\n  tickSizeDecimals?: number,\r\n) {\r\n  let spentCost = 0;\r\n  let avgPrice = 0;\r\n  let price, sizeAtLevel, costAtLevel: number;\r\n  for ([price, sizeAtLevel] of orderbook.getL2(1000)) {\r\n    costAtLevel = (orderbook.isBids ? 1 : price) * sizeAtLevel;\r\n    if (spentCost + costAtLevel > cost) {\r\n      avgPrice += (cost - spentCost) * price;\r\n      spentCost = cost;\r\n      break;\r\n    }\r\n    avgPrice += costAtLevel * price;\r\n    spentCost += costAtLevel;\r\n  }\r\n  const totalAvgPrice = avgPrice / Math.min(cost, spentCost);\r\n  let formattedPrice;\r\n  if (tickSizeDecimals) {\r\n    formattedPrice = floorToDecimal(totalAvgPrice, tickSizeDecimals);\r\n  } else {\r\n    formattedPrice = totalAvgPrice;\r\n  }\r\n  return formattedPrice;\r\n}\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\nhtml,body{\r\n  background: #11161D;\r\n}\r\ninput[type=number]::-webkit-inner-spin-button {\r\n  opacity: 0;\r\n}\r\ninput[type=number]:hover::-webkit-inner-spin-button,\r\ninput[type=number]:focus::-webkit-inner-spin-button {\r\n  opacity: 0.25;\r\n}\r\n/* width */\r\n::-webkit-scrollbar {\r\n  width: 15px;\r\n}\r\n/* Track */\r\n::-webkit-scrollbar-track {\r\n  background: #2d313c;\r\n}\r\n/* Handle */\r\n::-webkit-scrollbar-thumb {\r\n  background: #5b5f67;\r\n}\r\n/* Handle on hover */\r\n::-webkit-scrollbar-thumb:hover {\r\n  background: #5b5f67;\r\n}\r\n.ant-slider-track, .ant-slider:hover .ant-slider-track {\r\n  background-color: #2abdd2;\r\n  opacity: 0.75;\r\n}\r\n.ant-slider-track,\r\n.ant-slider ant-slider-track:hover {\r\n  background-color: #2abdd2;\r\n  opacity: 0.75;\r\n}\r\n.ant-slider-dot-active,\r\n.ant-slider-handle,\r\n.ant-slider-handle-click-focused,\r\n.ant-slider:hover .ant-slider-handle:not(.ant-tooltip-open)  {\r\n  border: 2px solid #2abdd2; \r\n}\r\n.ant-table-tbody > tr.ant-table-row:hover > td {\r\n  background: #273043;\r\n}\r\n.ant-table-tbody > tr > td {\r\n  border-bottom: 8px solid #1A2029;\r\n}\r\n.ant-table-container table > thead > tr:first-child th {\r\n  border-bottom: none;\r\n}\r\n.ant-divider-horizontal.ant-divider-with-text::before, .ant-divider-horizontal.ant-divider-with-text::after {\r\n  border-top: 1px solid #434a59 !important;\r\n}\r\n.ant-layout {\r\n    background: #11161D\r\n  }\r\n  .ant-table {\r\n    background: #212734;\r\n  }\r\n  .ant-table-thead > tr > th {\r\n    background: #1A2029;\r\n  }\r\n.ant-select-item-option-content {\r\n  img {\r\n    margin-right: 4px;\r\n  }\r\n}\r\n.ant-modal-content {\r\n  background-color: #212734;\r\n}\r\n\r\n@-webkit-keyframes highlight {\r\n  from { background-color: #2abdd2;}\r\n  to {background-color: #1A2029;}\r\n}\r\n@-moz-keyframes highlight {\r\n  from { background-color: #2abdd2;}\r\n  to {background-color: #1A2029;}\r\n}\r\n@-keyframes highlight {\r\n  from { background-color: #2abdd2;}\r\n  to {background-color: #1A2029;}\r\n}\r\n.flash {\r\n  -moz-animation: highlight 0.5s ease 0s 1 alternate ;\r\n  -webkit-animation: highlight 0.5s ease 0s 1 alternate;\r\n  animation: highlight 0.5s ease 0s 1 alternate;\r\n}`;\r\n","import React, { Component } from 'react';\r\nimport { Typography } from 'antd';\r\n\r\nconst { Title } = Typography;\r\n\r\nexport default class ErrorBoundary extends Component {\r\n  state = {\r\n    hasError: false,\r\n  };\r\n\r\n  static getDerivedStateFromError(error) {\r\n    return { hasError: true };\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return (\r\n        <div>\r\n          <div>\r\n            <Title level={2}>Something went wrong.</Title>\r\n            <Title level={4}>Please try again later.</Title>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n","import { useRef, useEffect } from 'react';\r\n\r\nexport function useInterval(callback, delay) {\r\n  const savedCallback = useRef<() => void>();\r\n\r\n  // Remember the latest callback.\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    function tick() {\r\n      savedCallback.current && savedCallback.current();\r\n    }\r\n    if (delay !== null) {\r\n      let id = setInterval(tick, delay);\r\n      return () => {\r\n        clearInterval(id);\r\n      };\r\n    }\r\n  }, [delay]);\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n  margin: 5px;\r\n  padding: 20px;\r\n  background-color: #1a2029;\r\n`;\r\n\r\nexport default function FloatingElement({\r\n  style = undefined,\r\n  children,\r\n  stretchVertical = false,\r\n}) {\r\n  return (\r\n    <Wrapper\r\n      style={{\r\n        height: stretchVertical ? 'calc(100% - 10px)' : undefined,\r\n        ...style,\r\n      }}\r\n    >\r\n      {children}\r\n    </Wrapper>\r\n  );\r\n}\r\n","import { Col, Row } from 'antd';\r\nimport React, { useRef, useEffect, useState } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { useMarket, useOrderbook, useMarkPrice } from '../utils/markets';\r\nimport { isEqual, getDecimalCount } from '../utils/utils';\r\nimport { useInterval } from '../utils/useInterval';\r\nimport FloatingElement from './layout/FloatingElement';\r\nimport usePrevious from '../utils/usePrevious';\r\nimport { ArrowUpOutlined, ArrowDownOutlined } from '@ant-design/icons';\r\n\r\nconst Title = styled.div`\r\n  color: rgba(255, 255, 255, 1);\r\n`;\r\n\r\nconst SizeTitle = styled(Row)`\r\n  padding: 20px 0 14px;\r\n  color: #434a59;\r\n`;\r\n\r\nconst MarkPriceTitle = styled(Row)`\r\n  padding: 20px 0 14px;\r\n  font-weight: 700;\r\n`;\r\n\r\nconst Line = styled.div`\r\n  text-align: right;\r\n  float: right;\r\n  height: 100%;\r\n  ${(props) =>\r\n    props['data-width'] &&\r\n    css`\r\n      width: ${props['data-width']};\r\n    `}\r\n  ${(props) =>\r\n    props['data-bgcolor'] &&\r\n    css`\r\n      background-color: ${props['data-bgcolor']};\r\n    `}\r\n`;\r\n\r\nconst Price = styled.div`\r\n  position: absolute;\r\n  right: 5px;\r\n  color: white;\r\n`;\r\n\r\nexport default function Orderbook({ smallScreen, depth = 7, onPrice, onSize }) {\r\n  const markPrice = useMarkPrice();\r\n  const [orderbook] = useOrderbook();\r\n  const { baseCurrency, quoteCurrency } = useMarket();\r\n\r\n  const currentOrderbookData = useRef(null);\r\n  const lastOrderbookData = useRef(null);\r\n\r\n  const [orderbookData, setOrderbookData] = useState(null);\r\n\r\n  useInterval(() => {\r\n    if (\r\n      !currentOrderbookData.current ||\r\n      JSON.stringify(currentOrderbookData.current) !==\r\n        JSON.stringify(lastOrderbookData.current)\r\n    ) {\r\n      let bids = orderbook?.bids || [];\r\n      let asks = orderbook?.asks || [];\r\n\r\n      let sum = (total, [, size], index) =>\r\n        index < depth ? total + size : total;\r\n      let totalSize = bids.reduce(sum, 0) + asks.reduce(sum, 0);\r\n\r\n      let bidsToDisplay = getCumulativeOrderbookSide(bids, totalSize, false);\r\n      let asksToDisplay = getCumulativeOrderbookSide(asks, totalSize, true);\r\n\r\n      currentOrderbookData.current = {\r\n        bids: orderbook?.bids,\r\n        asks: orderbook?.asks,\r\n      };\r\n\r\n      setOrderbookData({ bids: bidsToDisplay, asks: asksToDisplay });\r\n    }\r\n  }, 250);\r\n\r\n  useEffect(() => {\r\n    lastOrderbookData.current = {\r\n      bids: orderbook?.bids,\r\n      asks: orderbook?.asks,\r\n    };\r\n  }, [orderbook]);\r\n\r\n  function getCumulativeOrderbookSide(orders, totalSize, backwards = false) {\r\n    let cumulative = orders\r\n      .slice(0, depth)\r\n      .reduce((cumulative, [price, size], i) => {\r\n        const cumulativeSize = (cumulative[i - 1]?.cumulativeSize || 0) + size;\r\n        cumulative.push({\r\n          price,\r\n          size,\r\n          cumulativeSize,\r\n          sizePercent: Math.round((cumulativeSize / (totalSize || 1)) * 100),\r\n        });\r\n        return cumulative;\r\n      }, []);\r\n    if (backwards) {\r\n      cumulative = cumulative.reverse();\r\n    }\r\n    return cumulative;\r\n  }\r\n\r\n  return (\r\n    <FloatingElement\r\n      style={\r\n        smallScreen ? { flex: 1 } : { height: '500px', overflow: 'hidden' }\r\n      }\r\n    >\r\n      <Title>Orderbook</Title>\r\n      <SizeTitle>\r\n        <Col span={12} style={{ textAlign: 'left' }}>\r\n          Size ({baseCurrency})\r\n        </Col>\r\n        <Col span={12} style={{ textAlign: 'right' }}>\r\n          Price ({quoteCurrency})\r\n        </Col>\r\n      </SizeTitle>\r\n      {orderbookData?.asks.map(({ price, size, sizePercent }) => (\r\n        <OrderbookRow\r\n          key={price + ''}\r\n          price={price}\r\n          size={size}\r\n          side={'sell'}\r\n          sizePercent={sizePercent}\r\n          onPriceClick={() => onPrice(price)}\r\n          onSizeClick={() => onSize(size)}\r\n        />\r\n      ))}\r\n      <MarkPriceComponent markPrice={markPrice} />\r\n      {orderbookData?.bids.map(({ price, size, sizePercent }) => (\r\n        <OrderbookRow\r\n          key={price + ''}\r\n          price={price}\r\n          size={size}\r\n          side={'buy'}\r\n          sizePercent={sizePercent}\r\n          onPriceClick={() => onPrice(price)}\r\n          onSizeClick={() => onSize(size)}\r\n        />\r\n      ))}\r\n    </FloatingElement>\r\n  );\r\n}\r\n\r\nconst OrderbookRow = React.memo(\r\n  ({ side, price, size, sizePercent, onSizeClick, onPriceClick }) => {\r\n    const element = useRef();\r\n\r\n    const { market } = useMarket();\r\n\r\n    useEffect(() => {\r\n      // eslint-disable-next-line\r\n      !element.current?.classList.contains('flash') &&\r\n        element.current?.classList.add('flash');\r\n      const id = setTimeout(\r\n        () =>\r\n          element.current?.classList.contains('flash') &&\r\n          element.current?.classList.remove('flash'),\r\n        250,\r\n      );\r\n      return () => clearTimeout(id);\r\n    }, [price, size]);\r\n\r\n    let formattedSize =\r\n      market?.minOrderSize && !isNaN(size)\r\n        ? Number(size).toFixed(getDecimalCount(market.minOrderSize) + 1)\r\n        : size;\r\n\r\n    let formattedPrice =\r\n      market?.tickSize && !isNaN(price)\r\n        ? Number(price).toFixed(getDecimalCount(market.tickSize) + 1)\r\n        : price;\r\n\r\n    return (\r\n      <Row ref={element} style={{ marginBottom: 1 }} onClick={onSizeClick}>\r\n        <Col span={12} style={{ textAlign: 'left' }}>\r\n          {formattedSize}\r\n        </Col>\r\n        <Col span={12} style={{ textAlign: 'right' }}>\r\n          <Line\r\n            data-width={sizePercent + '%'}\r\n            data-bgcolor={\r\n              side === 'buy'\r\n                ? 'rgba(65, 199, 122, 0.6)'\r\n                : 'rgba(242, 60, 105, 0.6)'\r\n            }\r\n          />\r\n          <Price onClick={onPriceClick}>{formattedPrice}</Price>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  },\r\n  (prevProps, nextProps) =>\r\n    isEqual(prevProps, nextProps, ['price', 'size', 'sizePercent']),\r\n);\r\n\r\nconst MarkPriceComponent = React.memo(\r\n  ({ markPrice }) => {\r\n    const { market } = useMarket();\r\n    const previousMarkPrice = usePrevious(markPrice);\r\n\r\n    let markPriceColor =\r\n      markPrice > previousMarkPrice\r\n        ? '#41C77A'\r\n        : markPrice < previousMarkPrice\r\n        ? '#F23B69'\r\n        : 'white';\r\n\r\n    let formattedMarkPrice =\r\n      markPrice &&\r\n      market?.tickSize &&\r\n      markPrice.toFixed(getDecimalCount(market.tickSize));\r\n\r\n    return (\r\n      <MarkPriceTitle justify=\"center\">\r\n        <Col style={{ color: markPriceColor }}>\r\n          {markPrice > previousMarkPrice && (\r\n            <ArrowUpOutlined style={{ marginRight: 5 }} />\r\n          )}\r\n          {markPrice < previousMarkPrice && (\r\n            <ArrowDownOutlined style={{ marginRight: 5 }} />\r\n          )}\r\n          {formattedMarkPrice || '----'}\r\n        </Col>\r\n      </MarkPriceTitle>\r\n    );\r\n  },\r\n  (prevProps, nextProps) => isEqual(prevProps, nextProps, ['markPrice']),\r\n);\r\n","import { useEffect, useRef } from 'react';\r\n\r\nexport default function usePrevious(value) {\r\n  // The ref object is a generic container whose current property is mutable ...\r\n  // ... and can hold any value, similar to an instance property on a class\r\n  const ref = useRef();\r\n\r\n  // Store current value in ref\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  }, [value]); // Only re-run if value changes\r\n\r\n  // Return previous value (happens before update in useEffect above)\r\n  return ref.current;\r\n}\r\n","import React from 'react';\r\nimport { ConfigProvider, Table } from 'antd';\r\n\r\nexport default function DataTable({\r\n  dataSource,\r\n  columns,\r\n  emptyLabel = 'No data',\r\n  pagination = false,\r\n  loading = false,\r\n  pageSize = 10,\r\n}) {\r\n  const customizeRenderEmpty = () => (\r\n    <div\r\n      style={{\r\n        padding: '20px',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n      }}\r\n    >\r\n      {emptyLabel}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <ConfigProvider renderEmpty={customizeRenderEmpty}>\r\n      <Table\r\n        dataSource={dataSource}\r\n        columns={columns}\r\n        pagination={pagination ? { pagination: true, pageSize } : false}\r\n        loading={loading}\r\n      />\r\n    </ConfigProvider>\r\n  );\r\n}\r\n","import { Button } from 'antd';\r\nimport React from 'react';\r\nimport {\r\n  useTokenAccounts,\r\n  getSelectedTokenAccountForMint,\r\n} from '../../utils/markets';\r\nimport DataTable from '../layout/DataTable';\r\nimport { useSendConnection } from '../../utils/connection';\r\nimport { useWallet } from '../../utils/wallet';\r\nimport { settleFunds } from '../../utils/send';\r\nimport { notify } from '../../utils/notifications';\r\n\r\nexport default function BalancesTable({\r\n  balances,\r\n  showMarket,\r\n  hideWalletBalance,\r\n  onSettleSuccess,\r\n}) {\r\n  const [accounts] = useTokenAccounts();\r\n  const connection = useSendConnection();\r\n  const { wallet } = useWallet();\r\n\r\n  async function onSettleFunds(market, openOrders) {\r\n    try {\r\n      await settleFunds({\r\n        market,\r\n        openOrders,\r\n        connection,\r\n        wallet,\r\n        baseCurrencyAccount: getSelectedTokenAccountForMint(\r\n          accounts,\r\n          market?.baseMintAddress,\r\n        ),\r\n        quoteCurrencyAccount: getSelectedTokenAccountForMint(\r\n          accounts,\r\n          market?.quoteMintAddress,\r\n        ),\r\n      });\r\n    } catch (e) {\r\n      notify({\r\n        message: 'Error settling funds',\r\n        description: e.message,\r\n        type: 'error',\r\n      });\r\n      return;\r\n    }\r\n    onSettleSuccess && onSettleSuccess();\r\n  }\r\n\r\n  const columns = [\r\n    showMarket\r\n      ? {\r\n          title: 'Market',\r\n          dataIndex: 'marketName',\r\n          key: 'marketName',\r\n        }\r\n      : null,\r\n    {\r\n      title: 'Coin',\r\n      dataIndex: 'coin',\r\n      key: 'coin',\r\n    },\r\n    hideWalletBalance\r\n      ? null\r\n      : {\r\n          title: 'Wallet Balance',\r\n          dataIndex: 'wallet',\r\n          key: 'wallet',\r\n        },\r\n    {\r\n      title: 'Orders',\r\n      dataIndex: 'orders',\r\n      key: 'orders',\r\n    },\r\n    {\r\n      title: 'Unsettled',\r\n      dataIndex: 'unsettled',\r\n      key: 'unsettled',\r\n    },\r\n    {\r\n      key: 'action',\r\n      render: ({ market, openOrders, marketName }) => (\r\n        <div style={{ textAlign: 'right' }}>\r\n          <Button\r\n            ghost\r\n            style={{ marginRight: 12 }}\r\n            onClick={() => onSettleFunds(market, openOrders)}\r\n          >\r\n            Settle {marketName}\r\n          </Button>\r\n        </div>\r\n      ),\r\n    },\r\n  ].filter((x) => x);\r\n  return (\r\n    <DataTable\r\n      emptyLabel=\"No balances\"\r\n      dataSource={balances}\r\n      columns={columns}\r\n      pagination={false}\r\n    />\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport DataTable from '../layout/DataTable';\r\n\r\nimport styled from 'styled-components';\r\nimport { Button, Col, Row, Tag } from 'antd';\r\nimport { cancelOrder } from '../../utils/send';\r\nimport { useWallet } from '../../utils/wallet';\r\nimport { useSendConnection } from '../../utils/connection';\r\nimport { notify } from '../../utils/notifications';\r\nimport { DeleteOutlined } from '@ant-design/icons';\r\nimport { OrderWithMarketAndMarketName } from '../../utils/types';\r\n\r\nconst CancelButton = styled(Button)`\r\n  color: #f23b69;\r\n  border: 1px solid #f23b69;\r\n`;\r\n\r\nexport default function OpenOrderTable({\r\n  openOrders,\r\n  onCancelSuccess,\r\n  pageSize,\r\n  loading,\r\n  marketFilter,\r\n}: {\r\n  openOrders: OrderWithMarketAndMarketName[] | null | undefined;\r\n  onCancelSuccess?: () => void;\r\n  pageSize?: number;\r\n  loading?: boolean;\r\n  marketFilter?: boolean;\r\n}) {\r\n  let { wallet } = useWallet();\r\n  let connection = useSendConnection();\r\n\r\n  const [cancelId, setCancelId] = useState(null);\r\n\r\n  async function cancel(order) {\r\n    setCancelId(order?.orderId);\r\n    try {\r\n      await cancelOrder({\r\n        order,\r\n        market: order.market,\r\n        connection,\r\n        wallet,\r\n      });\r\n    } catch (e) {\r\n      notify({\r\n        message: 'Error cancelling order',\r\n        description: e.message,\r\n        type: 'error',\r\n      });\r\n      return;\r\n    } finally {\r\n      setCancelId(null);\r\n    }\r\n    onCancelSuccess && onCancelSuccess();\r\n  }\r\n\r\n  const marketFilters = [\r\n    ...new Set((openOrders || []).map((orderInfos) => orderInfos.marketName)),\r\n  ].map((marketName) => {\r\n    return { text: marketName, value: marketName };\r\n  });\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Market',\r\n      dataIndex: 'marketName',\r\n      key: 'marketName',\r\n      filters: marketFilter ? marketFilters : undefined,\r\n      onFilter: (value, record) => record.marketName.indexOf(value) === 0,\r\n    },\r\n    {\r\n      title: 'Side',\r\n      dataIndex: 'side',\r\n      key: 'side',\r\n      render: (side) => (\r\n        <Tag\r\n          color={side === 'buy' ? '#41C77A' : '#F23B69'}\r\n          style={{ fontWeight: 700 }}\r\n        >\r\n          {side.charAt(0).toUpperCase() + side.slice(1)}\r\n        </Tag>\r\n      ),\r\n      sorter: (a, b) => {\r\n        if (a.side === b.side) {\r\n          return 0;\r\n        } else if (a.side === 'buy') {\r\n          return 1;\r\n        } else {\r\n          return -1;\r\n        }\r\n      },\r\n      showSorterTooltip: false,\r\n    },\r\n    {\r\n      title: 'Size',\r\n      dataIndex: 'size',\r\n      key: 'size',\r\n      sorter: (a, b) => b.size - a.size,\r\n      showSorterTooltip: false,\r\n    },\r\n    {\r\n      title: 'Price',\r\n      dataIndex: 'price',\r\n      key: 'price',\r\n      sorter: (a, b) => b.price - a.price,\r\n      showSorterTooltip: false,\r\n    },\r\n    {\r\n      key: 'orderId',\r\n      render: (order) => (\r\n        <div style={{ textAlign: 'right' }}>\r\n          <CancelButton\r\n            icon={<DeleteOutlined />}\r\n            onClick={() => cancel(order)}\r\n            loading={cancelId + '' === order?.orderId + ''}\r\n          >\r\n            Cancel\r\n          </CancelButton>\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n  const dataSource = (openOrders || []).map((order) => ({\r\n    ...order,\r\n    key: order.orderId,\r\n  }));\r\n\r\n  return (\r\n    <Row>\r\n      <Col span={24}>\r\n        <DataTable\r\n          emptyLabel=\"No open orders\"\r\n          dataSource={dataSource}\r\n          columns={columns}\r\n          pagination={true}\r\n          pageSize={pageSize ? pageSize : 5}\r\n          loading={loading !== undefined && loading}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Row, Col, Tag } from 'antd';\r\nimport { useFills, useMarket } from '../../utils/markets';\r\nimport DataTable from '../layout/DataTable';\r\n\r\nexport default function FillsTable() {\r\n  const fills = useFills();\r\n\r\n  const { quoteCurrency } = useMarket();\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Market',\r\n      dataIndex: 'marketName',\r\n      key: 'marketName',\r\n    },\r\n    {\r\n      title: 'Side',\r\n      dataIndex: 'side',\r\n      key: 'side',\r\n      render: (side) => (\r\n        <Tag\r\n          color={side === 'buy' ? '#41C77A' : '#F23B69'}\r\n          style={{ fontWeight: 700 }}\r\n        >\r\n          {side.charAt(0).toUpperCase() + side.slice(1)}\r\n        </Tag>\r\n      ),\r\n    },\r\n    {\r\n      title: `Size`,\r\n      dataIndex: 'size',\r\n      key: 'size',\r\n    },\r\n    {\r\n      title: `Price`,\r\n      dataIndex: 'price',\r\n      key: 'price',\r\n    },\r\n    {\r\n      title: `Liquidity`,\r\n      dataIndex: 'liquidity',\r\n      key: 'liquidity',\r\n    },\r\n    {\r\n      title: quoteCurrency ? `Fees (${quoteCurrency})` : 'Fees',\r\n      dataIndex: 'feeCost',\r\n      key: 'feeCost',\r\n    },\r\n  ];\r\n\r\n  const dataSource = (fills || []).map((fill) => ({\r\n    ...fill,\r\n    key: `${fill.orderId}${fill.side}`,\r\n    liquidity: fill.eventFlags.maker ? 'Maker' : 'Taker',\r\n  }));\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col span={24}>\r\n          <DataTable\r\n            dataSource={dataSource}\r\n            columns={columns}\r\n            pagination={true}\r\n            pageSize={5}\r\n            emptyLabel=\"No fills\"\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Row, Col, Typography, Tag } from 'antd';\r\nimport { useFeeDiscountKeys } from '../../utils/markets';\r\nimport DataTable from '../layout/DataTable';\r\nimport { TokenInstructions, getFeeRates } from '@project-serum/serum';\r\nimport { percentFormat } from '../../utils/utils';\r\n\r\nexport default function FeesTable() {\r\n  const [feeAccounts] = useFeeDiscountKeys();\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Fee Tier',\r\n      dataIndex: 'feeTier',\r\n      key: 'feeTier',\r\n      render: (feeTier, row) => (\r\n        <div style={{ display: 'flex' }}>\r\n          <Typography>{feeTier}</Typography>\r\n          {row.index === 0 ? (\r\n            <div style={{ marginLeft: 10 }}>\r\n              <Tag color={'#41C77A'} style={{ fontWeight: 700 }}>\r\n                Selected\r\n              </Tag>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Taker',\r\n      dataIndex: 'taker',\r\n      key: 'taker',\r\n      render: (feeTier, row) =>\r\n        percentFormat.format(getFeeRates(row.feeTier).taker),\r\n    },\r\n    {\r\n      title: 'Maker',\r\n      dataIndex: 'maker',\r\n      key: 'maker',\r\n      render: (feeTier, row) =>\r\n        percentFormat.format(getFeeRates(row.feeTier).maker),\r\n    },\r\n    {\r\n      title: `Public Key`,\r\n      dataIndex: 'pubkey',\r\n      key: 'pubkey',\r\n      render: (pubkey) => pubkey.toBase58(),\r\n    },\r\n    {\r\n      title: `Balance`,\r\n      dataIndex: 'balance',\r\n      key: 'balance',\r\n    },\r\n    {\r\n      title: `Mint`,\r\n      dataIndex: 'mint',\r\n      key: 'mint',\r\n      render: (_, row) =>\r\n        row.mint.equals(TokenInstructions.SRM_MINT)\r\n          ? 'SRM'\r\n          : row.mint.equals(TokenInstructions.MSRM_MINT)\r\n          ? 'MSRM'\r\n          : 'UNKNOWN',\r\n    },\r\n  ];\r\n\r\n  const dataSource = (feeAccounts || []).map((account, index) => ({\r\n    ...account,\r\n    index,\r\n    key: account.pubkey.toBase58(),\r\n  }));\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col span={24}>\r\n          <DataTable\r\n            dataSource={dataSource}\r\n            columns={columns}\r\n            pagination={true}\r\n            pageSize={5}\r\n            emptyLabel=\"No (M)SRM accounts\"\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row style={{ marginTop: 8 }}>\r\n        <Col>\r\n          <Typography>\r\n            Holding SRM or MSRM makes you eligible for fee discounts:\r\n          </Typography>\r\n          <FeeScheduleTable />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction FeeScheduleTable() {\r\n  // Representation of serum-js/src/fees.ts\r\n  const dataSource = [\r\n    { feeTier: 0, taker: 0.0022, maker: -0.0003, token: '', balance: '' },\r\n    { feeTier: 1, taker: 0.002, maker: -0.0003, token: 'SRM', balance: 100 },\r\n    { feeTier: 2, taker: 0.0018, maker: -0.0003, token: 'SRM', balance: 1000 },\r\n    { feeTier: 3, taker: 0.0016, maker: -0.0003, token: 'SRM', balance: 10000 },\r\n    {\r\n      feeTier: 4,\r\n      taker: 0.0014,\r\n      maker: -0.0003,\r\n      token: 'SRM',\r\n      balance: 100000,\r\n    },\r\n    {\r\n      feeTier: 5,\r\n      taker: 0.0012,\r\n      maker: -0.0003,\r\n      token: 'SRM',\r\n      balance: 1000000,\r\n    },\r\n    { feeTier: 6, taker: 0.001, maker: -0.0005, token: 'MSRM', balance: 1 },\r\n  ];\r\n  const columns = [\r\n    {\r\n      title: 'Fee Tier',\r\n      dataIndex: 'feeTier',\r\n      key: 'feeTier',\r\n    },\r\n    {\r\n      title: 'Taker',\r\n      dataIndex: 'taker',\r\n      key: 'taker',\r\n      render: (feeTier, row) =>\r\n        percentFormat.format(getFeeRates(row.feeTier).taker),\r\n    },\r\n    {\r\n      title: 'Maker',\r\n      dataIndex: 'maker',\r\n      key: 'maker',\r\n      render: (feeTier, row) =>\r\n        percentFormat.format(getFeeRates(row.feeTier).maker),\r\n    },\r\n    {\r\n      title: 'Requirements',\r\n      dataIndex: 'requirements',\r\n      key: 'requirements',\r\n      render: (_, row) => (\r\n        <Typography>\r\n          {!row.balance ? 'None' : `≥ ${row.balance} ${row.token}`}\r\n        </Typography>\r\n      ),\r\n    },\r\n  ];\r\n  return (\r\n    <DataTable\r\n      dataSource={dataSource.map((info) => ({ ...info, key: info.feeTier }))}\r\n      columns={columns}\r\n    />\r\n  );\r\n}\r\n","import BalancesTable from './BalancesTable';\r\nimport OpenOrderTable from './OpenOrderTable';\r\nimport React from 'react';\r\nimport { Tabs, Typography } from 'antd';\r\nimport FillsTable from './FillsTable';\r\nimport FloatingElement from '../layout/FloatingElement';\r\nimport FeesTable from './FeesTable';\r\nimport { useOpenOrders, useBalances, useMarket } from '../../utils/markets';\r\n\r\nconst { Paragraph } = Typography;\r\nconst { TabPane } = Tabs;\r\n\r\nexport default function Index() {\r\n  const { market } = useMarket();\r\n  return (\r\n    <FloatingElement style={{ flex: 1, paddingTop: 20 }}>\r\n      <Typography>\r\n        <Paragraph style={{ color: 'rgba(255,255,255,0.5)' }}>\r\n          Make sure to go to Balances and click Settle to send out your funds.\r\n        </Paragraph>\r\n        <Paragraph style={{ color: 'rgba(255,255,255,0.5)' }}>\r\n          To fund your wallet, <a href=\"https://www.sollet.io\">sollet.io</a>.\r\n          You can get SOL from FTX, Binance, BitMax, and others. You can get\r\n          other tokens from FTX.{' '}\r\n        </Paragraph>\r\n      </Typography>\r\n      <Tabs defaultActiveKey=\"orders\">\r\n        <TabPane tab=\"Open Orders\" key=\"orders\">\r\n          <OpenOrdersTab />\r\n        </TabPane>\r\n        <TabPane tab=\"Recent Trade History\" key=\"fills\">\r\n          <FillsTable />\r\n        </TabPane>\r\n        <TabPane tab=\"Balances\" key=\"balances\">\r\n          <BalancesTab />\r\n        </TabPane>\r\n        {market && market.supportsSrmFeeDiscounts ? (\r\n          <TabPane tab=\"Fee discounts\" key=\"fees\">\r\n            <FeesTable />\r\n          </TabPane>\r\n        ) : null}\r\n      </Tabs>\r\n    </FloatingElement>\r\n  );\r\n}\r\n\r\nconst OpenOrdersTab = () => {\r\n  const openOrders = useOpenOrders();\r\n\r\n  return <OpenOrderTable openOrders={openOrders} />;\r\n};\r\n\r\nconst BalancesTab = () => {\r\n  const balances = useBalances();\r\n\r\n  return <BalancesTable balances={balances} />;\r\n};\r\n","import React from 'react';\r\nimport { Modal } from 'antd';\r\nimport {\r\n  useSelectedBaseCurrencyAccount,\r\n  useMarket,\r\n  useSelectedQuoteCurrencyAccount,\r\n} from '../utils/markets';\r\nimport { useWallet } from '../utils/wallet';\r\nimport Link from './Link';\r\n\r\nexport default function DepositDialog({ onClose, baseOrQuote }) {\r\n  const { market, baseCurrency, quoteCurrency } = useMarket();\r\n\r\n  const { providerName, providerUrl } = useWallet();\r\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\r\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\r\n  let coinMint;\r\n  let account;\r\n  let depositCoin;\r\n  if (baseOrQuote === 'base') {\r\n    coinMint = market?.baseMintAddress;\r\n    account = baseCurrencyAccount;\r\n    depositCoin = baseCurrency;\r\n  } else if (baseOrQuote === 'quote') {\r\n    coinMint = market?.quoteMintAddress;\r\n    account = quoteCurrencyAccount;\r\n    depositCoin = quoteCurrency;\r\n  } else {\r\n    account = null;\r\n  }\r\n  if (!coinMint) {\r\n    return null;\r\n  }\r\n  return (\r\n    <Modal\r\n      title={depositCoin}\r\n      visible={!!coinMint}\r\n      onOk={onClose}\r\n      onCancel={onClose}\r\n    >\r\n      <div style={{ paddingTop: '20px' }}>\r\n        <p style={{ color: 'white' }}>Mint address:</p>\r\n        <p style={{ color: 'rgba(255,255,255,0.5)' }}>{coinMint.toBase58()}</p>\r\n        <div>\r\n          <p style={{ color: 'white' }}>SPL Deposit address:</p>\r\n          <p style={{ color: 'rgba(255,255,255,0.5)' }}>\r\n            {account ? (\r\n              account.pubkey.toBase58()\r\n            ) : (\r\n              <>\r\n                Visit{' '}\r\n                <Link external to={providerUrl}>\r\n                  {providerName}\r\n                </Link>{' '}\r\n                to create an account for this mint\r\n              </>\r\n            )}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { TokenAccount } from '../utils/types';\r\nimport { useSelectedTokenAccounts } from '../utils/markets';\r\nimport { Button, Col, Select, Typography } from 'antd';\r\nimport { CopyOutlined } from '@ant-design/icons';\r\nimport { abbreviateAddress } from '../utils/utils';\r\nimport { notify } from '../utils/notifications';\r\n\r\nexport default function StandaloneTokenAccountsSelect({\r\n  accounts,\r\n  mint,\r\n  label,\r\n}: {\r\n  accounts: TokenAccount[] | null | undefined;\r\n  mint: string | undefined;\r\n  label?: boolean;\r\n}) {\r\n  const [\r\n    selectedTokenAccounts,\r\n    setSelectedTokenAccounts,\r\n  ] = useSelectedTokenAccounts();\r\n\r\n  let selectedValue: string | undefined;\r\n  if (mint && mint in selectedTokenAccounts) {\r\n    selectedValue = selectedTokenAccounts[mint];\r\n  } else if (accounts && accounts?.length > 0) {\r\n    selectedValue = accounts[0].pubkey.toBase58();\r\n  } else {\r\n    selectedValue = undefined;\r\n  }\r\n\r\n  const setTokenAccountForCoin = (value) => {\r\n    if (!mint) {\r\n      notify({\r\n        message: 'Error selecting token account',\r\n        description: 'Mint is undefined',\r\n        type: 'error',\r\n      });\r\n      return;\r\n    }\r\n    const newSelectedTokenAccounts = { ...selectedTokenAccounts };\r\n    newSelectedTokenAccounts[mint] = value;\r\n    setSelectedTokenAccounts(newSelectedTokenAccounts);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {label && <Col span={8}>Token account:</Col>}\r\n      <Col span={label ? 13 : 21}>\r\n        <Select\r\n          style={{ width: '100%' }}\r\n          value={selectedValue}\r\n          onSelect={setTokenAccountForCoin}\r\n        >\r\n          {accounts?.map((account) => (\r\n            <Select.Option\r\n              key={account.pubkey.toBase58()}\r\n              value={account.pubkey.toBase58()}\r\n            >\r\n              <Typography.Text code>\r\n                {label\r\n                  ? abbreviateAddress(account.pubkey, 8)\r\n                  : account.pubkey.toBase58()}\r\n              </Typography.Text>\r\n            </Select.Option>\r\n          ))}\r\n        </Select>\r\n      </Col>\r\n      <Col span={2} offset={1}>\r\n        <Button\r\n          shape=\"round\"\r\n          icon={<CopyOutlined />}\r\n          size={'small'}\r\n          onClick={() =>\r\n            selectedValue && navigator.clipboard.writeText(selectedValue)\r\n          }\r\n        />\r\n      </Col>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Button } from 'antd';\r\nimport { LinkOutlined } from '@ant-design/icons';\r\n\r\nexport default function LinkAddress({\r\n  title,\r\n  address,\r\n}: {\r\n  title?: undefined | any;\r\n  address: string;\r\n}) {\r\n  return (\r\n    <div>\r\n      {title && <p style={{ color: 'white' }}>{title}</p>}\r\n      <Button\r\n        type=\"link\"\r\n        icon={<LinkOutlined />}\r\n        href={'https://explorer.solana.com/address/' + address}\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        {address}\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","import { Button, Col, Divider, Popover, Row } from 'antd';\r\nimport React, { useState } from 'react';\r\nimport FloatingElement from './layout/FloatingElement';\r\nimport styled from 'styled-components';\r\nimport {\r\n  useBalances,\r\n  useMarket,\r\n  useSelectedBaseCurrencyAccount,\r\n  useSelectedOpenOrdersAccount,\r\n  useSelectedQuoteCurrencyAccount,\r\n  useTokenAccounts,\r\n} from '../utils/markets';\r\nimport DepositDialog from './DepositDialog';\r\nimport { useWallet } from '../utils/wallet';\r\nimport Link from './Link';\r\nimport { settleFunds } from '../utils/send';\r\nimport { useSendConnection } from '../utils/connection';\r\nimport { notify } from '../utils/notifications';\r\nimport { Balances } from '../utils/types';\r\nimport StandaloneTokenAccountsSelect from './StandaloneTokenAccountSelect';\r\nimport LinkAddress from './LinkAddress';\r\nimport { InfoCircleOutlined } from '@ant-design/icons';\r\n\r\nconst RowBox = styled(Row)`\r\n  padding-bottom: 20px;\r\n`;\r\n\r\nconst Tip = styled.p`\r\n  font-size: 12px;\r\n  padding-top: 6px;\r\n`;\r\n\r\nconst ActionButton = styled(Button)`\r\n  color: #2abdd2;\r\n  background-color: #212734;\r\n  border-width: 0px;\r\n`;\r\n\r\nexport default function StandaloneBalancesDisplay() {\r\n  const { baseCurrency, quoteCurrency, market } = useMarket();\r\n  const balances = useBalances();\r\n  const openOrdersAccount = useSelectedOpenOrdersAccount(true);\r\n  const connection = useSendConnection();\r\n  const { providerUrl, providerName, wallet, connected } = useWallet();\r\n  const [baseOrQuote, setBaseOrQuote] = useState('');\r\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\r\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\r\n  const [tokenAccounts] = useTokenAccounts();\r\n  const baseCurrencyBalances =\r\n    balances && balances.find((b) => b.coin === baseCurrency);\r\n  const quoteCurrencyBalances =\r\n    balances && balances.find((b) => b.coin === quoteCurrency);\r\n\r\n  async function onSettleFunds() {\r\n    if (!market) {\r\n      notify({\r\n        message: 'Error settling funds',\r\n        description: 'market is undefined',\r\n        type: 'error',\r\n      });\r\n      return;\r\n    }\r\n    if (!openOrdersAccount) {\r\n      notify({\r\n        message: 'Error settling funds',\r\n        description: 'Open orders account is undefined',\r\n        type: 'error',\r\n      });\r\n      return;\r\n    }\r\n    if (!baseCurrencyAccount) {\r\n      notify({\r\n        message: 'Error settling funds',\r\n        description: 'Open orders account is undefined',\r\n        type: 'error',\r\n      });\r\n      return;\r\n    }\r\n    if (!quoteCurrencyAccount) {\r\n      notify({\r\n        message: 'Error settling funds',\r\n        description: 'Open orders account is undefined',\r\n        type: 'error',\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await settleFunds({\r\n        market,\r\n        openOrders: openOrdersAccount,\r\n        connection,\r\n        wallet,\r\n        baseCurrencyAccount,\r\n        quoteCurrencyAccount,\r\n      });\r\n    } catch (e) {\r\n      notify({\r\n        message: 'Error settling funds',\r\n        description: e.message,\r\n        type: 'error',\r\n      });\r\n    }\r\n  }\r\n\r\n  const formattedBalances: [\r\n    string | undefined,\r\n    Balances | undefined,\r\n    string,\r\n    string | undefined,\r\n  ][] = [\r\n    [\r\n      baseCurrency,\r\n      baseCurrencyBalances,\r\n      'base',\r\n      market?.baseMintAddress.toBase58(),\r\n    ],\r\n    [\r\n      quoteCurrency,\r\n      quoteCurrencyBalances,\r\n      'quote',\r\n      market?.quoteMintAddress.toBase58(),\r\n    ],\r\n  ];\r\n\r\n  return (\r\n    <FloatingElement style={{ flex: 1, paddingTop: 10 }}>\r\n      {formattedBalances.map(\r\n        ([currency, balances, baseOrQuote, mint], index) => (\r\n          <React.Fragment key={index}>\r\n            <Divider style={{ borderColor: 'white' }}>\r\n              {currency}{' '}\r\n              {mint && (\r\n                <Popover\r\n                  content={<LinkAddress address={mint} />}\r\n                  placement=\"bottomRight\"\r\n                  title=\"Token mint\"\r\n                  trigger=\"hover\"\r\n                >\r\n                  <InfoCircleOutlined style={{ color: '#2abdd2' }} />\r\n                </Popover>\r\n              )}\r\n            </Divider>\r\n            {connected && (\r\n              <RowBox align=\"middle\" style={{ paddingBottom: 10 }}>\r\n                <StandaloneTokenAccountsSelect\r\n                  accounts={tokenAccounts?.filter(\r\n                    (account) => account.effectiveMint.toBase58() === mint,\r\n                  )}\r\n                  mint={mint}\r\n                  label\r\n                />\r\n              </RowBox>\r\n            )}\r\n            <RowBox\r\n              align=\"middle\"\r\n              justify=\"space-between\"\r\n              style={{ paddingBottom: 12 }}\r\n            >\r\n              <Col>Wallet balance:</Col>\r\n              <Col>{balances && balances.wallet}</Col>\r\n            </RowBox>\r\n            <RowBox\r\n              align=\"middle\"\r\n              justify=\"space-between\"\r\n              style={{ paddingBottom: 12 }}\r\n            >\r\n              <Col>Unsettled balance:</Col>\r\n              <Col>{balances && balances.unsettled}</Col>\r\n            </RowBox>\r\n            <RowBox align=\"middle\" justify=\"space-around\">\r\n              <Col style={{ width: 150 }}>\r\n                <ActionButton\r\n                  block\r\n                  size=\"large\"\r\n                  onClick={() => setBaseOrQuote(baseOrQuote)}\r\n                >\r\n                  Deposit\r\n                </ActionButton>\r\n              </Col>\r\n              <Col style={{ width: 150 }}>\r\n                <ActionButton block size=\"large\" onClick={onSettleFunds}>\r\n                  Settle\r\n                </ActionButton>\r\n              </Col>\r\n            </RowBox>\r\n            <Tip>\r\n              All deposits go to your{' '}\r\n              <Link external to={providerUrl}>\r\n                {providerName}\r\n              </Link>{' '}\r\n              wallet\r\n            </Tip>\r\n          </React.Fragment>\r\n        ),\r\n      )}\r\n      <DepositDialog\r\n        baseOrQuote={baseOrQuote}\r\n        onClose={() => setBaseOrQuote('')}\r\n      />\r\n    </FloatingElement>\r\n  );\r\n}\r\n","import { Button, Input, Radio, Switch, Slider } from 'antd';\r\nimport React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport {\r\n  useSelectedBaseCurrencyBalances,\r\n  useSelectedQuoteCurrencyBalances,\r\n  useMarket,\r\n  useMarkPrice,\r\n  useSelectedOpenOrdersAccount,\r\n  useSelectedBaseCurrencyAccount,\r\n  useSelectedQuoteCurrencyAccount,\r\n} from '../utils/markets';\r\nimport { useWallet } from '../utils/wallet';\r\nimport { notify } from '../utils/notifications';\r\nimport {\r\n  getDecimalCount,\r\n  roundToDecimal,\r\n  floorToDecimal,\r\n} from '../utils/utils';\r\nimport { useSendConnection } from '../utils/connection';\r\nimport FloatingElement from './layout/FloatingElement';\r\nimport { placeOrder } from '../utils/send';\r\nimport { SwitchChangeEventHandler } from 'antd/es/switch';\r\nimport { refreshCache } from '../utils/fetch-loop';\r\nimport tuple from 'immutable-tuple';\r\n\r\nconst SellButton = styled(Button)`\r\n  margin: 20px 0px 0px 0px;\r\n  background: #f23b69;\r\n  border-color: #f23b69;\r\n`;\r\n\r\nconst BuyButton = styled(Button)`\r\n  margin: 20px 0px 0px 0px;\r\n  background: #02bf76;\r\n  border-color: #02bf76;\r\n`;\r\n\r\nconst sliderMarks = {\r\n  0: '0%',\r\n  25: '25%',\r\n  50: '50%',\r\n  75: '75%',\r\n  100: '100%',\r\n};\r\n\r\nexport default function TradeForm({\r\n  style,\r\n  setChangeOrderRef,\r\n}: {\r\n  style?: any;\r\n  setChangeOrderRef?: (\r\n    ref: ({ size, price }: { size?: number; price?: number }) => void,\r\n  ) => void;\r\n}) {\r\n  const [side, setSide] = useState<'buy' | 'sell'>('buy');\r\n  const { baseCurrency, quoteCurrency, market } = useMarket();\r\n  const baseCurrencyBalances = useSelectedBaseCurrencyBalances();\r\n  const quoteCurrencyBalances = useSelectedQuoteCurrencyBalances();\r\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\r\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\r\n  const openOrdersAccount = useSelectedOpenOrdersAccount(true);\r\n  const { wallet, connected } = useWallet();\r\n  const sendConnection = useSendConnection();\r\n  const markPrice = useMarkPrice();\r\n\r\n  const [postOnly, setPostOnly] = useState(false);\r\n  const [ioc, setIoc] = useState(false);\r\n  const [baseSize, setBaseSize] = useState<number | undefined>(undefined);\r\n  const [quoteSize, setQuoteSize] = useState<number | undefined>(undefined);\r\n  const [price, setPrice] = useState<number | undefined>(undefined);\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [sizeFraction, setSizeFraction] = useState(0);\r\n\r\n  const availableQuote =\r\n    openOrdersAccount && market\r\n      ? market.quoteSplSizeToNumber(openOrdersAccount.quoteTokenFree)\r\n      : 0;\r\n\r\n  let quoteBalance = (quoteCurrencyBalances || 0) + (availableQuote || 0);\r\n  let baseBalance = baseCurrencyBalances || 0;\r\n  let sizeDecimalCount =\r\n    market?.minOrderSize && getDecimalCount(market.minOrderSize);\r\n  let priceDecimalCount = market?.tickSize && getDecimalCount(market.tickSize);\r\n\r\n  useEffect(() => {\r\n    setChangeOrderRef && setChangeOrderRef(doChangeOrder);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [setChangeOrderRef]);\r\n\r\n  useEffect(() => {\r\n    baseSize && price && onSliderChange(sizeFraction);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [side]);\r\n\r\n  useEffect(() => {\r\n    updateSizeFraction();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [price, baseSize]);\r\n\r\n  const onSetBaseSize = (baseSize: number | undefined) => {\r\n    setBaseSize(baseSize);\r\n    if (!baseSize) {\r\n      setQuoteSize(undefined);\r\n      return;\r\n    }\r\n    let usePrice = price || markPrice;\r\n    if (!usePrice) {\r\n      setQuoteSize(undefined);\r\n      return;\r\n    }\r\n    const rawQuoteSize = baseSize * usePrice;\r\n    const quoteSize =\r\n      baseSize && roundToDecimal(rawQuoteSize, sizeDecimalCount);\r\n    setQuoteSize(quoteSize);\r\n  };\r\n\r\n  const onSetQuoteSize = (quoteSize: number | undefined) => {\r\n    setQuoteSize(quoteSize);\r\n    if (!quoteSize) {\r\n      setBaseSize(undefined);\r\n      return;\r\n    }\r\n    let usePrice = price || markPrice;\r\n    if (!usePrice) {\r\n      setBaseSize(undefined);\r\n      return;\r\n    }\r\n    const rawBaseSize = quoteSize / usePrice;\r\n    const baseSize = quoteSize && roundToDecimal(rawBaseSize, sizeDecimalCount);\r\n    setBaseSize(baseSize);\r\n  };\r\n\r\n  const doChangeOrder = ({\r\n    size,\r\n    price,\r\n  }: {\r\n    size?: number;\r\n    price?: number;\r\n  }) => {\r\n    const formattedSize = size && roundToDecimal(size, sizeDecimalCount);\r\n    const formattedPrice = price && roundToDecimal(price, priceDecimalCount);\r\n    formattedSize && onSetBaseSize(formattedSize);\r\n    formattedPrice && setPrice(formattedPrice);\r\n  };\r\n\r\n  const updateSizeFraction = () => {\r\n    const rawMaxSize =\r\n      side === 'buy' ? quoteBalance / (price || markPrice || 1) : baseBalance;\r\n    const maxSize = floorToDecimal(rawMaxSize, sizeDecimalCount);\r\n    const sizeFraction = Math.min(((baseSize || 0) / maxSize) * 100, 100);\r\n    setSizeFraction(sizeFraction);\r\n  };\r\n\r\n  const onSliderChange = (value) => {\r\n    if (!price && markPrice) {\r\n      let formattedMarkPrice: number | string = priceDecimalCount\r\n        ? markPrice.toFixed(priceDecimalCount)\r\n        : markPrice;\r\n      setPrice(\r\n        typeof formattedMarkPrice === 'number'\r\n          ? formattedMarkPrice\r\n          : parseFloat(formattedMarkPrice),\r\n      );\r\n    }\r\n\r\n    let newSize;\r\n    if (side === 'buy') {\r\n      if (price || markPrice) {\r\n        newSize = ((quoteBalance / (price || markPrice || 1)) * value) / 100;\r\n      }\r\n    } else {\r\n      newSize = (baseBalance * value) / 100;\r\n    }\r\n\r\n    // round down to minOrderSize increment\r\n    let formatted = floorToDecimal(newSize, sizeDecimalCount);\r\n\r\n    onSetBaseSize(formatted);\r\n  };\r\n\r\n  const postOnChange: SwitchChangeEventHandler = (checked) => {\r\n    if (checked) {\r\n      setIoc(false);\r\n    }\r\n    setPostOnly(checked);\r\n  };\r\n  const iocOnChange: SwitchChangeEventHandler = (checked) => {\r\n    if (checked) {\r\n      setPostOnly(false);\r\n    }\r\n    setIoc(checked);\r\n  };\r\n\r\n  async function onSubmit() {\r\n    if (!price) {\r\n      console.warn('Missing price');\r\n      notify({\r\n        message: 'Missing price',\r\n        type: 'error',\r\n      });\r\n      return;\r\n    } else if (!baseSize) {\r\n      console.warn('Missing size');\r\n      notify({\r\n        message: 'Missing size',\r\n        type: 'error',\r\n      });\r\n      return;\r\n    }\r\n\r\n    setSubmitting(true);\r\n    try {\r\n      await placeOrder({\r\n        side,\r\n        price,\r\n        size: baseSize,\r\n        orderType: ioc ? 'ioc' : postOnly ? 'postOnly' : 'limit',\r\n        market,\r\n        connection: sendConnection,\r\n        wallet,\r\n        baseCurrencyAccount: baseCurrencyAccount?.pubkey,\r\n        quoteCurrencyAccount: quoteCurrencyAccount?.pubkey,\r\n      });\r\n      refreshCache(tuple('getTokenAccounts', wallet, connected));\r\n      setPrice(undefined);\r\n      onSetBaseSize(undefined);\r\n    } catch (e) {\r\n      console.warn(e);\r\n      notify({\r\n        message: 'Error placing order',\r\n        description: e.message,\r\n        type: 'error',\r\n      });\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <FloatingElement\r\n      style={{ display: 'flex', flexDirection: 'column', ...style }}\r\n    >\r\n      <div style={{ flex: 1 }}>\r\n        <Radio.Group\r\n          onChange={(e) => setSide(e.target.value)}\r\n          value={side}\r\n          buttonStyle=\"solid\"\r\n          style={{\r\n            marginBottom: 8,\r\n            width: '100%',\r\n          }}\r\n        >\r\n          <Radio.Button\r\n            value=\"buy\"\r\n            style={{\r\n              width: '50%',\r\n              textAlign: 'center',\r\n              background: side === 'buy' ? '#02bf76' : '',\r\n              borderColor: side === 'buy' ? '#02bf76' : '',\r\n            }}\r\n          >\r\n            BUY\r\n          </Radio.Button>\r\n          <Radio.Button\r\n            value=\"sell\"\r\n            style={{\r\n              width: '50%',\r\n              textAlign: 'center',\r\n              background: side === 'sell' ? '#F23B69' : '',\r\n              borderColor: side === 'sell' ? '#F23B69' : '',\r\n            }}\r\n          >\r\n            SELL\r\n          </Radio.Button>\r\n        </Radio.Group>\r\n        <Input\r\n          style={{ textAlign: 'right', paddingBottom: 8 }}\r\n          addonBefore={<div style={{ width: '30px' }}>Price</div>}\r\n          suffix={\r\n            <span style={{ fontSize: 10, opacity: 0.5 }}>{quoteCurrency}</span>\r\n          }\r\n          value={price}\r\n          type=\"number\"\r\n          step={market?.tickSize || 1}\r\n          onChange={(e) => setPrice(parseFloat(e.target.value))}\r\n        />\r\n        <Input.Group compact style={{ paddingBottom: 8 }}>\r\n          <Input\r\n            style={{ width: 'calc(50% + 30px)', textAlign: 'right' }}\r\n            addonBefore={<div style={{ width: '30px' }}>Size</div>}\r\n            suffix={\r\n              <span style={{ fontSize: 10, opacity: 0.5 }}>{baseCurrency}</span>\r\n            }\r\n            value={baseSize}\r\n            type=\"number\"\r\n            step={market?.minOrderSize || 1}\r\n            onChange={(e) => onSetBaseSize(parseFloat(e.target.value))}\r\n          />\r\n          <Input\r\n            style={{ width: 'calc(50% - 30px)', textAlign: 'right' }}\r\n            suffix={\r\n              <span style={{ fontSize: 10, opacity: 0.5 }}>\r\n                {quoteCurrency}\r\n              </span>\r\n            }\r\n            value={quoteSize}\r\n            type=\"number\"\r\n            step={market?.minOrderSize || 1}\r\n            onChange={(e) => onSetQuoteSize(parseFloat(e.target.value))}\r\n          />\r\n        </Input.Group>\r\n        <Slider\r\n          value={sizeFraction}\r\n          tipFormatter={(value) => `${value}%`}\r\n          marks={sliderMarks}\r\n          onChange={onSliderChange}\r\n        />\r\n        <div style={{ paddingTop: 18 }}>\r\n          {'POST '}\r\n          <Switch\r\n            checked={postOnly}\r\n            onChange={postOnChange}\r\n            style={{ marginRight: 40 }}\r\n          />\r\n          {'IOC '}\r\n          <Switch checked={ioc} onChange={iocOnChange} />\r\n        </div>\r\n      </div>\r\n      {side === 'buy' ? (\r\n        <BuyButton\r\n          disabled={!price || !baseSize}\r\n          onClick={onSubmit}\r\n          block\r\n          type=\"primary\"\r\n          size=\"large\"\r\n          loading={submitting}\r\n        >\r\n          Buy {baseCurrency}\r\n        </BuyButton>\r\n      ) : (\r\n        <SellButton\r\n          disabled={!price || !baseSize}\r\n          onClick={onSubmit}\r\n          block\r\n          type=\"primary\"\r\n          size=\"large\"\r\n          loading={submitting}\r\n        >\r\n          Sell {baseCurrency}\r\n        </SellButton>\r\n      )}\r\n    </FloatingElement>\r\n  );\r\n}\r\n","import { Col, Row } from 'antd';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useMarket, useBonfidaTrades } from '../utils/markets';\r\nimport { getDecimalCount } from '../utils/utils';\r\nimport FloatingElement from './layout/FloatingElement';\r\nimport { BonfidaTrade } from '../utils/types';\r\n\r\nconst Title = styled.div`\r\n  color: rgba(255, 255, 255, 1);\r\n`;\r\nconst SizeTitle = styled(Row)`\r\n  padding: 20px 0 14px;\r\n  color: #434a59;\r\n`;\r\n\r\nexport default function PublicTrades({ smallScreen }) {\r\n  const { baseCurrency, quoteCurrency, market } = useMarket();\r\n  const [trades, loaded] = useBonfidaTrades();\r\n\r\n  return (\r\n    <FloatingElement\r\n      style={\r\n        smallScreen\r\n          ? { flex: 1 }\r\n          : {\r\n              marginTop: '10px',\r\n              minHeight: '270px',\r\n              maxHeight: 'calc(100vh - 700px)',\r\n            }\r\n      }\r\n    >\r\n      <Title>Recent Market trades</Title>\r\n      <SizeTitle>\r\n        <Col span={8}>Price ({quoteCurrency}) </Col>\r\n        <Col span={8} style={{ textAlign: 'right' }}>\r\n          Size ({baseCurrency})\r\n        </Col>\r\n        <Col span={8} style={{ textAlign: 'right' }}>\r\n          Time\r\n        </Col>\r\n      </SizeTitle>\r\n      {!!trades && loaded && (\r\n        <div\r\n          style={{\r\n            marginRight: '-20px',\r\n            paddingRight: '5px',\r\n            overflowY: 'scroll',\r\n            maxHeight: smallScreen\r\n              ? 'calc(100% - 75px)'\r\n              : 'calc(100vh - 800px)',\r\n          }}\r\n        >\r\n          {trades.map((trade: BonfidaTrade, i: number) => (\r\n            <Row key={i} style={{ marginBottom: 4 }}>\r\n              <Col\r\n                span={8}\r\n                style={{\r\n                  color: trade.side === 'buy' ? '#41C77A' : '#F23B69',\r\n                }}\r\n              >\r\n                {market?.tickSize && !isNaN(trade.price)\r\n                  ? Number(trade.price).toFixed(\r\n                      getDecimalCount(market.tickSize),\r\n                    )\r\n                  : trade.price}\r\n              </Col>\r\n              <Col span={8} style={{ textAlign: 'right' }}>\r\n                {market?.minOrderSize && !isNaN(trade.size)\r\n                  ? Number(trade.size).toFixed(\r\n                      getDecimalCount(market.minOrderSize),\r\n                    )\r\n                  : trade.size}\r\n              </Col>\r\n              <Col span={8} style={{ textAlign: 'right', color: '#434a59' }}>\r\n                {trade.time && new Date(trade.time).toLocaleTimeString()}\r\n              </Col>\r\n            </Row>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </FloatingElement>\r\n  );\r\n}\r\n","import { Button, Divider, Spin, Typography } from 'antd';\r\nimport React from 'react';\r\nimport {\r\n  useGetOpenOrdersForDeprecatedMarkets,\r\n  useBalancesForDeprecatedMarkets,\r\n  useUnmigratedOpenOrdersAccounts,\r\n} from '../utils/markets';\r\nimport FloatingElement from './layout/FloatingElement';\r\nimport CheckOutlined from '@ant-design/icons/lib/icons/CheckOutlined';\r\nimport BalancesTable from './UserInfoTable/BalancesTable';\r\nimport Link from './Link';\r\nimport OpenOrderTable from './UserInfoTable/OpenOrderTable';\r\nimport SyncOutlined from '@ant-design/icons/lib/icons/SyncOutlined';\r\n\r\nconst { Title } = Typography;\r\n\r\nexport default function DeprecatedMarketsInstructions({ switchToLiveMarkets }) {\r\n  const balances = useBalancesForDeprecatedMarkets();\r\n  const {\r\n    openOrders,\r\n    loaded,\r\n    refreshOpenOrders,\r\n  } = useGetOpenOrdersForDeprecatedMarkets();\r\n\r\n  const { refresh } = useUnmigratedOpenOrdersAccounts();\r\n  const needToCancelOrders = !openOrders || openOrders.length > 0;\r\n  const filteredBalances =\r\n    balances &&\r\n    balances.filter(({ orders, unsettled }) => orders > 0 || unsettled > 0);\r\n  const needToSettleFunds = filteredBalances && filteredBalances.length > 0;\r\n  return (\r\n    <FloatingElement>\r\n      <Title level={4} style={{ color: 'rgba(255, 255, 255, 1)' }}>\r\n        Migrate to new USDC markets\r\n      </Title>\r\n      <Typography>\r\n        <Link\r\n          external\r\n          to={\r\n            'https://explorer.solana.com/address/EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v'\r\n          }\r\n        >\r\n          Native USDC\r\n        </Link>{' '}\r\n        has arrived on Solana! See{' '}\r\n        <Link\r\n          external\r\n          to={\r\n            'https://www.circle.com/blog/circle-partners-with-alameda-research-ftx-project-serum-to-introduce-support-for-usdc-on-solana'\r\n          }\r\n        >\r\n          Circle's announcement\r\n        </Link>{' '}\r\n        for more information.\r\n      </Typography>\r\n      <br />\r\n      <Typography>\r\n        Serum is transitioning from the previous{' '}\r\n        <Link\r\n          external\r\n          to={\r\n            'https://explorer.solana.com/address/BXXkv6z8ykpG1yuvUDPgh732wzVHB69RnB9YgSYh3itW'\r\n          }\r\n        >\r\n          Wrapped USDC\r\n        </Link>\r\n        , now called WUSDC, to Native USDC. You can convert from WUSDC to USDC\r\n        directly on{' '}\r\n        <Link external to={'https://sollet.io'}>\r\n          sollet.io\r\n        </Link>\r\n        , or can deposit WUSDC and be credited USDC on exchanges like{' '}\r\n        <Link external to={'https://ftx.com'}>\r\n          FTX\r\n        </Link>\r\n        .\r\n      </Typography>\r\n      <br />\r\n      <Typography>\r\n        Markets with WUSDC as the quote curency are now deprecated. To migrate\r\n        over to the new USDC markets, please cancel your orders and settle your\r\n        funds on old markets.\r\n      </Typography>\r\n      <div style={{ marginTop: 20, display: 'flex', justifyContent: 'center' }}>\r\n        <Button onClick={() => refresh(true)}>\r\n          <SyncOutlined /> Refresh data\r\n        </Button>\r\n      </div>\r\n      {!balances ? (\r\n        <Spin size=\"large\" />\r\n      ) : (\r\n        <>\r\n          <Divider>\r\n            {!needToCancelOrders && <CheckOutlined />} Cancel your orders\r\n          </Divider>\r\n          {needToCancelOrders ? (\r\n            loaded ? (\r\n              <OpenOrderTable\r\n                openOrders={openOrders}\r\n                onCancelSuccess={() => {\r\n                  setTimeout(() => {\r\n                    refresh();\r\n                    refreshOpenOrders();\r\n                  }, 1000); // Wait so that on-chain account state reflects the update\r\n                }}\r\n              />\r\n            ) : (\r\n              <Spin size=\"large\" />\r\n            )\r\n          ) : null}\r\n          <Divider>\r\n            {!needToSettleFunds && <CheckOutlined />} Settle your funds\r\n          </Divider>\r\n          {needToSettleFunds && (\r\n            <BalancesTable\r\n              balances={filteredBalances}\r\n              hideWalletBalance\r\n              showMarket\r\n              onSettleSuccess={() => {\r\n                setTimeout(refresh, 1000); // Wait so that on-chain account state reflects the update\r\n              }}\r\n            />\r\n          )}\r\n          <Divider>Switch to upgraded markets</Divider>\r\n          <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n            <Button\r\n              onClick={switchToLiveMarkets}\r\n              disabled={needToSettleFunds || needToCancelOrders}\r\n            >\r\n              Switch to new markets\r\n            </Button>\r\n          </div>\r\n        </>\r\n      )}\r\n    </FloatingElement>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Col, Input, Modal, Row, Typography } from 'antd';\r\nimport { notify } from '../utils/notifications';\r\nimport { isValidPublicKey } from '../utils/utils';\r\nimport { PublicKey } from '@solana/web3.js';\r\nimport { Market, MARKETS, TOKEN_MINTS } from '@project-serum/serum';\r\nimport { useAccountInfo, useConnection } from '../utils/connection';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\nconst { Text } = Typography;\r\n\r\nexport default function CustomMarketDialog({\r\n  visible,\r\n  onAddCustomMarket,\r\n  onClose,\r\n}) {\r\n  const connection = useConnection();\r\n\r\n  const [marketId, setMarketId] = useState('');\r\n\r\n  const [marketLabel, setMarketLabel] = useState('');\r\n  const [baseLabel, setBaseLabel] = useState('');\r\n  const [quoteLabel, setQuoteLabel] = useState('');\r\n\r\n  const [market, setMarket] = useState(null);\r\n  const [loadingMarket, setLoadingMarket] = useState(false);\r\n\r\n  const wellFormedMarketId = isValidPublicKey(marketId);\r\n\r\n  const [marketAccountInfo] = useAccountInfo(\r\n    wellFormedMarketId ? new PublicKey(marketId) : null,\r\n  );\r\n  const programId = marketAccountInfo\r\n    ? marketAccountInfo.owner.toBase58()\r\n    : MARKETS.find(({ deprecated }) => !deprecated).programId.toBase58();\r\n\r\n  useEffect(() => {\r\n    if (!wellFormedMarketId || !programId) {\r\n      resetLabels();\r\n      return;\r\n    }\r\n    setLoadingMarket(true);\r\n    Market.load(\r\n      connection,\r\n      new PublicKey(marketId),\r\n      {},\r\n      new PublicKey(programId),\r\n    )\r\n      .then((market) => {\r\n        setMarket(market);\r\n      })\r\n      .catch(() => {\r\n        resetLabels();\r\n        setMarket(null);\r\n      })\r\n      .finally(() => setLoadingMarket(false));\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [connection, marketId, programId]);\r\n\r\n  const resetLabels = () => {\r\n    setMarketLabel(null);\r\n    setBaseLabel(null);\r\n    setQuoteLabel(null);\r\n  };\r\n\r\n  const knownMarket = MARKETS.find(\r\n    (m) =>\r\n      m.address.toBase58() === marketId && m.programId.toBase58() === programId,\r\n  );\r\n  const knownProgram = MARKETS.find(\r\n    (m) => m.programId.toBase58() === programId,\r\n  );\r\n  const knownBaseCurrency =\r\n    market?.baseMintAddress &&\r\n    TOKEN_MINTS.find((token) => token.address.equals(market.baseMintAddress))\r\n      ?.name;\r\n\r\n  const knownQuoteCurrency =\r\n    market?.quoteMintAddress &&\r\n    TOKEN_MINTS.find((token) => token.address.equals(market.quoteMintAddress))\r\n      ?.name;\r\n\r\n  const canSubmit =\r\n    !loadingMarket &&\r\n    !!market &&\r\n    market.publicKey.toBase58() === marketId &&\r\n    marketId &&\r\n    programId &&\r\n    marketLabel &&\r\n    (knownBaseCurrency || baseLabel) &&\r\n    (knownQuoteCurrency || quoteLabel) &&\r\n    wellFormedMarketId;\r\n\r\n  const onSubmit = () => {\r\n    if (!canSubmit) {\r\n      notify({\r\n        message: 'Please fill in all fields with valid values',\r\n        type: 'error',\r\n      });\r\n      return;\r\n    }\r\n\r\n    let params = {\r\n      address: marketId,\r\n      programId,\r\n      name: marketLabel,\r\n    };\r\n    if (!knownBaseCurrency) {\r\n      params.baseLabel = baseLabel;\r\n    }\r\n    if (!knownQuoteCurrency) {\r\n      params.quoteLabel = quoteLabel;\r\n    }\r\n    onAddCustomMarket(params);\r\n    onDoClose();\r\n  };\r\n\r\n  const onDoClose = () => {\r\n    resetLabels();\r\n    setMarket(null);\r\n    setMarketId(null);\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      title={'Add custom market'}\r\n      visible={visible}\r\n      onOk={onSubmit}\r\n      okText={'Add'}\r\n      onCancel={onDoClose}\r\n      okButtonProps={{ disabled: !canSubmit }}\r\n    >\r\n      <div>\r\n        {wellFormedMarketId ? (\r\n          <>\r\n            {!market && !loadingMarket && (\r\n              <Row style={{ marginBottom: 8 }}>\r\n                <Text type=\"danger\">Not a valid market</Text>\r\n              </Row>\r\n            )}\r\n            {market && knownMarket && (\r\n              <Row style={{ marginBottom: 8 }}>\r\n                <Text type=\"warning\">Market known: {knownMarket.name}</Text>\r\n              </Row>\r\n            )}\r\n            {market && !knownProgram && (\r\n              <Row style={{ marginBottom: 8 }}>\r\n                <Text type=\"danger\">Warning: unknown DEX program</Text>\r\n              </Row>\r\n            )}\r\n            {market && knownProgram && knownProgram.deprecated && (\r\n              <Row style={{ marginBottom: 8 }}>\r\n                <Text type=\"warning\">Warning: deprecated DEX program</Text>\r\n              </Row>\r\n            )}\r\n          </>\r\n        ) : (\r\n          <>\r\n            {marketId && !wellFormedMarketId && (\r\n              <Row style={{ marginBottom: 8 }}>\r\n                <Text type=\"danger\">Invalid market ID</Text>\r\n              </Row>\r\n            )}\r\n          </>\r\n        )}\r\n        <Row style={{ marginBottom: 8 }}>\r\n          <Col span={24}>\r\n            <Input\r\n              placeholder=\"Market Id\"\r\n              value={marketId}\r\n              onChange={(e) => setMarketId(e.target.value)}\r\n              suffix={loadingMarket ? <LoadingOutlined /> : null}\r\n            />\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row style={{ marginBottom: 8, marginTop: 8 }}>\r\n          <Col span={24}>\r\n            <Input\r\n              placeholder=\"Market Label\"\r\n              disabled={!market}\r\n              value={marketLabel}\r\n              onChange={(e) => setMarketLabel(e.target.value)}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row gutter={[8]} style={{ marginBottom: 8 }}>\r\n          <Col span={12}>\r\n            <Input\r\n              placeholder=\"Base label\"\r\n              disabled={!market || knownBaseCurrency}\r\n              value={knownBaseCurrency || baseLabel}\r\n              onChange={(e) => setBaseLabel(e.target.value)}\r\n            />\r\n            {market && !knownBaseCurrency && (\r\n              <div style={{ marginTop: 8 }}>\r\n                <Text type=\"warning\">Warning: unknown token</Text>\r\n              </div>\r\n            )}\r\n          </Col>\r\n          <Col span={12}>\r\n            <Input\r\n              placeholder=\"Quote label\"\r\n              disabled={!market || knownQuoteCurrency}\r\n              value={knownQuoteCurrency || quoteLabel}\r\n              onChange={(e) => setQuoteLabel(e.target.value)}\r\n            />\r\n            {market && !knownQuoteCurrency && (\r\n              <div style={{ marginTop: 8 }}>\r\n                <Text type=\"warning\">Warning: unknown token</Text>\r\n              </div>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport { Col, Popover, Row, Select, Typography, Button } from 'antd';\r\nimport styled from 'styled-components';\r\nimport Orderbook from '../components/Orderbook';\r\nimport UserInfoTable from '../components/UserInfoTable';\r\nimport StandaloneBalancesDisplay from '../components/StandaloneBalancesDisplay';\r\nimport {\r\n  useMarket,\r\n  useMarketsList,\r\n  useUnmigratedDeprecatedMarkets,\r\n  getMarketInfos,\r\n} from '../utils/markets';\r\nimport TradeForm from '../components/TradeForm';\r\nimport TradesTable from '../components/TradesTable';\r\nimport LinkAddress from '../components/LinkAddress';\r\nimport DeprecatedMarketsInstructions from '../components/DeprecatedMarketsInstructions';\r\nimport {\r\n  InfoCircleOutlined,\r\n  PlusCircleOutlined,\r\n  DeleteOutlined,\r\n} from '@ant-design/icons';\r\nimport CustomMarketDialog from '../components/CustomMarketDialog';\r\nimport { notify } from '../utils/notifications';\r\n\r\nconst { Option, OptGroup } = Select;\r\n\r\nconst Wrapper = styled.div`\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 16px 16px;\r\n  .borderNone .ant-select-selector {\r\n    border: none !important;\r\n  }\r\n`;\r\n\r\nexport default function TradePage() {\r\n  const {\r\n    market,\r\n    marketName,\r\n    customMarkets,\r\n    setCustomMarkets,\r\n    setMarketAddress,\r\n  } = useMarket();\r\n  const markets = useMarketsList();\r\n  const [handleDeprecated, setHandleDeprecated] = useState(false);\r\n  const [addMarketVisible, setAddMarketVisible] = useState(false);\r\n  const deprecatedMarkets = useUnmigratedDeprecatedMarkets();\r\n  const [dimensions, setDimensions] = useState({\r\n    height: window.innerHeight,\r\n    width: window.innerWidth,\r\n  });\r\n\r\n  useEffect(() => {\r\n    document.title = marketName ? `${marketName} — Serum` : 'Serum';\r\n  }, [marketName]);\r\n\r\n  const changeOrderRef = useRef<\r\n    ({ size, price }: { size?: number; price?: number }) => void\r\n  >();\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setDimensions({\r\n        height: window.innerHeight,\r\n        width: window.innerWidth,\r\n      });\r\n    };\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  const width = dimensions?.width;\r\n  const componentProps = {\r\n    onChangeOrderRef: (ref) => (changeOrderRef.current = ref),\r\n    onPrice: useCallback(\r\n      (price) => changeOrderRef.current && changeOrderRef.current({ price }),\r\n      [],\r\n    ),\r\n    onSize: useCallback(\r\n      (size) => changeOrderRef.current && changeOrderRef.current({ size }),\r\n      [],\r\n    ),\r\n  };\r\n  const getComponent = useCallback(() => {\r\n    if (handleDeprecated) {\r\n      return (\r\n        <DeprecatedMarketsPage\r\n          switchToLiveMarkets={() => setHandleDeprecated(false)}\r\n        />\r\n      );\r\n    } else if (width < 1000) {\r\n      return <RenderSmaller {...componentProps} />;\r\n    } else if (width < 1450) {\r\n      return <RenderSmall {...componentProps} />;\r\n    } else {\r\n      return <RenderNormal {...componentProps} />;\r\n    }\r\n  }, [width, componentProps, handleDeprecated]);\r\n\r\n  const onAddCustomMarket = (customMarket) => {\r\n    const marketInfo = getMarketInfos(customMarkets).some(\r\n      (m) => m.address.toBase58() === customMarket.address,\r\n    );\r\n    if (marketInfo) {\r\n      notify({\r\n        message: `A market with the given ID already exists`,\r\n        type: 'error',\r\n      });\r\n      return;\r\n    }\r\n    const newCustomMarkets = [...customMarkets, customMarket];\r\n    setCustomMarkets(newCustomMarkets);\r\n    setMarketAddress(customMarket.address);\r\n  };\r\n\r\n  const onDeleteCustomMarket = (address) => {\r\n    const newCustomMarkets = customMarkets.filter((m) => m.address !== address);\r\n    setCustomMarkets(newCustomMarkets);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CustomMarketDialog\r\n        visible={addMarketVisible}\r\n        onClose={() => setAddMarketVisible(false)}\r\n        onAddCustomMarket={onAddCustomMarket}\r\n      />\r\n      <Wrapper>\r\n        <Row\r\n          align=\"middle\"\r\n          style={{ paddingLeft: 5, paddingRight: 5 }}\r\n          gutter={16}\r\n        >\r\n          <Col>\r\n            <MarketSelector\r\n              markets={markets}\r\n              setHandleDeprecated={setHandleDeprecated}\r\n              placeholder={'Select market'}\r\n              customMarkets={customMarkets}\r\n              onDeleteCustomMarket={onDeleteCustomMarket}\r\n            />\r\n          </Col>\r\n          {market ? (\r\n            <Col>\r\n              <Popover\r\n                content={<LinkAddress address={market.publicKey.toBase58()} />}\r\n                placement=\"bottomRight\"\r\n                title=\"Market address\"\r\n                trigger=\"click\"\r\n              >\r\n                <InfoCircleOutlined style={{ color: '#2abdd2' }} />\r\n              </Popover>\r\n            </Col>\r\n          ) : null}\r\n          <Col>\r\n            <PlusCircleOutlined\r\n              style={{ color: '#2abdd2' }}\r\n              onClick={() => setAddMarketVisible(true)}\r\n            />\r\n          </Col>\r\n          {deprecatedMarkets && deprecatedMarkets.length > 0 && (\r\n            <React.Fragment>\r\n              <Col>\r\n                <Typography>\r\n                  You have unsettled funds on old markets! Please go through\r\n                  them to claim your funds.\r\n                </Typography>\r\n              </Col>\r\n              <Col>\r\n                <Button onClick={() => setHandleDeprecated(!handleDeprecated)}>\r\n                  {handleDeprecated ? 'View new markets' : 'Handle old markets'}\r\n                </Button>\r\n              </Col>\r\n            </React.Fragment>\r\n          )}\r\n        </Row>\r\n        {getComponent()}\r\n      </Wrapper>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction MarketSelector({\r\n  markets,\r\n  placeholder,\r\n  setHandleDeprecated,\r\n  customMarkets,\r\n  onDeleteCustomMarket,\r\n}) {\r\n  const { market, setMarketAddress } = useMarket();\r\n\r\n  const onSetMarketAddress = (marketAddress) => {\r\n    setHandleDeprecated(false);\r\n    setMarketAddress(marketAddress);\r\n  };\r\n\r\n  const extractBase = (a) => a.split('/')[0];\r\n  const extractQuote = (a) => a.split('/')[1];\r\n\r\n  const selectedMarket = getMarketInfos(customMarkets)\r\n    .find(\r\n      (proposedMarket) =>\r\n        market?.address && proposedMarket.address.equals(market.address),\r\n    )\r\n    ?.address?.toBase58();\r\n\r\n  return (\r\n    <Select\r\n      showSearch\r\n      size={'large'}\r\n      style={{ width: 200 }}\r\n      placeholder={placeholder || 'Select a market'}\r\n      optionFilterProp=\"name\"\r\n      onSelect={onSetMarketAddress}\r\n      listHeight={400}\r\n      value={selectedMarket}\r\n      filterOption={(input, option) =>\r\n        option?.name?.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n      }\r\n    >\r\n      {customMarkets && customMarkets.length > 0 && (\r\n        <OptGroup label=\"Custom\">\r\n          {customMarkets.map(({ address, name }, i) => (\r\n            <Option\r\n              value={address}\r\n              key={address}\r\n              name={name}\r\n              style={{\r\n                padding: '10px',\r\n                // @ts-ignore\r\n                backgroundColor: i % 2 === 0 ? 'rgb(39, 44, 61)' : null,\r\n              }}\r\n            >\r\n              <Row>\r\n                <Col flex=\"auto\">{name}</Col>\r\n                {selectedMarket !== address && (\r\n                  <Col>\r\n                    <DeleteOutlined\r\n                      onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        e.nativeEvent.stopImmediatePropagation();\r\n                        onDeleteCustomMarket && onDeleteCustomMarket(address);\r\n                      }}\r\n                    />\r\n                  </Col>\r\n                )}\r\n              </Row>\r\n            </Option>\r\n          ))}\r\n        </OptGroup>\r\n      )}\r\n      <OptGroup label=\"Markets\">\r\n        {markets\r\n          .sort((a, b) =>\r\n            extractQuote(a.name) === 'USDT' && extractQuote(b.name) !== 'USDT'\r\n              ? -1\r\n              : extractQuote(a.name) !== 'USDT' &&\r\n                extractQuote(b.name) === 'USDT'\r\n              ? 1\r\n              : 0,\r\n          )\r\n          .sort((a, b) =>\r\n            extractBase(a.name) < extractBase(b.name)\r\n              ? -1\r\n              : extractBase(a.name) > extractBase(b.name)\r\n              ? 1\r\n              : 0,\r\n          )\r\n          .map(({ address, name, deprecated }, i) => (\r\n            <Option\r\n              value={address.toBase58()}\r\n              key={address}\r\n              name={name}\r\n              style={{\r\n                padding: '10px',\r\n                // @ts-ignore\r\n                backgroundColor: i % 2 === 0 ? 'rgb(39, 44, 61)' : null,\r\n              }}\r\n            >\r\n              {name} {deprecated ? ' (Deprecated)' : null}\r\n            </Option>\r\n          ))}\r\n      </OptGroup>\r\n    </Select>\r\n  );\r\n}\r\n\r\nconst DeprecatedMarketsPage = ({ switchToLiveMarkets }) => {\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col flex=\"auto\">\r\n          <DeprecatedMarketsInstructions\r\n            switchToLiveMarkets={switchToLiveMarkets}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nconst RenderNormal = ({ onChangeOrderRef, onPrice, onSize }) => {\r\n  return (\r\n    <Row\r\n      style={{\r\n        minHeight: '900px',\r\n        flexWrap: 'nowrap',\r\n      }}\r\n    >\r\n      <Col flex=\"auto\" style={{ height: '100%', display: 'flex' }}>\r\n        <UserInfoTable />\r\n      </Col>\r\n      <Col flex={'360px'} style={{ height: '100%' }}>\r\n        <Orderbook smallScreen={false} onPrice={onPrice} onSize={onSize} />\r\n        <TradesTable smallScreen={false} />\r\n      </Col>\r\n      <Col\r\n        flex=\"400px\"\r\n        style={{ height: '100%', display: 'flex', flexDirection: 'column' }}\r\n      >\r\n        <TradeForm setChangeOrderRef={onChangeOrderRef} />\r\n        <StandaloneBalancesDisplay />\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nconst RenderSmall = ({ onChangeOrderRef, onPrice, onSize }) => {\r\n  return (\r\n    <>\r\n      <Row\r\n        style={{\r\n          height: '900px',\r\n        }}\r\n      >\r\n        <Col flex=\"auto\" style={{ height: '100%', display: 'flex' }}>\r\n          <Orderbook\r\n            smallScreen={true}\r\n            depth={13}\r\n            onPrice={onPrice}\r\n            onSize={onSize}\r\n          />\r\n        </Col>\r\n        <Col flex=\"auto\" style={{ height: '100%', display: 'flex' }}>\r\n          <TradesTable smallScreen={true} />\r\n        </Col>\r\n        <Col\r\n          flex=\"400px\"\r\n          style={{ height: '100%', display: 'flex', flexDirection: 'column' }}\r\n        >\r\n          <TradeForm setChangeOrderRef={onChangeOrderRef} />\r\n          <StandaloneBalancesDisplay />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col flex=\"auto\">\r\n          <UserInfoTable />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nconst RenderSmaller = ({ onChangeOrderRef, onPrice, onSize }) => {\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col xs={24} sm={12} style={{ height: '100%', display: 'flex' }}>\r\n          <TradeForm style={{ flex: 1 }} setChangeOrderRef={onChangeOrderRef} />\r\n        </Col>\r\n        <Col xs={24} sm={12}>\r\n          <StandaloneBalancesDisplay />\r\n        </Col>\r\n      </Row>\r\n      <Row\r\n        style={{\r\n          height: '500px',\r\n        }}\r\n      >\r\n        <Col xs={24} sm={12} style={{ height: '100%', display: 'flex' }}>\r\n          <Orderbook smallScreen={true} onPrice={onPrice} onSize={onSize} />\r\n        </Col>\r\n        <Col xs={24} sm={12} style={{ height: '100%', display: 'flex' }}>\r\n          <TradesTable smallScreen={true} />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col flex=\"auto\">\r\n          <UserInfoTable />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport FloatingElement from '../components/layout/FloatingElement';\r\nimport {\r\n  getMarketInfos,\r\n  useAllMarkets,\r\n  useAllOpenOrders,\r\n  useMarket,\r\n} from '../utils/markets';\r\nimport OpenOrderTable from '../components/UserInfoTable/OpenOrderTable';\r\nimport { Button } from 'antd';\r\nimport { OrderWithMarketAndMarketName } from '../utils/types';\r\n\r\nexport default function OpenOrdersPage() {\r\n  const { openOrders, loaded, refreshOpenOrders } = useAllOpenOrders();\r\n  let { customMarkets } = useMarket();\r\n  let marketInfos = getMarketInfos(customMarkets);\r\n  let marketAddressesToNames = Object.fromEntries(\r\n    marketInfos.map((info) => [info.address.toBase58(), info.name]),\r\n  );\r\n  let [allMarkets] = useAllMarkets(customMarkets);\r\n  const marketsByAddress = Object.fromEntries(\r\n    (allMarkets || []).map((marketInfo) => [\r\n      marketInfo.market.address.toBase58(),\r\n      marketInfo.market,\r\n    ]),\r\n  );\r\n\r\n  const dataSource: OrderWithMarketAndMarketName[] = (openOrders || [])\r\n    .map((orderInfos) =>\r\n      orderInfos.orders.map((order) => {\r\n        return {\r\n          marketName: marketAddressesToNames[orderInfos.marketAddress],\r\n          market: marketsByAddress[orderInfos.marketAddress],\r\n          ...order,\r\n        };\r\n      }),\r\n    )\r\n    .flat();\r\n\r\n  return (\r\n    <FloatingElement style={{ flex: 1, paddingTop: 10 }}>\r\n      <Button onClick={refreshOpenOrders} loading={!loaded}>\r\n        Refresh\r\n      </Button>\r\n      <OpenOrderTable\r\n        openOrders={dataSource}\r\n        pageSize={25}\r\n        loading={!loaded}\r\n        onCancelSuccess={refreshOpenOrders}\r\n        marketFilter\r\n      />\r\n    </FloatingElement>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport DataTable from '../layout/DataTable';\r\nimport { Button, Row } from 'antd';\r\nimport { settleAllFunds } from '../../utils/send';\r\nimport { notify } from '../../utils/notifications';\r\nimport { useConnection } from '../../utils/connection';\r\nimport { useWallet } from '../../utils/wallet';\r\nimport {\r\n  useAllMarkets,\r\n  useMarket,\r\n  useSelectedTokenAccounts,\r\n  useTokenAccounts,\r\n} from '../../utils/markets';\r\nimport StandaloneTokenAccountsSelect from '../StandaloneTokenAccountSelect';\r\nimport { abbreviateAddress } from '../../utils/utils';\r\nimport { PublicKey } from '@solana/web3.js';\r\n\r\nexport default function WalletBalancesTable({\r\n  walletBalances,\r\n}: {\r\n  walletBalances: {\r\n    coin: string;\r\n    mint: string;\r\n    walletBalance: number;\r\n    openOrdersFree: number;\r\n    openOrdersTotal: number;\r\n  }[];\r\n}) {\r\n  const connection = useConnection();\r\n  const { wallet, connected } = useWallet();\r\n  const [selectedTokenAccounts] = useSelectedTokenAccounts();\r\n  const [tokenAccounts, tokenAccountsConnected] = useTokenAccounts();\r\n  const { customMarkets } = useMarket();\r\n  const [allMarkets, allMarketsConnected] = useAllMarkets(customMarkets);\r\n  const [settlingFunds, setSettlingFunds] = useState(false);\r\n\r\n  async function onSettleFunds() {\r\n    setSettlingFunds(true);\r\n    try {\r\n      if (!tokenAccounts || !tokenAccountsConnected) {\r\n        notify({\r\n          message: 'Error settling funds',\r\n          description: 'TokenAccounts not connected',\r\n          type: 'error',\r\n        });\r\n        return;\r\n      }\r\n      if (!allMarkets || !allMarketsConnected) {\r\n        notify({\r\n          message: 'Error settling funds',\r\n          description: 'Markets not connected',\r\n          type: 'error',\r\n        });\r\n        return;\r\n      }\r\n      await settleAllFunds({\r\n        connection,\r\n        tokenAccounts,\r\n        selectedTokenAccounts,\r\n        wallet,\r\n        markets: allMarkets.map((marketInfo) => marketInfo.market),\r\n      });\r\n    } catch (e) {\r\n      notify({\r\n        message: 'Error settling funds',\r\n        description: e.message,\r\n        type: 'error',\r\n      });\r\n    } finally {\r\n      setSettlingFunds(false);\r\n    }\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Coin',\r\n      key: 'coin',\r\n      width: '20%',\r\n      render: (walletBalance) => (\r\n        <Row align=\"middle\">\r\n          <a\r\n            href={`https://explorer.solana.com/address/${walletBalance.mint}`}\r\n            target={'_blank'}\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            {walletBalance.coin ||\r\n              abbreviateAddress(new PublicKey(walletBalance.mint))}\r\n          </a>\r\n        </Row>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Wallet Balance',\r\n      dataIndex: 'walletBalance',\r\n      key: 'walletBalance',\r\n      width: '20%',\r\n    },\r\n    {\r\n      title: 'Open orders total balances',\r\n      dataIndex: 'openOrdersTotal',\r\n      key: 'openOrdersTotal',\r\n      width: '20%',\r\n    },\r\n    {\r\n      title: 'Unsettled balances',\r\n      dataIndex: 'openOrdersFree',\r\n      key: 'openOrdersFree',\r\n      width: '20%',\r\n    },\r\n    {\r\n      title: 'Selected token account',\r\n      key: 'selectTokenAccount',\r\n      width: '20%',\r\n      render: (walletBalance) => (\r\n        <Row align=\"middle\" style={{ width: '430px' }}>\r\n          <StandaloneTokenAccountsSelect\r\n            accounts={tokenAccounts?.filter(\r\n              (t) => t.effectiveMint.toBase58() === walletBalance.mint,\r\n            )}\r\n            mint={walletBalance.mint}\r\n          />\r\n        </Row>\r\n      ),\r\n    },\r\n  ];\r\n  return (\r\n    <React.Fragment>\r\n      <DataTable\r\n        emptyLabel=\"No balances\"\r\n        dataSource={walletBalances}\r\n        columns={columns}\r\n        pagination={false}\r\n      />\r\n      {connected && (\r\n        <Button onClick={onSettleFunds} loading={settlingFunds}>\r\n          Settle all funds\r\n        </Button>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Tabs } from 'antd';\r\nimport {\r\n  useAllOpenOrdersBalances,\r\n  useWalletBalancesForAllMarkets,\r\n} from '../utils/markets';\r\nimport FloatingElement from '../components/layout/FloatingElement';\r\nimport WalletBalancesTable from '../components/UserInfoTable/WalletBalancesTable';\r\nimport { useMintToTickers } from '../utils/tokens';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nexport default function BalancesPage() {\r\n  const walletBalances = useWalletBalancesForAllMarkets();\r\n  const mintToTickers = useMintToTickers();\r\n  const openOrdersBalances = useAllOpenOrdersBalances();\r\n\r\n  const data = (walletBalances || []).map((balance) => {\r\n    const balances = {\r\n      coin: mintToTickers[balance.mint],\r\n      mint: balance.mint,\r\n      walletBalance: balance.balance,\r\n      openOrdersFree: 0,\r\n      openOrdersTotal: 0,\r\n    };\r\n    for (let openOrdersAccount of openOrdersBalances[balance.mint] || []) {\r\n      balances['openOrdersFree'] += openOrdersAccount.free;\r\n      balances['openOrdersTotal'] += openOrdersAccount.total;\r\n    }\r\n    return balances;\r\n  });\r\n\r\n  return (\r\n    <FloatingElement style={{ flex: 1, paddingTop: 10 }}>\r\n      <Tabs defaultActiveKey=\"walletBalances\">\r\n        <TabPane tab=\"Wallet Balances\" key=\"walletBalances\">\r\n          <WalletBalancesTable walletBalances={data} />\r\n        </TabPane>\r\n      </Tabs>\r\n    </FloatingElement>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Button, Popover } from 'antd';\r\nimport { InfoCircleOutlined, UserOutlined } from '@ant-design/icons';\r\nimport { useWallet } from '../utils/wallet';\r\nimport LinkAddress from './LinkAddress';\r\n\r\nexport default function WalletConnect() {\r\n  const { connected, wallet } = useWallet();\r\n  const publicKey = wallet?.publicKey?.toBase58();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Button\r\n        type=\"text\"\r\n        size=\"large\"\r\n        onClick={connected ? wallet.disconnect : wallet.connect}\r\n        style={{ color: '#2abdd2' }}\r\n      >\r\n        <UserOutlined />\r\n        {!connected ? 'Connect wallet' : 'Disconnect'}\r\n      </Button>\r\n      {connected && (\r\n        <Popover\r\n          content={<LinkAddress address={publicKey} />}\r\n          placement=\"bottomRight\"\r\n          title=\"Wallet public key\"\r\n          trigger=\"click\"\r\n        >\r\n          <InfoCircleOutlined style={{ color: '#2abdd2' }} />\r\n        </Popover>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Button, Col, Input, Row, Select, Typography } from 'antd';\r\nimport styled from 'styled-components';\r\nimport { Market, Orderbook } from '@project-serum/serum';\r\nimport {\r\n  getExpectedFillPrice,\r\n  getMarketDetails,\r\n  getMarketInfos,\r\n  getMarketOrderPrice,\r\n  getSelectedTokenAccountForMint,\r\n  useBalances,\r\n  useMarket,\r\n  useTokenAccounts,\r\n} from '../utils/markets';\r\nimport { notify } from '../utils/notifications';\r\nimport { useWallet } from '../utils/wallet';\r\nimport { useConnection, useSendConnection } from '../utils/connection';\r\nimport { placeOrder } from '../utils/send';\r\nimport { floorToDecimal, getDecimalCount } from '../utils/utils';\r\nimport FloatingElement from './layout/FloatingElement';\r\nimport WalletConnect from './WalletConnect';\r\nimport { SwapOutlined } from '@ant-design/icons';\r\nimport { CustomMarketInfo } from '../utils/types';\r\nimport Wallet from '@project-serum/sol-wallet-adapter';\r\n\r\nconst { Option } = Select;\r\nconst { Title } = Typography;\r\n\r\nconst ActionButton = styled(Button)`\r\n  color: #2abdd2;\r\n  background-color: #212734;\r\n  border-width: 0px;\r\n`;\r\n\r\nconst ConvertButton = styled(Button)`\r\n  background: #02bf76;\r\n  border-color: #02bf76;\r\n`;\r\n\r\nexport default function ConvertForm() {\r\n  const { connected, wallet } = useWallet();\r\n  const { customMarkets } = useMarket();\r\n  const marketInfos = getMarketInfos(customMarkets);\r\n  const { market, setMarketAddress } = useMarket();\r\n\r\n  const [fromToken, setFromToken] = useState<string | undefined>(undefined);\r\n  const [toToken, setToToken] = useState<string | undefined>(undefined);\r\n  const [size, setSize] = useState<number | undefined>(undefined);\r\n\r\n  const marketInfosbyName = Object.fromEntries(\r\n    marketInfos.map((market) => [market.name, market]),\r\n  );\r\n\r\n  const tokenConvertMap: Map<string, Set<string>> = new Map();\r\n  Object.keys(marketInfosbyName).forEach((market) => {\r\n    let [base, quote] = market.split('/');\r\n    !tokenConvertMap.has(base)\r\n      ? tokenConvertMap.set(base, new Set([quote]))\r\n      : tokenConvertMap.set(\r\n          base,\r\n          new Set([...(tokenConvertMap.get(base) || []), quote]),\r\n        );\r\n    !tokenConvertMap.has(quote)\r\n      ? tokenConvertMap.set(quote, new Set([base]))\r\n      : tokenConvertMap.set(\r\n          quote,\r\n          new Set([...(tokenConvertMap.get(quote) || []), base]),\r\n        );\r\n  });\r\n\r\n  const setMarket = (toToken) => {\r\n    const marketInfo = marketInfos\r\n      .filter((marketInfo) => !marketInfo.deprecated)\r\n      .find(\r\n        (marketInfo) =>\r\n          marketInfo.name === `${fromToken}/${toToken}` ||\r\n          marketInfo.name === `${toToken}/${fromToken}`,\r\n      );\r\n    if (!marketInfo) {\r\n      console.warn(\r\n        `Could not find market info for market names ${fromToken}/${toToken} or ${toToken}/${fromToken}`,\r\n      );\r\n      notify({\r\n        message: 'Invalid market',\r\n        type: 'error',\r\n      });\r\n      return;\r\n    }\r\n    setMarketAddress(marketInfo.address.toBase58());\r\n    setToToken(toToken);\r\n  };\r\n\r\n  return (\r\n    <FloatingElement style={{ maxWidth: 500 }}>\r\n      <Title level={3}>Convert</Title>\r\n      {!connected && (\r\n        <Row justify=\"center\">\r\n          <Col>\r\n            <WalletConnect />\r\n          </Col>\r\n        </Row>\r\n      )}\r\n      {tokenConvertMap && connected && (\r\n        <>\r\n          <Row style={{ marginBottom: 8 }}>\r\n            <Col>\r\n              <Select\r\n                style={{ minWidth: 300 }}\r\n                placeholder=\"Select a token\"\r\n                value={fromToken}\r\n                onChange={(token) => {\r\n                  setFromToken(token);\r\n                  setToToken(undefined);\r\n                }}\r\n              >\r\n                {Array.from(tokenConvertMap.keys()).map((token) => (\r\n                  <Option value={token} key={token}>\r\n                    {token}\r\n                  </Option>\r\n                ))}\r\n              </Select>\r\n            </Col>\r\n          </Row>\r\n          {fromToken && (\r\n            <Row style={{ marginBottom: 8 }}>\r\n              <Col>\r\n                <Select\r\n                  style={{ minWidth: 300 }}\r\n                  value={toToken}\r\n                  onChange={setMarket}\r\n                >\r\n                  {[...(tokenConvertMap.get(fromToken) || [])].map((token) => (\r\n                    <Option value={token} key={token}>\r\n                      {token}\r\n                    </Option>\r\n                  ))}\r\n                </Select>\r\n              </Col>\r\n            </Row>\r\n          )}\r\n          {fromToken && toToken && (\r\n            <ConvertFormSubmit\r\n              size={size}\r\n              setSize={setSize}\r\n              fromToken={fromToken}\r\n              toToken={toToken}\r\n              wallet={wallet}\r\n              market={market}\r\n              customMarkets={customMarkets}\r\n            />\r\n          )}\r\n        </>\r\n      )}\r\n    </FloatingElement>\r\n  );\r\n}\r\n\r\nfunction ConvertFormSubmit({\r\n  size,\r\n  setSize,\r\n  fromToken,\r\n  toToken,\r\n  wallet,\r\n  market,\r\n  customMarkets,\r\n}: {\r\n  size: number | null | undefined;\r\n  setSize: (newSize: number | undefined) => void;\r\n  fromToken: string;\r\n  toToken: string;\r\n  wallet: Wallet;\r\n  market: Market | null | undefined;\r\n  customMarkets: CustomMarketInfo[];\r\n}) {\r\n  const [accounts] = useTokenAccounts();\r\n  const balances = useBalances();\r\n  const [fromAmount, setFromAmount] = useState<number | undefined>();\r\n  const [toAmount, setToAmount] = useState<number | undefined>();\r\n\r\n  const connection = useConnection();\r\n  const sendConnection = useSendConnection();\r\n\r\n  const [isConverting, setIsConverting] = useState(false);\r\n\r\n  const isFromTokenBaseOfMarket = (market) => {\r\n    const { marketName } = getMarketDetails(market, customMarkets);\r\n    if (!marketName) {\r\n      throw Error(\r\n        'Cannot determine if coin is quote or base because marketName is missing',\r\n      );\r\n    }\r\n    const [base] = marketName.split('/');\r\n    return fromToken === base;\r\n  };\r\n\r\n  const onConvert = async () => {\r\n    if (!market) {\r\n      console.warn('Market is null when attempting convert.');\r\n      notify({\r\n        message: 'Invalid market',\r\n        type: 'error',\r\n      });\r\n      return;\r\n    }\r\n    // get accounts\r\n    const baseCurrencyAccount = getSelectedTokenAccountForMint(\r\n      accounts,\r\n      market?.baseMintAddress,\r\n    );\r\n    const quoteCurrencyAccount = getSelectedTokenAccountForMint(\r\n      accounts,\r\n      market?.quoteMintAddress,\r\n    );\r\n\r\n    // get approximate price\r\n    let side;\r\n    try {\r\n      side = isFromTokenBaseOfMarket(market) ? 'sell' : 'buy';\r\n    } catch (e) {\r\n      console.warn(e);\r\n      notify({\r\n        message: 'Error placing order',\r\n        description: e.message,\r\n        type: 'error',\r\n      });\r\n      return;\r\n    }\r\n\r\n    const sidedOrderbookAccount =\r\n      // @ts-ignore\r\n      side === 'buy' ? market._decoded.asks : market._decoded.bids;\r\n    const orderbookData = await connection.getAccountInfo(\r\n      sidedOrderbookAccount,\r\n    );\r\n    if (!orderbookData?.data) {\r\n      notify({ message: 'Invalid orderbook data', type: 'error' });\r\n      return;\r\n    }\r\n    const decodedOrderbookData = Orderbook.decode(market, orderbookData.data);\r\n    const [bbo] =\r\n      decodedOrderbookData &&\r\n      decodedOrderbookData.getL2(1).map(([price]) => price);\r\n    if (!bbo) {\r\n      notify({ message: 'No best price found', type: 'error' });\r\n      return;\r\n    }\r\n    if (!size) {\r\n      notify({ message: 'Size not specified', type: 'error' });\r\n      return;\r\n    }\r\n\r\n    const tickSizeDecimals = getDecimalCount(market.tickSize);\r\n    const parsedPrice = getMarketOrderPrice(\r\n      decodedOrderbookData,\r\n      size,\r\n      tickSizeDecimals,\r\n    );\r\n\r\n    // round size\r\n    const sizeDecimalCount = getDecimalCount(market.minOrderSize);\r\n    const nativeSize = side === 'sell' ? size : size / parsedPrice;\r\n    const parsedSize = floorToDecimal(nativeSize, sizeDecimalCount);\r\n\r\n    setIsConverting(true);\r\n    try {\r\n      await placeOrder({\r\n        side,\r\n        price: parsedPrice,\r\n        size: parsedSize,\r\n        orderType: 'ioc',\r\n        market,\r\n        connection: sendConnection,\r\n        wallet,\r\n        baseCurrencyAccount: baseCurrencyAccount?.pubkey,\r\n        quoteCurrencyAccount: quoteCurrencyAccount?.pubkey,\r\n      });\r\n    } catch (e) {\r\n      console.warn(e);\r\n      notify({\r\n        message: 'Error placing order',\r\n        description: e.message,\r\n        type: 'error',\r\n      });\r\n    } finally {\r\n      setIsConverting(false);\r\n    }\r\n  };\r\n\r\n  const getPrice = async () => {\r\n    try {\r\n      const side = isFromTokenBaseOfMarket(market) ? 'sell' : 'buy';\r\n      const sidedOrderbookAccount =\r\n        // @ts-ignore\r\n        side === 'buy' ? market._decoded.asks : market._decoded.bids;\r\n      const orderbookData = await connection.getAccountInfo(\r\n        sidedOrderbookAccount,\r\n      );\r\n      if (!orderbookData?.data || !market) {\r\n        return [null, null];\r\n      }\r\n      const decodedOrderbookData = Orderbook.decode(market, orderbookData.data);\r\n      const [bbo] =\r\n        decodedOrderbookData &&\r\n        decodedOrderbookData.getL2(1).map(([price]) => price);\r\n      if (!bbo || !size) {\r\n        return [null, null];\r\n      }\r\n      const tickSizeDecimals = getDecimalCount(market.tickSize);\r\n      const expectedPrice = getExpectedFillPrice(\r\n        decodedOrderbookData,\r\n        size,\r\n        tickSizeDecimals,\r\n      );\r\n      if (side === 'buy') {\r\n        return [expectedPrice.toFixed(6), 1];\r\n      } else {\r\n        return [1, expectedPrice.toFixed(6)];\r\n      }\r\n    } catch (e) {\r\n      console.log(`Got error ${e}`);\r\n      return [null, null];\r\n    }\r\n  };\r\n\r\n  useEffect(\r\n    () => {\r\n      getPrice().then(([fromAmount, toAmount]) => {\r\n        setFromAmount(fromAmount || undefined);\r\n        setToAmount(toAmount || undefined);\r\n      });\r\n    },\r\n    // eslint-disable-next-line\r\n    [market?.address.toBase58(), size],\r\n  );\r\n\r\n  const canConvert = market && size && size > 0;\r\n  const balance = balances.find(\r\n    (coinBalance) => coinBalance.coin === fromToken,\r\n  );\r\n  const availableBalance =\r\n    ((balance?.unsettled || 0) + (balance?.wallet || 0)) * 0.99;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Row style={{ marginBottom: 8 }}>\r\n        <Col>\r\n          <Input\r\n            style={{ minWidth: 300 }}\r\n            addonBefore={`Size (${fromToken})`}\r\n            placeholder=\"Size\"\r\n            value={size === null ? undefined : size}\r\n            type=\"number\"\r\n            onChange={(e) => setSize(parseFloat(e.target.value) || undefined)}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row gutter={12} style={{ marginBottom: 8 }}>\r\n        <Col span={12}>\r\n          <ActionButton\r\n            block\r\n            size=\"large\"\r\n            onClick={() => setSize(floorToDecimal(availableBalance, 4))}\r\n          >\r\n            Max: {availableBalance.toFixed(4)}\r\n          </ActionButton>\r\n        </Col>\r\n        <Col span={12}>\r\n          <ConvertButton\r\n            block\r\n            type=\"primary\"\r\n            size=\"large\"\r\n            loading={isConverting}\r\n            onClick={onConvert}\r\n            disabled={!canConvert}\r\n          >\r\n            Convert\r\n          </ConvertButton>\r\n        </Col>\r\n      </Row>\r\n      {canConvert && (\r\n        <Row align=\"middle\" justify=\"center\">\r\n          <Col>\r\n            {fromAmount} {fromToken}\r\n          </Col>\r\n          <Col offset={1}>\r\n            <SwapOutlined />\r\n          </Col>\r\n          <Col offset={1}>\r\n            {toAmount} {toToken}\r\n          </Col>\r\n        </Row>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport ConvertForm from '../components/ConvertForm';\r\nimport { Row, Col } from 'antd';\r\n\r\nconst Wrapper = styled.div`\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 16px 16px;\r\n  .borderNone .ant-select-selector {\r\n    border: none !important;\r\n  }\r\n`;\r\n\r\nexport default function ConvertPage() {\r\n  return (\r\n    <Wrapper style={{ flex: 1, paddingTop: 10 }}>\r\n      <Row justify=\"center\">\r\n        <Col>\r\n          <ConvertForm />\r\n        </Col>\r\n      </Row>\r\n    </Wrapper>\r\n  );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { useLocalStorageState } from './utils';\r\nimport { useInterval } from './useInterval';\r\nimport { useConnection } from './connection';\r\nimport { useWallet } from './wallet';\r\nimport {\r\n  useAllMarkets,\r\n  useTokenAccounts,\r\n  useMarket,\r\n  useSelectedTokenAccounts,\r\n} from './markets';\r\nimport { settleAllFunds } from './send';\r\nimport { PreferencesContextValues } from './types';\r\n\r\nconst PreferencesContext = React.createContext<PreferencesContextValues | null>(\r\n  null,\r\n);\r\n\r\nexport function PreferencesProvider({ children }) {\r\n  const [autoSettleEnabled, setAutoSettleEnabled] = useLocalStorageState(\r\n    'autoSettleEnabled',\r\n    true,\r\n  );\r\n\r\n  const [tokenAccounts] = useTokenAccounts();\r\n  const { connected, wallet } = useWallet();\r\n  const { customMarkets } = useMarket();\r\n  const [marketList] = useAllMarkets(customMarkets);\r\n  const connection = useConnection();\r\n  const [selectedTokenAccounts] = useSelectedTokenAccounts();\r\n\r\n  useInterval(() => {\r\n    const autoSettle = async () => {\r\n      const markets = (marketList || []).map((m) => m.market);\r\n      try {\r\n        console.log('Auto settling');\r\n        await settleAllFunds({\r\n          connection,\r\n          wallet,\r\n          tokenAccounts: tokenAccounts || [],\r\n          markets,\r\n          selectedTokenAccounts,\r\n        });\r\n      } catch (e) {\r\n        console.log('Error auto settling funds: ' + e.message);\r\n      }\r\n    };\r\n\r\n    connected && wallet?.autoApprove && autoSettleEnabled && autoSettle();\r\n  }, 10000);\r\n\r\n  return (\r\n    <PreferencesContext.Provider\r\n      value={{\r\n        autoSettleEnabled,\r\n        setAutoSettleEnabled,\r\n      }}\r\n    >\r\n      {children}\r\n    </PreferencesContext.Provider>\r\n  );\r\n}\r\n\r\nexport function usePreferences() {\r\n  const context = useContext(PreferencesContext);\r\n  if (!context) {\r\n    throw new Error('Missing preferences context');\r\n  }\r\n  return {\r\n    autoSettleEnabled: context.autoSettleEnabled,\r\n    setAutoSettleEnabled: context.setAutoSettleEnabled,\r\n  };\r\n}\r\n","import React from 'react';\r\nimport { Switch, Typography } from 'antd';\r\nimport { usePreferences } from '../utils/preferences';\r\n\r\nconst { Paragraph } = Typography;\r\n\r\nexport default function Settings({ autoApprove }) {\r\n  const { autoSettleEnabled, setAutoSettleEnabled } = usePreferences();\r\n\r\n  return (\r\n    <div>\r\n      <Switch\r\n        style={{ marginRight: 10 }}\r\n        disabled={!autoApprove}\r\n        checked={autoApprove && autoSettleEnabled}\r\n        onChange={setAutoSettleEnabled}\r\n      />{' '}\r\n      Auto settle\r\n      {!autoApprove && (\r\n        <Paragraph style={{ color: 'rgba(255,255,255,0.5)', marginTop: 10 }}>\r\n          To use auto settle, first enable auto approval in your wallet\r\n        </Paragraph>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Col, Input, Modal, Row } from 'antd';\r\nimport { EndpointInfo } from '../utils/types';\r\n\r\nexport default function CustomClusterEndpointDialog({\r\n  visible,\r\n  testingConnection,\r\n  onAddCustomEndpoint,\r\n  onClose,\r\n}: {\r\n  visible: boolean;\r\n  testingConnection: boolean;\r\n  onAddCustomEndpoint: (info: EndpointInfo) => void;\r\n  onClose?: () => void;\r\n}) {\r\n  const [customEndpoint, setCustomEndpoint] = useState('');\r\n  const [customEndpointName, setCustomEndpointName] = useState('');\r\n\r\n  const onSubmit = () => {\r\n    const fullEndpoint = 'https://' + customEndpoint;\r\n    const params = {\r\n      name: customEndpointName,\r\n      endpoint: fullEndpoint,\r\n      custom: true,\r\n    };\r\n    onAddCustomEndpoint(params);\r\n    onDoClose();\r\n  };\r\n  const onDoClose = () => {\r\n    setCustomEndpoint('');\r\n    setCustomEndpointName('');\r\n    onClose && onClose();\r\n  };\r\n  const canSubmit = customEndpoint !== '' && customEndpointName !== '';\r\n\r\n  return (\r\n    <Modal\r\n      title={'Add custom endpoint'}\r\n      visible={visible}\r\n      onOk={onSubmit}\r\n      okText={'Add'}\r\n      onCancel={onDoClose}\r\n      okButtonProps={{ disabled: !canSubmit, loading: testingConnection }}\r\n    >\r\n      <Row style={{ marginBottom: 8 }}>\r\n        <Col span={24}>\r\n          <Input\r\n            placeholder=\"Cluster Name\"\r\n            value={customEndpointName}\r\n            onChange={(e) => setCustomEndpointName(e.target.value)}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row style={{ marginBottom: 8 }}>\r\n        <Col span={24}>\r\n          <Input\r\n            placeholder=\"Cluster Endpoint\"\r\n            value={customEndpoint}\r\n            addonBefore={'https://'}\r\n            onChange={(e) => setCustomEndpoint(e.target.value)}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, {useRef, useState} from 'react';\r\nimport { Select, Typography } from 'antd';\r\nimport apps from './app-list.json';\r\nimport { SearchOutlined } from '@ant-design/icons';\r\nimport {TOKEN_MINTS} from \"@project-serum/serum\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst appsAndTokens = apps.concat(TOKEN_MINTS.map(mint => {\r\n  return {\r\n    \"name\": `${mint.name} SPL`,\r\n    \"url\": `https://explorer.solana.com/address/${mint.address.toBase58()}`,\r\n    \"description\": `${mint.name} SPL token`,\r\n    \"icon\": \"\",\r\n    \"tags\": [\"token\", \"blockchain\", \"solana\", \"spl\", \"solana\", mint.address.toBase58()]\r\n  }\r\n}))\r\n\r\ninterface App {\r\n  name: string;\r\n  url: string;\r\n  description: string;\r\n  tags: string[];\r\n}\r\n\r\nexport default function AppSearch(props) {\r\n  const [searchMatches, setSearchMatches] = useState<App[]>([]);\r\n  const [searchValue, setSearchValue] = useState<string | undefined>(undefined);\r\n\r\n\r\n  const matchApp = (searchString: string, app: App) => {\r\n    const lowerSearchStr = searchString.toLowerCase();\r\n    return (\r\n      app.name.toLowerCase().includes(lowerSearchStr) ||\r\n      app.tags.some(\r\n        (tag) =>\r\n          tag.toLowerCase().includes(lowerSearchStr) ||\r\n          lowerSearchStr.includes(tag.toLowerCase()),\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleSearch = (value) => {\r\n    setSearchValue(value === '' ? undefined : value);\r\n    const filteredApps = appsAndTokens.filter((app) => matchApp(value, app));\r\n    setSearchMatches(filteredApps);\r\n  };\r\n\r\n  const handleSelect = (value, option) => {\r\n    window.open(option.href, '_blank');\r\n    handleClear();\r\n  };\r\n\r\n  const handleClear = () => {\r\n    setSearchMatches([]);\r\n    setSearchValue(undefined);\r\n  };\r\n\r\n  const options = searchMatches.map((d) => (\r\n    <Option key={d.name} value={d.name} href={d.url}>\r\n      <h3>{d.name}</h3>\r\n      <Typography.Text type=\"secondary\">\r\n        {d.url.replace('https://', '')}\r\n      </Typography.Text>\r\n    </Option>\r\n  ));\r\n\r\n  const ref = useRef<any>();\r\n  return (\r\n    <Select\r\n      ref={ref}\r\n      showSearch\r\n      allowClear\r\n      value={searchValue}\r\n      placeholder={props.focussed || props.focussed === undefined ? 'Search for dex, swap, wallet, token...' : ''}\r\n      onSearch={handleSearch}\r\n      onClear={handleClear}\r\n      onSelect={handleSelect}\r\n      onFocus={props.onFocus}\r\n      onBlur={() => {\r\n        props.onBlur();\r\n        handleClear();\r\n      }}\r\n      notFoundContent={null} // todo: make this search history\r\n      style={{\r\n        width: props.width || '300px',\r\n        transition: props.focussed ? \"width 0.1s ease 0.1s\" : \"\"\r\n      }}\r\n      dropdownStyle={{\r\n        width: props.width || \"300px\"\r\n      }}\r\n      dropdownMatchSelectWidth={false}\r\n      suffixIcon={<SearchOutlined onClick={() => ref.current && ref.current.focus()}/>}\r\n      filterOption={false}\r\n    >\r\n      {options}\r\n    </Select>\r\n  );\r\n}\r\n","import {\r\n  InfoCircleOutlined,\r\n  PlusCircleOutlined,\r\n  SettingOutlined,\r\n} from '@ant-design/icons';\r\nimport { Button, Col, Menu, Popover, Row, Select } from 'antd';\r\nimport React, { useCallback, useEffect, useState } from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport logo from '../assets/logo.svg';\r\nimport styled from 'styled-components';\r\nimport { useWallet, WALLET_PROVIDERS } from '../utils/wallet';\r\nimport { ENDPOINTS, useConnectionConfig } from '../utils/connection';\r\nimport Settings from './Settings';\r\nimport CustomClusterEndpointDialog from './CustomClusterEndpointDialog';\r\nimport { EndpointInfo } from '../utils/types';\r\nimport { notify } from '../utils/notifications';\r\nimport { Connection } from '@solana/web3.js';\r\nimport WalletConnect from './WalletConnect';\r\nimport AppSearch from './AppSearch';\r\n\r\nconst Wrapper = styled.div`\r\n  background-color: #0d1017;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-end;\r\n  padding: 0px 30px;\r\n  flex-wrap: wrap;\r\n`;\r\nconst LogoWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  color: #2abdd2;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  img {\r\n    height: 30px;\r\n    margin-right: 8px;\r\n  }\r\n`;\r\n\r\nconst EXTERNAL_LINKS = {\r\n  '/learn': 'https://serum-academy.com/en/serum-dex/',\r\n  '/add-market': 'https://serum-academy.com/en/add-market/',\r\n  '/wallet-support': 'https://serum-academy.com/en/wallet-support',\r\n  '/dex-list': 'https://serum-academy.com/en/dex-list/',\r\n  '/developer-resources': 'https://serum-academy.com/en/developer-resources/',\r\n  '/explorer': 'https://explorer.solana.com',\r\n  '/srm-faq': 'https://projectserum.com/srm-faq',\r\n  '/swap': 'https://swap.projectserum.com',\r\n};\r\n\r\nexport default function TopBar() {\r\n  const { connected, wallet, providerUrl, setProvider } = useWallet();\r\n  const {\r\n    endpoint,\r\n    endpointInfo,\r\n    setEndpoint,\r\n    availableEndpoints,\r\n    setCustomEndpoints,\r\n  } = useConnectionConfig();\r\n  const [addEndpointVisible, setAddEndpointVisible] = useState(false);\r\n  const [testingConnection, setTestingConnection] = useState(false);\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const [searchFocussed, setSearchFocussed] = useState(false);\r\n\r\n  const handleClick = useCallback(\r\n    (e) => {\r\n      if (!(e.key in EXTERNAL_LINKS)) {\r\n        history.push(e.key);\r\n      }\r\n    },\r\n    [history],\r\n  );\r\n\r\n  const onAddCustomEndpoint = (info: EndpointInfo) => {\r\n    const existingEndpoint = availableEndpoints.some(\r\n      (e) => e.endpoint === info.endpoint,\r\n    );\r\n    if (existingEndpoint) {\r\n      notify({\r\n        message: `An endpoint with the given url already exists`,\r\n        type: 'error',\r\n      });\r\n      return;\r\n    }\r\n\r\n    const handleError = (e) => {\r\n      console.log(`Connection to ${info.endpoint} failed: ${e}`);\r\n      notify({\r\n        message: `Failed to connect to ${info.endpoint}`,\r\n        type: 'error',\r\n      });\r\n    };\r\n\r\n    try {\r\n      const connection = new Connection(info.endpoint, 'recent');\r\n      connection\r\n        .getEpochInfo()\r\n        .then((result) => {\r\n          setTestingConnection(true);\r\n          console.log(`testing connection to ${info.endpoint}`);\r\n          const newCustomEndpoints = [\r\n            ...availableEndpoints.filter((e) => e.custom),\r\n            info,\r\n          ];\r\n          setEndpoint(info.endpoint);\r\n          setCustomEndpoints(newCustomEndpoints);\r\n        })\r\n        .catch(handleError);\r\n    } catch (e) {\r\n      handleError(e);\r\n    } finally {\r\n      setTestingConnection(false);\r\n    }\r\n  };\r\n\r\n  const endpointInfoCustom = endpointInfo && endpointInfo.custom;\r\n  useEffect(() => {\r\n    const handler = () => {\r\n      if (endpointInfoCustom) {\r\n        setEndpoint(ENDPOINTS[0].endpoint);\r\n      }\r\n    };\r\n    window.addEventListener('beforeunload', handler);\r\n    return () => window.removeEventListener('beforeunload', handler);\r\n  }, [endpointInfoCustom, setEndpoint]);\r\n\r\n  return (\r\n    <>\r\n      <CustomClusterEndpointDialog\r\n        visible={addEndpointVisible}\r\n        testingConnection={testingConnection}\r\n        onAddCustomEndpoint={onAddCustomEndpoint}\r\n        onClose={() => setAddEndpointVisible(false)}\r\n      />\r\n      <Wrapper>\r\n        <LogoWrapper onClick={() => history.push('/')} >\r\n          <img src={logo} alt=\"\"/>\r\n          {'SERUM'}\r\n        </LogoWrapper>\r\n        <Menu\r\n          mode=\"horizontal\"\r\n          onClick={handleClick}\r\n          selectedKeys={[location.pathname]}\r\n          style={{\r\n            borderBottom: 'none',\r\n            backgroundColor: 'transparent',\r\n            display: 'flex',\r\n            alignItems: 'flex-end',\r\n            flex: 1,\r\n          }}\r\n        >\r\n          <Menu.Item key=\"/\" style={{margin: \"0 10px 0 20px\"}}>TRADE</Menu.Item>\r\n          {!searchFocussed && (\r\n            <Menu.Item key=\"/swap\" style={{margin: \"0 10px\"}}>\r\n              <a\r\n                href={EXTERNAL_LINKS['/swap']}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                SWAP\r\n              </a>\r\n            </Menu.Item>\r\n          )}\r\n          {connected && (!searchFocussed || location.pathname === '/balances') &&\r\n            <Menu.Item key=\"/balances\" style={{margin: \"0 10px\"}}>BALANCES</Menu.Item>\r\n          }\r\n          {connected && (!searchFocussed || location.pathname === '/orders') &&\r\n            <Menu.Item key=\"/orders\" style={{margin: \"0 10px\"}}>ORDERS</Menu.Item>\r\n          }\r\n          {connected && (!searchFocussed || location.pathname === '/convert') &&\r\n            <Menu.Item key=\"/convert\" style={{margin: \"0 10px\"}}>CONVERT</Menu.Item>\r\n          }\r\n          {(!searchFocussed || location.pathname === '/list-new-market') &&\r\n            <Menu.Item key=\"/list-new-market\" style={{margin: \"0 10px\"}}>ADD MARKET</Menu.Item>\r\n          }\r\n          {!searchFocussed && (\r\n            <Menu.SubMenu\r\n              title=\"LEARN\"\r\n              onTitleClick={() => window.open(EXTERNAL_LINKS['/learn'], '_blank')}\r\n              style={{margin: \"0 0px 0 10px\"}}\r\n            >\r\n              <Menu.Item key=\"/add-market\">\r\n                <a\r\n                  href={EXTERNAL_LINKS['/add-market']}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  Adding a market\r\n                </a>\r\n              </Menu.Item>\r\n              <Menu.Item key=\"/wallet-support\">\r\n                <a\r\n                  href={EXTERNAL_LINKS['/wallet-support']}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  Supported wallets\r\n                </a>\r\n              </Menu.Item>\r\n              <Menu.Item key=\"/dex-list\">\r\n                <a\r\n                  href={EXTERNAL_LINKS['/dex-list']}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  DEX list\r\n                </a>\r\n              </Menu.Item>\r\n              <Menu.Item key=\"/developer-resources\">\r\n                <a\r\n                  href={EXTERNAL_LINKS['/developer-resources']}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  Developer resources\r\n                </a>\r\n              </Menu.Item>\r\n              <Menu.Item key=\"/explorer\">\r\n                <a\r\n                  href={EXTERNAL_LINKS['/explorer']}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  Solana block explorer\r\n                </a>\r\n              </Menu.Item>\r\n              <Menu.Item key=\"/srm-faq\">\r\n                <a\r\n                  href={EXTERNAL_LINKS['/srm-faq']}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  SRM FAQ\r\n                </a>\r\n              </Menu.Item>\r\n            </Menu.SubMenu>\r\n          )}\r\n        </Menu>\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            paddingRight: 5,\r\n          }}\r\n        >\r\n          <AppSearch\r\n            onFocus={() => setSearchFocussed(true)}\r\n            onBlur={() => setSearchFocussed(false)}\r\n            focussed={searchFocussed}\r\n            width={searchFocussed ? \"350px\" : \"35px\"}\r\n          />\r\n        </div>\r\n        <div>\r\n          <Row\r\n            align=\"middle\"\r\n            style={{ paddingLeft: 5, paddingRight: 5 }}\r\n            gutter={16}\r\n          >\r\n            <Col>\r\n              <PlusCircleOutlined\r\n                style={{ color: '#2abdd2' }}\r\n                onClick={() => setAddEndpointVisible(true)}\r\n              />\r\n            </Col>\r\n            <Col>\r\n              <Popover\r\n                content={endpoint}\r\n                placement=\"bottomRight\"\r\n                title=\"URL\"\r\n                trigger=\"hover\"\r\n              >\r\n                <InfoCircleOutlined style={{ color: '#2abdd2' }} />\r\n              </Popover>\r\n            </Col>\r\n            <Col>\r\n              <Select\r\n                onSelect={setEndpoint}\r\n                value={endpoint}\r\n                style={{ marginRight: 8, width: '150px' }}\r\n              >\r\n                {availableEndpoints.map(({ name, endpoint }) => (\r\n                  <Select.Option value={endpoint} key={endpoint}>\r\n                    {name}\r\n                  </Select.Option>\r\n                ))}\r\n              </Select>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n        {connected && (\r\n          <div>\r\n            <Popover\r\n              content={<Settings autoApprove={wallet?.autoApprove} />}\r\n              placement=\"bottomRight\"\r\n              title=\"Settings\"\r\n              trigger=\"click\"\r\n            >\r\n              <Button style={{ marginRight: 8 }}>\r\n                <SettingOutlined />\r\n                Settings\r\n              </Button>\r\n            </Popover>\r\n          </div>\r\n        )}\r\n        <div>\r\n          <Select onSelect={setProvider} value={providerUrl}>\r\n            {WALLET_PROVIDERS.map(({ name, url }) => (\r\n              <Select.Option value={url} key={url}>\r\n                {name}\r\n              </Select.Option>\r\n            ))}\r\n          </Select>\r\n        </div>\r\n        <div>\r\n          <WalletConnect />\r\n        </div>\r\n      </Wrapper>\r\n    </>\r\n  );\r\n}\r\n","export const helpUrls = {\r\n  customerSupport: 'https://t.me/ProjectSerum',\r\n  customerSupportZh: 'https://t.me/ProjectSerum_Chinese',\r\n  contactEmail: 'mailto:contact@projectserum.com',\r\n  discord: 'https://discord.gg/EDvudv6',\r\n  telegram: 'https://t.me/ProjectSerum',\r\n  github: 'https://github.com/project-serum',\r\n  projectSerum: 'https://projectserum.com/',\r\n  developerResources: 'https://projectserum.com/developer-resources',\r\n  solanaBeach: 'https://solanabeach.io',\r\n};\r\n","import React from 'react';\r\nimport { Layout, Row, Col, Grid } from 'antd';\r\nimport Link from './Link';\r\nimport { helpUrls } from './HelpUrls';\r\nconst { Footer } = Layout;\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst footerElements = [\r\n  {\r\n    description: 'Serum Developer Resources',\r\n    link: helpUrls.developerResources,\r\n  },\r\n  { description: 'Discord', link: helpUrls.discord },\r\n  { description: 'Telegram', link: helpUrls.telegram },\r\n  { description: 'GitHub', link: helpUrls.github },\r\n  { description: 'Project Serum', link: helpUrls.projectSerum },\r\n  { description: 'Solana Network', link: helpUrls.solanaBeach },\r\n];\r\n\r\nexport const CustomFooter = () => {\r\n  const smallScreen = !useBreakpoint().lg;\r\n\r\n  return (\r\n    <Footer\r\n      style={{\r\n        height: '45px',\r\n        paddingBottom: 10,\r\n        paddingTop: 10,\r\n      }}\r\n    >\r\n      <Row align=\"middle\" gutter={[16, 4]}>\r\n        {!smallScreen && (\r\n          <>\r\n            <Col flex=\"auto\" />\r\n            {footerElements.map((elem, index) => {\r\n              return (\r\n                <Col key={index + ''}>\r\n                  <Link external to={elem.link}>\r\n                    {elem.description}\r\n                  </Link>\r\n                </Col>\r\n              );\r\n            })}\r\n          </>\r\n        )}\r\n        <Col flex=\"auto\">{/*  <DexProgramSelector />*/}</Col>\r\n      </Row>\r\n    </Footer>\r\n  );\r\n};\r\n","import { Layout } from 'antd';\r\nimport React from 'react';\r\nimport TopBar from './TopBar';\r\nimport { CustomFooter as Footer } from './Footer';\r\nconst { Header, Content } = Layout;\r\n\r\nexport default function BasicLayout({ children }) {\r\n  return (\r\n    <React.Fragment>\r\n      <Layout\r\n        style={{ display: 'flex', minHeight: '100vh', flexDirection: 'column' }}\r\n      >\r\n        <Header style={{ padding: 0, minHeight: 64, height: 'unset' }}>\r\n          <TopBar />\r\n        </Header>\r\n        <Content style={{ flex: 1 }}>{children}</Content>\r\n        <Footer />\r\n      </Layout>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import { PublicKey } from '@solana/web3.js';\r\nimport React, { ReactElement, useMemo, useState } from 'react';\r\nimport { useAccountInfo } from '../utils/connection';\r\nimport { isValidPublicKey } from '../utils/utils';\r\nimport { ValidateStatus } from 'antd/lib/form/FormItem';\r\nimport { TokenInstructions } from '@project-serum/serum';\r\nimport { parseTokenMintData } from '../utils/tokens';\r\nimport { Form, Input, Tooltip } from 'antd';\r\nimport Link from './Link';\r\n\r\nexport interface MintInfo {\r\n  address: PublicKey;\r\n  decimals: number;\r\n}\r\n\r\nexport function useMintInput(\r\n  name,\r\n  label: string | ReactElement,\r\n  tooltip?: string | ReactElement,\r\n): [ReactElement, MintInfo | null] {\r\n  const [address, setAddress] = useState('');\r\n  const [accountInfo, loaded] = useAccountInfo(\r\n    isValidPublicKey(address) ? new PublicKey(address) : null,\r\n  );\r\n\r\n  const { validateStatus, hasFeedback, help, mintInfo } = useMemo(() => {\r\n    let validateStatus: ValidateStatus = '';\r\n    let hasFeedback = false;\r\n    let help: string | null = null;\r\n    let mintInfo: MintInfo | null = null;\r\n    if (address) {\r\n      hasFeedback = true;\r\n      if (accountInfo) {\r\n        if (\r\n          accountInfo.owner.equals(TokenInstructions.TOKEN_PROGRAM_ID) &&\r\n          accountInfo.data.length === 82\r\n        ) {\r\n          let parsed = parseTokenMintData(accountInfo.data);\r\n          if (parsed.initialized) {\r\n            validateStatus = 'success';\r\n            mintInfo = {\r\n              address: new PublicKey(address),\r\n              decimals: parsed.decimals,\r\n            };\r\n          } else {\r\n            validateStatus = 'error';\r\n            help = 'Invalid SPL mint';\r\n          }\r\n        } else {\r\n          validateStatus = 'error';\r\n          help = 'Invalid SPL mint address';\r\n        }\r\n      } else if (isValidPublicKey(address) && !loaded) {\r\n        validateStatus = 'validating';\r\n      } else {\r\n        validateStatus = 'error';\r\n        help = 'Invalid Solana address';\r\n      }\r\n    }\r\n    return { validateStatus, hasFeedback, help, mintInfo };\r\n  }, [address, accountInfo, loaded]);\r\n\r\n  const input = (\r\n    <Form.Item\r\n      label={\r\n        <Tooltip\r\n          title={\r\n            <>\r\n              {tooltip} You can look up token mint addresses on{' '}\r\n              <Link external to=\"https://sollet.io\">\r\n                sollet.io\r\n              </Link>\r\n              .\r\n            </>\r\n          }\r\n        >\r\n          {label}\r\n        </Tooltip>\r\n      }\r\n      name={name}\r\n      validateStatus={validateStatus}\r\n      hasFeedback={hasFeedback}\r\n      help={help}\r\n    >\r\n      <Input\r\n        value={address}\r\n        onChange={(e) => setAddress(e.target.value.trim())}\r\n      />\r\n    </Form.Item>\r\n  );\r\n\r\n  return [input, mintInfo];\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Button, Form, Input, Tooltip, Typography } from 'antd';\r\nimport { notify } from '../utils/notifications';\r\nimport { MARKETS } from '@project-serum/serum';\r\nimport { useConnection } from '../utils/connection';\r\nimport FloatingElement from '../components/layout/FloatingElement';\r\nimport styled from 'styled-components';\r\nimport { useWallet } from '../utils/wallet';\r\nimport { listMarket } from '../utils/send';\r\nimport { useMintInput } from '../components/useMintInput';\r\n\r\nconst { Text, Title } = Typography;\r\n\r\nconst Wrapper = styled.div`\r\n  max-width: 800px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-top: 24px;\r\n  margin-bottom: 24px;\r\n`;\r\n\r\nexport default function ListNewMarketPage() {\r\n  const connection = useConnection();\r\n  const { wallet, connected } = useWallet();\r\n  const [baseMintInput, baseMintInfo] = useMintInput(\r\n    'baseMint',\r\n    <Text>\r\n      Base Token Mint Address{' '}\r\n      <Text type=\"secondary\">\r\n        (e.g. BTC solana address:{' '}\r\n        {\r\n          <Text type=\"secondary\" code>\r\n            9n4nbM75f5Ui33ZbPYXn59EwSgE8CGsHtAeTH5YFeJ9E\r\n          </Text>\r\n        }\r\n        )\r\n      </Text>\r\n    </Text>,\r\n    'The base token is the token being traded. For example, the base token of a BTC/USDT market is BTC.',\r\n  );\r\n  const [quoteMintInput, quoteMintInfo] = useMintInput(\r\n    'quoteMint',\r\n    <Text>\r\n      Quote Token Mint Address{' '}\r\n      <Text type=\"secondary\">\r\n        (e.g. USDT solana address:{' '}\r\n        {\r\n          <Text type=\"secondary\" code>\r\n            BQcdHdAQW1hczDbBi9hiegXAR7A98Q9jx3X3iBBBDiq4\r\n          </Text>\r\n        }\r\n        )\r\n      </Text>\r\n    </Text>,\r\n    'The quote token is the token used to price trades. For example, the quote token of a BTC/USDT market is USDT.',\r\n  );\r\n  const [lotSize, setLotSize] = useState('1');\r\n  const [tickSize, setTickSize] = useState('0.01');\r\n  const dexProgramId = MARKETS.find(({ deprecated }) => !deprecated).programId;\r\n  const [submitting, setSubmitting] = useState(false);\r\n\r\n  const [listedMarket, setListedMarket] = useState(null);\r\n\r\n  let baseLotSize;\r\n  let quoteLotSize;\r\n  if (baseMintInfo && parseFloat(lotSize) > 0) {\r\n    baseLotSize = Math.round(10 ** baseMintInfo.decimals * parseFloat(lotSize));\r\n    if (quoteMintInfo && parseFloat(tickSize) > 0) {\r\n      quoteLotSize = Math.round(\r\n        parseFloat(lotSize) *\r\n          10 ** quoteMintInfo.decimals *\r\n          parseFloat(tickSize),\r\n      );\r\n    }\r\n  }\r\n\r\n  const canSubmit =\r\n    connected &&\r\n    !!baseMintInfo &&\r\n    !!quoteMintInfo &&\r\n    !!baseLotSize &&\r\n    !!quoteLotSize;\r\n\r\n  async function onSubmit() {\r\n    if (!canSubmit) {\r\n      return;\r\n    }\r\n    setSubmitting(true);\r\n    try {\r\n      const marketAddress = await listMarket({\r\n        connection,\r\n        wallet,\r\n        baseMint: baseMintInfo.address,\r\n        quoteMint: quoteMintInfo.address,\r\n        baseLotSize,\r\n        quoteLotSize,\r\n        dexProgramId,\r\n      });\r\n      setListedMarket(marketAddress);\r\n    } catch (e) {\r\n      console.warn(e);\r\n      notify({\r\n        message: 'Error listing new market: ' + e.message,\r\n        type: 'error',\r\n      });\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <FloatingElement>\r\n        <Title level={4}>List New Market</Title>\r\n        <Form\r\n          labelCol={{ span: 24 }}\r\n          wrapperCol={{ span: 24 }}\r\n          layout={'vertical'}\r\n          onFinish={onSubmit}\r\n        >\r\n          {baseMintInput}\r\n          {quoteMintInput}\r\n          <Form.Item\r\n            label={\r\n              <Tooltip title=\"Smallest allowed order size. For a BTC/USDT market, this would be in units of BTC.\">\r\n                Minimum Order Size{' '}\r\n                <Text type=\"secondary\">(Lot size in e.g. BTC)</Text>\r\n              </Tooltip>\r\n            }\r\n            name=\"lotSize\"\r\n            initialValue=\"1\"\r\n            validateStatus={\r\n              baseMintInfo && quoteMintInfo\r\n                ? baseLotSize\r\n                  ? 'success'\r\n                  : 'error'\r\n                : null\r\n            }\r\n            hasFeedback={baseMintInfo && quoteMintInfo}\r\n          >\r\n            <Input\r\n              value={lotSize}\r\n              onChange={(e) => setLotSize(e.target.value.trim())}\r\n              type=\"number\"\r\n              min=\"0\"\r\n              step=\"any\"\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label={\r\n              <Tooltip title=\"Smallest amount by which prices can move. For a BTC/USDT market, this would be in units of USDT.\">\r\n                Tick Size{' '}\r\n                <Text type=\"secondary\">(Price increment in e.g. USDT)</Text>\r\n              </Tooltip>\r\n            }\r\n            name=\"tickSize\"\r\n            initialValue=\"0.01\"\r\n            validateStatus={\r\n              baseMintInfo && quoteMintInfo\r\n                ? quoteLotSize\r\n                  ? 'success'\r\n                  : 'error'\r\n                : null\r\n            }\r\n            hasFeedback={baseMintInfo && quoteMintInfo}\r\n          >\r\n            <Input\r\n              value={tickSize}\r\n              onChange={(e) => setTickSize(e.target.value.trim())}\r\n              type=\"number\"\r\n              min=\"0\"\r\n              step=\"any\"\r\n            />\r\n          </Form.Item>\r\n          <Form.Item label=\" \" colon={false}>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              disabled={!canSubmit}\r\n              loading={submitting}\r\n            >\r\n              {connected ? 'Submit' : 'Not connected to wallet'}\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </FloatingElement>\r\n      {listedMarket ? (\r\n        <FloatingElement>\r\n          <Text>New market address: {listedMarket.toBase58()}</Text>\r\n        </FloatingElement>\r\n      ) : null}\r\n    </Wrapper>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Button, Form, Input, Tooltip, Typography } from 'antd';\r\nimport { PublicKey } from '@solana/web3.js';\r\nimport { useConnection } from '../../utils/connection';\r\nimport FloatingElement from '../../components/layout/FloatingElement';\r\nimport styled from 'styled-components';\r\nimport { useWallet } from '../../utils/wallet';\r\nimport { sendSignedTransaction, signTransaction } from '../../utils/send';\r\nimport { useMintInput } from '../../components/useMintInput';\r\nimport { PoolTransactions } from '@project-serum/pool';\r\nimport { useTokenAccounts } from '../../utils/markets';\r\nimport BN from 'bn.js';\r\nimport { notify } from '../../utils/notifications';\r\nimport Link from '../../components/Link';\r\n\r\nconst { Text, Title } = Typography;\r\n\r\nconst Wrapper = styled.div`\r\n  max-width: 800px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-top: 24px;\r\n  margin-bottom: 24px;\r\n`;\r\n\r\nconst AddRemoveTokenButtons = styled.div`\r\n  margin-top: 16px;\r\n  margin-bottom: 16px;\r\n`;\r\n\r\nconst DEFAULT_PROGRAM_ID = '8qZoqDMXTfLZz6BYrDfD5Cuy65JKkaNwktb54hj1yaoK';\r\n\r\nexport default function NewPoolPage() {\r\n  const connection = useConnection();\r\n  const { wallet, connected } = useWallet();\r\n  const [poolName, setPoolName] = useState('');\r\n  const [programId, setProgramId] = useState(DEFAULT_PROGRAM_ID);\r\n  const [initialSupply, setInitialSupply] = useState('1');\r\n  const [initialAssets, setInitialAssets] = useState<InitialAsset[]>([\r\n    { valid: false },\r\n    { valid: false },\r\n  ]);\r\n  const [tokenAccounts] = useTokenAccounts();\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [newPoolAddress, setNewPoolAddress] = useState<PublicKey | null>(null);\r\n\r\n  const canSubmit =\r\n    connected &&\r\n    poolName.trim() &&\r\n    programId &&\r\n    parseFloat(initialSupply) > 0 &&\r\n    initialAssets.every((asset) => asset.valid) &&\r\n    tokenAccounts;\r\n\r\n  async function onSubmit() {\r\n    if (!canSubmit) {\r\n      return;\r\n    }\r\n    setSubmitting(true);\r\n    try {\r\n      const assets = initialAssets as ValidInitialAsset[];\r\n      const [\r\n        poolAddress,\r\n        transactions,\r\n      ] = await PoolTransactions.initializeSimplePool({\r\n        connection,\r\n        programId: new PublicKey(programId),\r\n        poolName,\r\n        poolStateSpace: 1024,\r\n        poolMintDecimals: 6,\r\n        initialPoolMintSupply: new BN(\r\n          Math.round(10 ** 6 * parseFloat(initialSupply)),\r\n        ),\r\n        assetMints: assets.map((asset) => asset.mint),\r\n        initialAssetQuantities: assets.map((asset) => new BN(asset.quantity)),\r\n        creator: wallet.publicKey,\r\n        creatorAssets: assets.map((asset) => {\r\n          const found = tokenAccounts?.find((tokenAccount) =>\r\n            tokenAccount.effectiveMint.equals(asset.mint),\r\n          );\r\n          if (!found) {\r\n            throw new Error('No token account for ' + asset.mint.toBase58());\r\n          }\r\n          return found.pubkey;\r\n        }),\r\n      });\r\n      const signed = await Promise.all(\r\n        transactions.map(({ transaction, signers }) =>\r\n          signTransaction({ transaction, wallet, signers, connection }),\r\n        ),\r\n      );\r\n      for (let signedTransaction of signed) {\r\n        await sendSignedTransaction({ signedTransaction, connection });\r\n      }\r\n      setNewPoolAddress(poolAddress);\r\n    } catch (e) {\r\n      console.warn(e);\r\n      notify({\r\n        message: 'Error creating new pool: ' + e.message,\r\n        type: 'error',\r\n      });\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <FloatingElement>\r\n        <Title level={4}>Create new pool</Title>\r\n        <Form layout=\"vertical\" onFinish={onSubmit}>\r\n          <Form.Item\r\n            label={\r\n              <Tooltip title=\"Public name of the pool.\">Pool Name</Tooltip>\r\n            }\r\n            name=\"name\"\r\n          >\r\n            <Input\r\n              value={poolName}\r\n              onChange={(e) => setPoolName(e.target.value)}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label={\r\n              <Tooltip title=\"Address of the pool program.\">\r\n                Program ID{' '}\r\n                <Text type=\"secondary\">(e.g. {DEFAULT_PROGRAM_ID})</Text>\r\n              </Tooltip>\r\n            }\r\n            name=\"programId\"\r\n            initialValue={DEFAULT_PROGRAM_ID}\r\n          >\r\n            <Input\r\n              value={programId}\r\n              onChange={(e) => setProgramId(e.target.value)}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label={\r\n              <Tooltip title=\"Initial number of pool tokens to mint to your account.\">\r\n                Initial Pool Token Supply\r\n              </Tooltip>\r\n            }\r\n            name=\"initialSupply\"\r\n            initialValue=\"1\"\r\n          >\r\n            <Input\r\n              value={initialSupply}\r\n              onChange={(e) => setInitialSupply(e.target.value.trim())}\r\n              type=\"number\"\r\n              min=\"0\"\r\n              step=\"any\"\r\n            />\r\n          </Form.Item>\r\n          <AddRemoveTokenButtons>\r\n            <Button\r\n              onClick={() =>\r\n                setInitialAssets((assets) => assets.concat({ valid: false }))\r\n              }\r\n            >\r\n              Add token\r\n            </Button>{' '}\r\n            <Button\r\n              onClick={() =>\r\n                setInitialAssets((assets) => assets.slice(0, assets.length - 1))\r\n              }\r\n              disabled={initialAssets.length <= 1}\r\n            >\r\n              Remove token\r\n            </Button>\r\n          </AddRemoveTokenButtons>\r\n          {initialAssets.map((asset, i) => (\r\n            <AssetInput setInitialAssets={setInitialAssets} index={i} key={i} />\r\n          ))}\r\n          <Form.Item label=\" \" colon={false}>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              disabled={!canSubmit}\r\n              loading={submitting}\r\n            >\r\n              {connected ? 'Submit' : 'Not connected to wallet'}\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </FloatingElement>\r\n      {newPoolAddress ? (\r\n        <FloatingElement>\r\n          <Text>\r\n            New pool address:{' '}\r\n            <Link to={`/pools/${newPoolAddress.toBase58()}`}>\r\n              {newPoolAddress.toBase58()}\r\n            </Link>\r\n          </Text>\r\n        </FloatingElement>\r\n      ) : null}\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\ntype InitialAsset = { valid: false } | ValidInitialAsset;\r\ninterface ValidInitialAsset {\r\n  valid: true;\r\n  mint: PublicKey;\r\n  quantity: number;\r\n}\r\n\r\nfunction AssetInput({ setInitialAssets, index }) {\r\n  const [mintInput, mintInfo] = useMintInput(\r\n    `mint${index}`,\r\n    <Text>Token {index + 1} Mint Address</Text>,\r\n    <>Token mint address for token {index + 1}.</>,\r\n  );\r\n  const [quantity, setQuantity] = useState('');\r\n\r\n  useEffect(() => {\r\n    let change: InitialAsset;\r\n    if (mintInfo && parseFloat(quantity) >= 0) {\r\n      let parsedQuantity = Math.round(\r\n        10 ** mintInfo.decimals * parseFloat(quantity),\r\n      );\r\n      change = {\r\n        mint: mintInfo.address,\r\n        quantity: parsedQuantity,\r\n        valid: true,\r\n      };\r\n    } else {\r\n      change = { valid: false };\r\n    }\r\n    setInitialAssets((assets: InitialAsset[]) =>\r\n      assets.map((old, i) => (i === index ? change : old)),\r\n    );\r\n  }, [setInitialAssets, index, mintInfo, quantity]);\r\n\r\n  return (\r\n    <>\r\n      {mintInput}\r\n      <Form.Item\r\n        label={\r\n          <Tooltip\r\n            title={\r\n              <>\r\n                Initial quantity of token {index + 1} to deposit into the pool.\r\n              </>\r\n            }\r\n          >\r\n            Token {index + 1} Initial Quantity\r\n          </Tooltip>\r\n        }\r\n        name={`quantity${index}`}\r\n        validateStatus={'success'}\r\n      >\r\n        <Input\r\n          value={quantity}\r\n          onChange={(e) => setQuantity(e.target.value.trim())}\r\n          type=\"number\"\r\n          min=\"0\"\r\n          step=\"any\"\r\n        />\r\n      </Form.Item>\r\n    </>\r\n  );\r\n}\r\n","import { Basket, PoolInfo } from '@project-serum/pool';\r\nimport React from 'react';\r\nimport BN from 'bn.js';\r\nimport { PublicKey } from '@solana/web3.js';\r\nimport { useAccountInfo } from '../../../utils/connection';\r\nimport { parseTokenMintData } from '../../../utils/tokens';\r\nimport { Spin } from 'antd';\r\n\r\ninterface BasketDisplayProps {\r\n  poolInfo: PoolInfo;\r\n  basket: Basket;\r\n}\r\n\r\nexport default function PoolBasketDisplay({\r\n  poolInfo,\r\n  basket,\r\n}: BasketDisplayProps) {\r\n  return (\r\n    <ul>\r\n      {poolInfo.state.assets.map((asset, index) => (\r\n        <BasketItem\r\n          key={index}\r\n          mint={asset.mint}\r\n          quantity={basket.quantities[index]}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\ninterface BasketItemProps {\r\n  mint: PublicKey;\r\n  quantity: BN;\r\n}\r\n\r\nfunction BasketItem({ mint, quantity }: BasketItemProps) {\r\n  const [mintAccountInfo] = useAccountInfo(mint);\r\n  let quantityDisplay = <Spin size=\"small\" />;\r\n  if (mintAccountInfo) {\r\n    const mintInfo = parseTokenMintData(mintAccountInfo.data);\r\n    quantityDisplay = <>{quantity.toNumber() / 10 ** mintInfo.decimals}</>;\r\n  }\r\n\r\n  return (\r\n    <li>\r\n      {quantityDisplay} {mint.toBase58()}\r\n    </li>\r\n  );\r\n}\r\n","import { getPoolBasket, PoolInfo } from '@project-serum/pool';\r\nimport React from 'react';\r\nimport FloatingElement from '../../../components/layout/FloatingElement';\r\nimport { Spin, Typography } from 'antd';\r\nimport { MintInfo } from '../../../utils/tokens';\r\nimport { useAsyncData } from '../../../utils/fetch-loop';\r\nimport { useConnection } from '../../../utils/connection';\r\nimport tuple from 'immutable-tuple';\r\nimport PoolBasketDisplay from './PoolBasketDisplay';\r\n\r\nconst { Text, Paragraph } = Typography;\r\n\r\ninterface PoolInfoProps {\r\n  poolInfo: PoolInfo;\r\n  mintInfo: MintInfo;\r\n}\r\n\r\nexport default function PoolInfoPanel({ poolInfo, mintInfo }: PoolInfoProps) {\r\n  const connection = useConnection();\r\n\r\n  const [totalBasket] = useAsyncData(\r\n    () => getPoolBasket(connection, poolInfo, { redeem: mintInfo.supply }),\r\n    tuple(\r\n      getPoolBasket,\r\n      connection,\r\n      poolInfo.address.toBase58(),\r\n      'total',\r\n      mintInfo.supply.toString(),\r\n    ),\r\n  );\r\n\r\n  return (\r\n    <FloatingElement stretchVertical>\r\n      <Paragraph>Name: {poolInfo.state.name}</Paragraph>\r\n      <Paragraph>\r\n        Address: <Text copyable>{poolInfo.address.toBase58()}</Text>\r\n      </Paragraph>\r\n      <Paragraph>\r\n        Pool token mint address:{' '}\r\n        <Text copyable>{poolInfo.state.poolTokenMint.toBase58()}</Text>\r\n      </Paragraph>\r\n      <Paragraph>\r\n        Total supply: {mintInfo.supply.toNumber() / 10 ** mintInfo.decimals}\r\n      </Paragraph>\r\n      <Text>Total assets:</Text>\r\n      <div>\r\n        {!totalBasket ? (\r\n          <Spin />\r\n        ) : (\r\n          <PoolBasketDisplay poolInfo={poolInfo} basket={totalBasket} />\r\n        )}\r\n      </div>\r\n    </FloatingElement>\r\n  );\r\n}\r\n","import { getPoolBasket, PoolInfo, PoolTransactions } from '@project-serum/pool';\r\nimport React, { useMemo, useState } from 'react';\r\nimport FloatingElement from '../../../components/layout/FloatingElement';\r\nimport { Button, Input, Spin, Tabs, Typography } from 'antd';\r\nimport { MintInfo } from '../../../utils/tokens';\r\nimport { useAsyncData } from '../../../utils/fetch-loop';\r\nimport { useConnection } from '../../../utils/connection';\r\nimport { PublicKey } from '@solana/web3.js';\r\nimport tuple from 'immutable-tuple';\r\nimport PoolBasketDisplay from './PoolBasketDisplay';\r\nimport BN from 'bn.js';\r\nimport { notify } from '../../../utils/notifications';\r\nimport { useWallet } from '../../../utils/wallet';\r\nimport { useTokenAccounts } from '../../../utils/markets';\r\nimport { sendTransaction } from '../../../utils/send';\r\n\r\nconst { Text } = Typography;\r\nconst { TabPane } = Tabs;\r\n\r\ninterface PoolCreateRedeemPanel {\r\n  poolInfo: PoolInfo;\r\n  mintInfo: MintInfo;\r\n}\r\n\r\nexport default function PoolCreateRedeemPanel({\r\n  poolInfo,\r\n  mintInfo,\r\n}: PoolCreateRedeemPanel) {\r\n  return (\r\n    <FloatingElement stretchVertical>\r\n      <Tabs>\r\n        <TabPane tab=\"Create\" key=\"create\">\r\n          <CreateRedeemTab\r\n            poolInfo={poolInfo}\r\n            mintInfo={mintInfo}\r\n            tab=\"create\"\r\n          />\r\n        </TabPane>\r\n        <TabPane tab=\"Redeem\" key=\"redeem\">\r\n          <CreateRedeemTab\r\n            poolInfo={poolInfo}\r\n            mintInfo={mintInfo}\r\n            tab=\"redeem\"\r\n          />\r\n        </TabPane>\r\n      </Tabs>\r\n    </FloatingElement>\r\n  );\r\n}\r\n\r\ninterface CreateRedeemInnerPanel {\r\n  poolInfo: PoolInfo;\r\n  mintInfo: MintInfo;\r\n  tab: string;\r\n}\r\n\r\nfunction CreateRedeemTab({ poolInfo, mintInfo, tab }: CreateRedeemInnerPanel) {\r\n  const connection = useConnection();\r\n  const { wallet, connected } = useWallet();\r\n  const [quantity, setQuantity] = useState('');\r\n  const [tokenAccounts] = useTokenAccounts();\r\n  const [submitting, setSubmitting] = useState(false);\r\n\r\n  const action = useMemo(() => {\r\n    const parsedQuantity = Math.round(\r\n      parseFloat(quantity) * 10 ** mintInfo.decimals,\r\n    );\r\n    if (parsedQuantity > 0) {\r\n      if (tab === 'create') {\r\n        return { create: new BN(parsedQuantity) };\r\n      } else {\r\n        return { redeem: new BN(parsedQuantity) };\r\n      }\r\n    }\r\n    return null;\r\n  }, [mintInfo.decimals, quantity, tab]);\r\n\r\n  const [basket, basketLoaded] = useAsyncData(\r\n    async () =>\r\n      action ? await getPoolBasket(connection, poolInfo, action) : null,\r\n    tuple(getPoolBasket, connection, poolInfo.address.toBase58(), action),\r\n  );\r\n\r\n  function findTokenAccount(mint: PublicKey): PublicKey {\r\n    const account = tokenAccounts?.find((account) =>\r\n      account.effectiveMint.equals(mint),\r\n    );\r\n    if (account) {\r\n      return account.pubkey;\r\n    }\r\n    throw new Error('No token account for ' + mint.toBase58());\r\n  }\r\n\r\n  const canSubmit = connected && action && basket;\r\n\r\n  async function onSubmit(e) {\r\n    e.preventDefault();\r\n    if (!action || !basket || !connected || !canSubmit) {\r\n      return;\r\n    }\r\n    setSubmitting(true);\r\n    try {\r\n      const { transaction, signers } = PoolTransactions.execute(\r\n        poolInfo,\r\n        action,\r\n        {\r\n          owner: wallet.publicKey,\r\n          poolTokenAccount: findTokenAccount(poolInfo.state.poolTokenMint),\r\n          assetAccounts: poolInfo.state.assets.map((asset) =>\r\n            findTokenAccount(asset.mint),\r\n          ),\r\n        },\r\n        basket,\r\n      );\r\n      await sendTransaction({ connection, wallet, transaction, signers });\r\n    } catch (e) {\r\n      console.warn(e);\r\n      notify({\r\n        message:\r\n          'Error ' +\r\n          (tab === 'create' ? 'creating' : 'redeeming') +\r\n          ' pool tokens: ' +\r\n          e.message,\r\n        type: 'error',\r\n      });\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <Input\r\n        addonBefore={<>Quantity</>}\r\n        value={quantity}\r\n        onChange={(e) => setQuantity(e.target.value.trim())}\r\n        style={{ marginBottom: 24 }}\r\n      />\r\n      <div>\r\n        {!basket ? (\r\n          basketLoaded ? null : (\r\n            <Spin />\r\n          )\r\n        ) : (\r\n          <>\r\n            <Text>{tab === 'create' ? 'Cost' : 'Proceeds'}: </Text>\r\n            <Text type=\"secondary\">(indicative only)</Text>\r\n            <PoolBasketDisplay poolInfo={poolInfo} basket={basket} />\r\n          </>\r\n        )}\r\n      </div>\r\n      <Button\r\n        htmlType=\"submit\"\r\n        type=\"primary\"\r\n        disabled={!canSubmit || submitting}\r\n      >\r\n        {!connected ? 'Wallet not connected' : 'Submit'}\r\n      </Button>\r\n    </form>\r\n  );\r\n}\r\n","import { PoolInfo } from '@project-serum/pool';\r\nimport React from 'react';\r\nimport { PublicKey } from '@solana/web3.js';\r\nimport { useAccountInfo } from '../../../utils/connection';\r\nimport {\r\n  parseTokenAccountData,\r\n  parseTokenMintData,\r\n} from '../../../utils/tokens';\r\nimport { Spin, Tabs } from 'antd';\r\nimport FloatingElement from '../../../components/layout/FloatingElement';\r\nimport { useTokenAccounts } from '../../../utils/markets';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nexport default function PoolBalancesPanel({\r\n  poolInfo,\r\n}: {\r\n  poolInfo: PoolInfo;\r\n}) {\r\n  return (\r\n    <FloatingElement>\r\n      <Tabs>\r\n        <TabPane tab=\"Wallet Balances\" key=\"wallet\">\r\n          <WalletBalancesTab poolInfo={poolInfo} />\r\n        </TabPane>\r\n        <TabPane tab=\"Pool Balances\" key=\"pool\">\r\n          <PoolBalancesTab poolInfo={poolInfo} />\r\n        </TabPane>\r\n      </Tabs>\r\n    </FloatingElement>\r\n  );\r\n}\r\n\r\nfunction WalletBalancesTab({ poolInfo }: { poolInfo: PoolInfo }) {\r\n  const [tokenAccounts] = useTokenAccounts();\r\n  return (\r\n    <ul>\r\n      {[\r\n        poolInfo.state.poolTokenMint,\r\n        ...poolInfo.state.assets.map((asset) => asset.mint),\r\n      ].map((mint, index) => {\r\n        const tokenAccount = tokenAccounts?.find((account) =>\r\n          account.effectiveMint.equals(mint),\r\n        );\r\n        if (!tokenAccount) {\r\n          return null;\r\n        }\r\n        return (\r\n          <BalanceItem\r\n            key={index}\r\n            mint={mint}\r\n            publicKey={tokenAccount.pubkey}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\nfunction PoolBalancesTab({ poolInfo }: { poolInfo: PoolInfo }) {\r\n  return (\r\n    <ul>\r\n      {poolInfo.state.assets.map((asset, index) => {\r\n        return (\r\n          <BalanceItem\r\n            key={index}\r\n            mint={asset.mint}\r\n            publicKey={asset.vaultAddress}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\ninterface BalanceItemProps {\r\n  mint: PublicKey;\r\n  publicKey: PublicKey;\r\n}\r\n\r\nfunction BalanceItem({ mint, publicKey }: BalanceItemProps) {\r\n  const [mintAccountInfo] = useAccountInfo(mint);\r\n  const [balanceAccountInfo] = useAccountInfo(publicKey);\r\n  let quantityDisplay = <Spin size=\"small\" />;\r\n  if (mintAccountInfo && balanceAccountInfo) {\r\n    const mintInfo = parseTokenMintData(mintAccountInfo.data);\r\n    const accountInfo = parseTokenAccountData(balanceAccountInfo.data);\r\n    quantityDisplay = <>{accountInfo.amount / 10 ** mintInfo.decimals}</>;\r\n  }\r\n\r\n  return (\r\n    <li>\r\n      {quantityDisplay} {mint.toBase58()} {publicKey.toBase58()}\r\n    </li>\r\n  );\r\n}\r\n","import React, { useMemo } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Col, PageHeader, Row, Spin, Typography } from 'antd';\r\nimport { PublicKey } from '@solana/web3.js';\r\nimport { useAccountInfo } from '../../../utils/connection';\r\nimport FloatingElement from '../../../components/layout/FloatingElement';\r\nimport { decodePoolState, PoolInfo } from '@project-serum/pool';\r\nimport PoolInfoPanel from './PoolInfoPanel';\r\nimport { parseTokenMintData } from '../../../utils/tokens';\r\nimport PoolCreateRedeemPanel from './PoolCreateRedeemPanel';\r\nimport PoolBalancesPanel from './PoolBalancesPanel';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst { Text } = Typography;\r\n\r\nexport default function PoolPage() {\r\n  const { poolAddress } = useParams();\r\n  const [poolAccountInfo, poolAccountLoaded] = useAccountInfo(\r\n    isPublicKey(poolAddress) ? new PublicKey(poolAddress) : null,\r\n  );\r\n  const history = useHistory();\r\n\r\n  const poolInfo: PoolInfo | null = useMemo(() => {\r\n    if (!poolAccountInfo) {\r\n      return null;\r\n    }\r\n    try {\r\n      return {\r\n        address: new PublicKey(poolAddress),\r\n        state: decodePoolState(poolAccountInfo.data),\r\n        program: poolAccountInfo.owner,\r\n      };\r\n    } catch (e) {\r\n      return null;\r\n    }\r\n  }, [poolAddress, poolAccountInfo]);\r\n  const [mintAccountInfo, mintAccountInfoLoaded] = useAccountInfo(\r\n    poolInfo?.state.poolTokenMint,\r\n  );\r\n  const mintInfo = useMemo(\r\n    () => (mintAccountInfo ? parseTokenMintData(mintAccountInfo.data) : null),\r\n    [mintAccountInfo],\r\n  );\r\n\r\n  if (poolInfo && mintInfo) {\r\n    return (\r\n      <>\r\n        <PageHeader\r\n          title={<>Pool {poolInfo.address.toBase58()}</>}\r\n          onBack={() => history.push('/pools')}\r\n          subTitle={poolInfo.state.name}\r\n        />\r\n        <Row>\r\n          <Col xs={24} lg={12}>\r\n            <PoolInfoPanel poolInfo={poolInfo} mintInfo={mintInfo} />\r\n          </Col>\r\n          <Col xs={24} lg={12}>\r\n            <PoolCreateRedeemPanel poolInfo={poolInfo} mintInfo={mintInfo} />\r\n          </Col>\r\n          <Col xs={24}>\r\n            <PoolBalancesPanel poolInfo={poolInfo} />\r\n          </Col>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <PageHeader\r\n        title={<>Pool {poolAddress}</>}\r\n        onBack={() => history.push('/pools')}\r\n      />\r\n      <FloatingElement>\r\n        {!poolAccountLoaded || !mintAccountInfoLoaded ? (\r\n          <Spin />\r\n        ) : (\r\n          <Text>Invalid pool</Text>\r\n        )}\r\n      </FloatingElement>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction isPublicKey(address) {\r\n  try {\r\n    new PublicKey(address);\r\n    return true;\r\n  } catch (e) {\r\n    return false;\r\n  }\r\n}\r\n","import styled from 'styled-components';\r\nimport FloatingElement from '../../components/layout/FloatingElement';\r\nimport React, { useState } from 'react';\r\nimport { Button, Input, Typography } from 'antd';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Link from '../../components/Link';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst Wrapper = styled.div`\r\n  max-width: 700px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-top: 24px;\r\n  margin-bottom: 24px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  margin-top: 16px;\r\n  margin-bottom: 48px;\r\n`;\r\n\r\nexport default function PoolListPage() {\r\n  const [poolAddress, setPoolAddress] = useState('');\r\n  const history = useHistory();\r\n\r\n  function onSubmit(e) {\r\n    e.preventDefault();\r\n    history.push(`/pools/${poolAddress}`);\r\n  }\r\n  return (\r\n    <Wrapper>\r\n      <FloatingElement>\r\n        <Title level={3}>Pools</Title>\r\n        <Form onSubmit={onSubmit}>\r\n          <Input\r\n            value={poolAddress}\r\n            onChange={(e) => setPoolAddress(e.target.value.trim())}\r\n            placeholder=\"Pool address\"\r\n          />\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Go\r\n          </Button>\r\n        </Form>\r\n        <Link to=\"/pools/new\">Create new pool</Link>\r\n      </FloatingElement>\r\n    </Wrapper>\r\n  );\r\n}\r\n","import { HashRouter, Route, Switch } from 'react-router-dom';\r\nimport TradePage from './pages/TradePage';\r\nimport OpenOrdersPage from './pages/OpenOrdersPage';\r\nimport React from 'react';\r\nimport BalancesPage from './pages/BalancesPage';\r\nimport ConvertPage from './pages/ConvertPage';\r\nimport BasicLayout from './components/BasicLayout';\r\nimport ListNewMarketPage from './pages/ListNewMarketPage';\r\nimport NewPoolPage from './pages/pools/NewPoolPage';\r\nimport PoolPage from './pages/pools/PoolPage';\r\nimport PoolListPage from './pages/pools/PoolListPage';\r\n\r\nexport function Routes() {\r\n  return (\r\n    <>\r\n      <HashRouter basename={'/'}>\r\n        <BasicLayout>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={TradePage} />\r\n            <Route exact path=\"/orders\" component={OpenOrdersPage} />\r\n            <Route exact path=\"/balances\" component={BalancesPage} />\r\n            <Route exact path=\"/convert\" component={ConvertPage} />\r\n            <Route\r\n              exact\r\n              path=\"/list-new-market\"\r\n              component={ListNewMarketPage}\r\n            />\r\n            <Route exact path=\"/pools\">\r\n              <PoolListPage />\r\n            </Route>\r\n            <Route exact path=\"/pools/new\">\r\n              <NewPoolPage />\r\n            </Route>\r\n            <Route exact path=\"/pools/:poolAddress\">\r\n              <PoolPage />\r\n            </Route>\r\n          </Switch>\r\n        </BasicLayout>\r\n      </HashRouter>\r\n    </>\r\n  );\r\n}\r\n","import React, { Suspense } from 'react';\r\nimport './App.less';\r\nimport { ConnectionProvider } from './utils/connection';\r\nimport { MarketProvider } from './utils/markets';\r\nimport { WalletProvider } from './utils/wallet';\r\nimport { GlobalStyle } from './global_style';\r\nimport { Spin } from 'antd';\r\nimport ErrorBoundary from './components/ErrorBoundary';\r\nimport { Routes } from './routes';\r\nimport { PreferencesProvider } from './utils/preferences';\r\n\r\nexport default function App() {\r\n  return (\r\n    <Suspense fallback={() => <Spin size=\"large\" />}>\r\n      <GlobalStyle />\r\n      <ErrorBoundary>\r\n        <ConnectionProvider>\r\n          <MarketProvider>\r\n            <WalletProvider>\r\n              <PreferencesProvider>\r\n                <Suspense fallback={() => <Spin size=\"large\" />}>\r\n                  <Routes />\r\n                </Suspense>\r\n              </PreferencesProvider>\r\n            </WalletProvider>\r\n          </MarketProvider>\r\n        </ConnectionProvider>\r\n      </ErrorBoundary>\r\n    </Suspense>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\r\n    ),\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.',\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}